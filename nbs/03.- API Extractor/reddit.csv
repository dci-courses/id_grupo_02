title,score,id,subreddit,url,num_comments,body,created
"I'm 100% self taught, landed my first job! My experience!",3473,ctkypf,learnpython,https://www.reddit.com/r/learnpython/comments/ctkypf/im_100_self_taught_landed_my_first_job_my/,378,"Hi all, 

Firstly this is going to be a long post to hopefully help people genuinely looking to commit to becoming a developer by sharing my story of how I went from absolutely zero knowledge of programming (as you can see by my post history) to landing my first python developer role.

Location: UK

To kick things off about a year ago I wasnt happy with the job(s) I was doing, long hours, very low pay, so I came across python by chance. Yes I admit the money was what attracted me alone to start off with as I am quite a money motivated person. Ofcourse I knew and still know it will be a long journey to reach the salaries offered but I have managed to finally get my first step on the ladder by landing a job as a python developer. Enough of the story, lets get on with it.

I will list all of the youtube playlists and channels I watched over and over again. 
Bear in mind whilst reading these books I did watch a lot of videos in between reading aswell!
What books I read, in order. 

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

First book:

Python Crash Course: A Hands-On, Project-Based Introduction to Programming - Eric Matthes
Review: Great first book, my advice, skip the game and django project and just do the matplotlib project for now (come back to django later down the line once you understand the HTTP protocol and how requests work)

10/10 recommend

p.s. I know a lot of people recommend reading Automate the boring stuff and I regret not reading it after this one!

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Book 2:

Learning python - Mark Lutz
Review: Very good book for getting a grasp on python fundamentals. I would not of read this without first reading Python crash course. You will need to supplement this book with looking up videos on youtube for a deeper understanding as this book is very dry to read and long! 1400 pages! I found a pdf format online for free to read. Don't need to buy it.

10/10 recommend (supplement with videos)

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Book 3:

Programming Python - Mark Lutz
Review: Very good book. I would not read this book word for word. Skim through the book to get an understanding. I would ignore following the projects in the book. Don't spend too much time on it. (Ignore tkinter chapters)

6/10 = Would I read again? Its worth having on your computer to refer to IMO. - You can find this online for free in pdf. 1300 pages.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

From here on I pretty much decided after researching jobs and where the demand was for python developers, that I was going to learn django and learn the web based side of things from here on out.

Most of this from here on is django specific so if you want to learn python for data science or another area you may want to use this as a template and just change the books and videos to meet your needs. O'reilly has a bunch of books on python, there are also so many videos on youtube to help aswell.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Before you jump into django / flask wouldn't it be best to learn how the internet works first? Learn from my mistakes and learn this first before django!

https://www.youtube.com/watch?v=e4S8zfLdLgQ&list=PLLy4MeON3hKCtMvu4yA-DKRG_gsgRR1jM&index=45&t=0s
I believe from memory there is also a part 2.

Learn what the http protocol is, learn how requests are sent to a server, learn the difference between GET, POST, PUT, DELETE.

Learnt that? Great, lets move on.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Resource - https://wsvincent.com/

Book 4:

Django for beginners - WS Vincent
Review: Absolutely great first book for learning django! I would highly reccomend also following https://www.djangoproject.com/start/ alongside this book to get you started.

10/10 - This is a must read imo.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Book 5:

I keep hearing the words API, and REST, wtf are they?

Have no fear my friend!
Watch this first - https://www.youtube.com/watch?v=Q-BpqyOT3a8

REST APIs with Django - WS Vincent
Review: Great book to learn how to use Django REST API and how it works. 
8/10 would recommend, however it isnt a very big book and I felt the book wasn't great value for money, I felt at this point I was starting to ask questions in my own mind when reading code on how things could be implemented and expanded on and I felt this book could of had a bit more detail rather than just pointing to external resources. 
However this book does get you going on how to use django REST and sets you up nicely to learn more advanced material.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

At this point I was starting to consider when I would be ready to start applying to jobs. 
Start jotting down ideas for any small projects you want to make, for myself it was an REST API app showing CRUD functionality, and a working django website.

I learned basic HTML and CSS to have a better understanding of how templates work and how objects / data is sent from the backend and displayed in the front end and vice versa.

HTML/CSS series - https://www.youtube.com/playlist?list=PL0eyrZgxdwhwNC5ppZo_dYGVjerQY3xYU

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

You're still here? Congrats!

I had done a lot of reading and hearing about data structures and algorithms and how you needed a computer science degree to learn it. 

Book 6 - Cracking the coding interview - Gayle Laakmann McDowell
Review: What to say about this book? Wow, this book was a massive learning curve for me! Considering most days I was spending 6-8 hours committed to learning, some days I would only manage to get through half a page. This book took me 6-8 weeks to go through from memory. All of the examples are in Java so I had to look up corresponding tests in python and reverse engineer to see what was going on.

10/10 This is an absolute must read for anyone. Buy it, read it, understand it, stick it on your shelf, read it again in the future.

Videos to supplement - https://www.udacity.com/course/data-structures-and-algorithms-in-python--ud513
Cracking the coding interview book also has a corresponding video course on youtube by the author, this helps a lot!

https://runestone.academy/runestone/books/published/pythonds/index.html - this is also a fantastic resource in python!

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Ahh yes, I think I'm ready to apply for roles! Slow down there young spud! We are not finished!

Test Driven Development - Harry Percival

https://www.obeythetestinggoat.com/book/bibliography.html#seceng

Review: MUST READ, MUST READ. No excuses, get it done, go through it twice, follow the projects, every single interview will involve questions about TDD!

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

From here I wanted to have a better understanding of the internet. So I read:

Computer networking: A top down approach

https://github.com/arasty/books/blob/master/0.Computer%20Networking%20-%20A%20Top-Down%20Approach%20(6th%20Edition).pdf

Review: If you do want a better understanding of the internet / networking then skim through this book. As soon as you understand http protocol, TCP/IP, then close the book and move on.

6/10 - Not a must read, but nice to know!

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

From here on I didn't read any other books. Most of my time was spent creating my projects to put in a portfolio, watching more videos, getting confused and solving my own problems by building a site using django and learning along the way, and reading the official django documentation.

To keep it short and sweet from here on out I am just going to list the youtubers who truly helped me out, technically and also keeping my motivations high!

https://www.youtube.com/channel/UCCezIgC97PvUuR4_gbFUs5g - Corey Schafer - 10/10, not going to list any other independent python tutorials, this guy is all you need!
https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ - FreeCodeCamp - Fantastic resource, so much on here, only watch what you need to learn, dont get caught up in trying to learn everything the channel has to offer.

The two channels above are all I would recommend for video resources. Freecodecamp also does a good SQL for beginners which is worth watching for any developer.

Other channels 10/10 worth checking out

https://www.youtube.com/channel/UCZ9qFEC82qM6Pk-54Q4TVWA - Andy Sterkowitz
https://www.youtube.com/channel/UCu1xbgCV5o48h_BYCQD7KJg - Chris Sean (my personal favorite)

Traversymedia and thenewboston are both great channels as well for a slightly different way of explaining things if you truly do get stuck.

Interviews:

So after I made a few projects and uploaded them to my github, I put the github link on my CV aswell. I made a linkedin profile aswell.

You may experience a bucket load of recruiters contacting you if you have set up a new linkedin.

My tips for dealing with recruiters (based on my own mistakes):

- Always tell them what you are looking for, DO NOT let them push you forward for a role or arrange interviews on your behalf for roles you are not comfortable with. 
- If they are aggressive and abusive (yes I have had this), simply hang up the phone, block their number and move on. 
- Tell them ""I am looking for a junior python role using django ONLY or similar framework"" (ofcourse you can edit this to your area of knowledge)
- I had so many phone calls I stopped accepting calls as over 50% of calls were roles that were too senior for me or calls about roles I had already applied/spoken about. I set a voicemail up telling them to email me and I will get back to them. Take this advice please, it will save you repeating yourself 20 times a day.
- You have had an email about a job role? They will usually want to speak to you on the phone first, however I learned to reply along the lines of ""please understand I get contacted frequently by many recruiters, please can you send over a job spec for me to look over prior to arranging a call"".
This works majority of the time, if they don't reply, trust me you haven't lost out!
- They may ask you on the phone ""Where have you already applied for?"" Be confident and simply reply ""I would rather not say"", hold your ground, its your own business, not theirs, if they have a role for a company to put to you then lets hear it, be respectful and polite but don't let them push you around, many will try to!
- They have told you on the phone about a company you have already applied for? ""Sorry I am already engaged with that company"" they will press you on this ""With who? How long ago? What stage are you on?"" Once again, simply say ""I would rather not say"" I have never had a recruiter push me after I have responded that way.
- Salary ""What are your salary expectations?"" ""What salary are you on at the moment?"" My advice? Simply reply ""Well, what does the role pay?"" Its as simple as that, if a company cant be open and honest about what the salary range is for a junior level role are they even worth wasting your time on? Your current salary is nobodies business, your answer: ""I would rather not say""

If you apply directly to a company through their own website / indeed or any similar jobsite they may ask for salary expectations. I did put in salary expectations for my current job when I applied directly. So just know when to do it and when not to. Applying directly with a good cover letter has most of the time netted me a positive response.

If you have got this far I have no doubt you can become a developer. Yes I am only junior. It has been a long road for me and the learning curve has been insane. I have gone for weeks on end sometimes thinking I am not getting anywhere and wondering when the end will come. You are not alone. Its a small sacrifice in the long term if you truly want to make this your career.

Interviews:

If you manage to land a phone call and/or a face to face interview here are my tips:

- Do not put anything on your CV you do not know in detail. It is easy to expose in a technical interview. 99% of the time questions will be about your CV.
- What do you know about the company? Why do you want to work here? Do your research, I usually tried to memorize 2-3 things in reasonable detail about the company, it shows a good interest in them.
Go on their website, read what they do, learn it, memorize, think ""Why would I want to work here?"" answer that with a good answer and you should be good to go.
- Dress smart! Yes they may wear tshirt and jeans to work. You do not work there yet. Business dress all the time! Shirt, tie, suit if you can! (EDIT: I am in the UK, business dress based on my own work experience in the UK is standard for most jobs, if you are unsure of dress code ask your potential employer prior to interview as I don't want to mislead anyone)
- Be friendly, polite, act keen (not desperate)
- ""Would you like a drink of coffee/water before we start"" the answer to this is YES PLEASE! You will need that water to sip on when your mouth goes dry! haha! I've been there!
- Trouble answering a question? Relax, pause, and just say ""let me think one moment"", if you don't know the answer, just say ""I don't know the answer"" its good to be honest, I have always had a good response by being honest when I have not known the answer! 

I hope this post will help you if you are struggling to find a path. I wish you all the best and good luck!

TLDR: If you want to change your life. Read it.",1566412455.0
I solved a real life problem with python for the 1st time and I feel like a wizard,2614,xy1swx,learnpython,https://www.reddit.com/r/learnpython/comments/xy1swx/i_solved_a_real_life_problem_with_python_for_the/,202,"Okay, this is probably going to sound super dumb, but today I'm putting the finishing touches on a program that downloads a data file for me (into a folder of my choosing!!! this part tripped me up for a while) and renames it according to today's date and I feel like a goddamn SORCERESS.

I showed it to my boyfriend, and then I felt kinda sheepish, because like, okay, it's just a file but .... it's so incredible for me to just see it working!! I know it sounds simple, but I had to navigate around so many barriers to make it work, and now that I've mastered this, so many other amazing projects feel accessible and understandable to me.

I'm just so happy! It feels like all my hard work teaching myself this stuff has paid off. Just wanted to share with you guys. :)

**EDIT:** OMG, I am overwhelmed by the support of this community!! Thank you all so much for the kind words. If y'all want to take a look at my code, I pasted it here: [https://gist.github.com/POPULARWEB6231/9da87879de572b13e715a6c901355400](https://gist.github.com/POPULARWEB6231/9da87879de572b13e715a6c901355400) Thanks again for the encouragement, guys!",1665155848.0
"The online course for ""Automate the Boring Stuff with Python"" is free to sign up this week.",2307,bz3rxv,learnpython,https://www.reddit.com/r/learnpython/comments/bz3rxv/the_online_course_for_automate_the_boring_stuff/,238,"School's out, but that doesn't mean you have to stop learning. The online video course from the author of ""Automate the Boring Stuff with Python"" (that's me) is free to sign up for this week. This sign up will give you life time access to the course. Just use the following link:

https://www.udemy.com/automate/?couponCode=SCHOOLS_OUT2

This course is made for complete beginners who have no experience programming. It's ""programming for office workers"" because it skips computer science and teaches you how to do practical tasks: web scraping, updating Excel spreadsheets, parsing PDFs and Word documents, sending out automated email and text notifications, controlling the mouse and keyboard, and more. If you're an experienced programming, you can skip the first half (which covers basic programming concepts) and directly learn about several useful modules for Python.

(This code expires on June14th. Previously I'd give out codes to folks who asked me after the expiration, but it turns into a logistical headache to keep making coupons each time someone asked, so the deadline is firm.)

If you'd like to support me by using an affiliate code (or encourage yourself to finish the course since you put money down on it), you can also use one of these links to pay what you like: (MODS: if this is too spammy, I can take these links down) (EDIT: Udemy changed their promotion scheme. You'll have to use this new LOWESTPRICE code, which I've set to the lowest allowed. It's $14 now, but that might change in the future.)

* https://www.udemy.com/course/automate/?couponCode=LOWESTPRICE

This online course covers most, but not quite everything, in the Automate the Boring Stuff with Python book, which is freely available online under a Creative Commons license. You can read it at: https://automatetheboringstuff.com/ (The book has a few more examples, and also covers programmatically creating/editing image files, for example).

If you like the course (or don't like it), please remember to rate it.

Good luck on your programming journey!",1560203093.0
"As a Gift to the Community, I'm Making my Python Book Free for 72 hours!",2150,kv61rj,learnpython,https://www.reddit.com/r/learnpython/comments/kv61rj/as_a_gift_to_the_community_im_making_my_python/,276,"**Python 101 2nd Edition** is the latest version of Python 101. This book is meant to help you learn Python and then go beyond the basics. I've always felt that a beginner's book should teach more than syntax. If you'd like to try out Python 101, you can do so for **FREE** for the next 72 hours by using the following link: [https://leanpub.com/py101/c/mvp2021](https://leanpub.com/py101/c/mvp2021)

If you have a Gumroad account, you can get the book here ([https://gumroad.com/l/pypy101](https://gumroad.com/l/pypy101)) for free using this coupon: **mvp2021**

The last time I made Python 101 free for 3 days, I got 30-40,000 new readers. Let's see if we can beat that!

The second edition of **Python 101** is completely rewritten from the ground up. In this book, you will learn the Python programming language and lots more.

This book is split up into four sections:

1. The Python Language
2. Intermediate Topics
3. Creating Sample Applications
4. Distributing Your Code

Check out [Leanpub](https://leanpub.com/py101/c/mvp2021) or [Gumroad](https://gumroad.com/l/pypy101) for full details on what all is in the book.

I have several other Python books, so if you like Python 101, you should check out my other works:

* [Pillow: Image Processing with Python](https://www.kickstarter.com/projects/driscollis/image-processing-with-python)
* [Creating GUI Applications with wxPython](https://leanpub.com/creatingapplicationswithwxpython/)
* [Jupyter Notebook 101](https://leanpub.com/jupyternotebook101/)
* [ReportLab: PDF Processing with Python](https://leanpub.com/reportlab)
* [Python 201: Intermediate Python](https://leanpub.com/python201)

Or just check out my [Blog for Python tutorials](https://www.blog.pythonlibrary.org/).  If you like to keep up with Python, you can follow me on [Twitter](https://twitter.com/driscollis). You can also [buy me a coffee](https://www.buymeacoffee.com/mousevspython)",1610382481.0
"""Automate the Boring Stuff with Python"" Udemy course free to sign up until May 7th.",2063,gbp0a1,learnpython,https://www.reddit.com/r/learnpython/comments/gbp0a1/automate_the_boring_stuff_with_python_udemy/,165,"https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: MAY2020FREE (on Monday the code changes to MAY2020FREE2)

https://www.udemy.com/course/automate/?couponCode=MAY2020FREE

This promo code works until May 7th (I can't extend it past that). Sometimes it takes 30 minutes or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

You can also purchase the course at a discount using my code MAY2020 or JUN2020 (or whatever month/year it is) or clicking https://inventwithpython.com/automateudemy to redirect to the latest discount code. I have to manually renew this each month (until I get that automation script done). And the cheapest I can offer the course is about $14 to $16. (Meanwhile, this lets Udemy undercut my discount by offering it for $12, which means I don't get the credit for referral signups. Blerg.)

Frequently Asked Questions:

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is now available online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid- or late-2020. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with.",1588362575.0
"After 5 years of learning Python as a hobby, yesterday I did my first contribution to an open source project!",1970,he7vpy,learnpython,https://www.reddit.com/r/learnpython/comments/he7vpy/after_5_years_of_learning_python_as_a_hobby/,60,"About 5 years ago I started to study programming on and off as a hobby. I love reading articles, posts and books about Python and AutoHotKey, and during these years I have done some webscraping projects and scripts for myself. Nothing too complicated, just enough code to do what I needed, and that's why I still consider myself a newbie.

As someone who uses lots of free open-source software, I always wondered if someday I would find an open source project I could actually contribute to. It could be anything, but finding something is just so difficult! Everywhere I looked, all the projects were either too complicated for a hobbyist programmer like me or used a programming language I do not know.

But this weekend I got lucky. As I was trying some packages (or plugins) for my favorite text editor (Sublime Text), I noticed that [**one of them**](https://github.com/akshaykumar90/sublime-font-cycler), which I use extensively, could be improved by adding a very simple feature.

Without thinking too much about it, I opened an issue on GitHub asking the plugin author if he could implement it. But then I remembered that Sublime Text packages are coded in Python and decided to check the `.py` file by myself.

I usually have trouble reading other people's code, but to my surprise this code was simple enough that I could understand it! And even better, the feature that I wanted to see implemented could be added with just two lines of code!

So that's exactly what I did! After that, I looked for some git tutorials to learn how to make a pull request (I had never used git before), double checked that my code was OK, updated the project `readme.md` file and commited the changes.

Fortunately, some hours after that the plugin author accepted the changes I proposed and they were uploaded to all the package users. Mission accomplished! 

So, fellow hobbyist Python programmers, don't stop looking for a project you can contribute to. One day you may find it. Even if it takes 5 years 😂",1592886269.0
"Just saved my company like $40 Grand a Year and I have no one else in my life that codes to tell, apart from my wife of course",1902,p1cgeu,learnpython,https://www.reddit.com/r/learnpython/comments/p1cgeu/just_saved_my_company_like_40_grand_a_year_and_i/,185,"To keep things simple, I figured out a way to Map a bunch of MP4 files to Excel files and create an excel file that is imported back into our main software

With the help of some of you guys here, I wrote this:

    from pathlib import Path
    import glob
 
    BASE_DIR = Path(r""C:\Folder"")
    files = BASE_DIR.glob(""*.mp4"")


    for f in files:
        print(f)
        new_name = f.stem.split(""_"")[1]
        target = BASE_DIR / f""{new_name}.video""
        f.rename(target)

What happens is this script basically grabs whatever name convention a video file has and shrinks it to a 9 digit number that can then be mapped to an excel file using a macro i also created

we were apparently paying a company like $40 grand a year to do this

the whole premise of this is export data from software --> do stuff to it --> import it back into software to have it mapped directly to the video file

My director was so surprised i actually pulled this off that he wants to find every competitor of this specific company and sell them this process (he doesnt know what goes into it yet, just knows it works)

just wanted to tell someone

first big real achievement with Python for me :)

BIG SHOUTOUT to u/ireadyourmedrecord

my company owes you money lol

Update: I WILL be asking for a raise soon since i just crossed my yearly for this job, possibly a bonus as well. No one has access to this code since it live in a jupyter notebook and isnt automated yet on any local computer.",1628549267.0
"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code JUN2020FREE",1831,guu0nq,learnpython,https://www.reddit.com/r/learnpython/comments/guu0nq/automate_the_boring_stuff_with_python_online/,127,"EDIT: Whoops, sorry, I've been... busy... the last few days. I just made the JUN2020FREE2 code, but it might take an hour or so to take effect. They'll show you the $16 ""discount"" using the link until then, just hold off a bit and check later. JUN2020FREE2 should work until 06/07/2020 around 2pm Pacific.

https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: JUN2020FREE (on Monday the code changes to JUN2020FREE2)

https://www.udemy.com/course/automate/?couponCode=JUN2020FREE2

This promo code works until June 7th (I can't extend it past that). Sometimes it takes 30 minutes or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

You can also purchase the course at a discount using my code MAY2020 or JUN2020 (or whatever month/year it is) or clicking https://inventwithpython.com/automateudemy to redirect to the latest discount code. I have to manually renew this each month (until I get that automation script done). And the cheapest I can offer the course is about $14 to $16. (Meanwhile, this lets Udemy undercut my discount by offering it for $12, which means I don't get the credit for referral signups. Blerg.)

Frequently Asked Questions:

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is now available online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid- or late-2020. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with.",1591048621.0
Beginner's Python Cheat Sheets (updated),1763,djqm6v,learnpython,https://www.reddit.com/r/learnpython/comments/djqm6v/beginners_python_cheat_sheets_updated/,129,"Hi everyone! A few years ago I made a set of cheat sheets to go along with the first edition of Python Crash Course. I recently finished updating the cheat sheets to match the changes that were made to the second edition of the book. These sheets aim to remind you of Python's syntax, but they also include brief explanations of the concepts behind the syntax as well. These are all free to download, and they are not specific to the book - they should be helpful to many people, regardless of what your primary learning resource is. 

The first sheet provides an overview of many basic concepts in Python. Individual sheets cover lists, dictionaries, if statements and while loops, functions,  classes, and more. There are also library-specific cheat sheets for Pygame, Matplotlib, Plotly, and Django. You can download individual sheets, download a pdf that includes all the sheets in one document, or download a zip file that includes each sheet in a separate pdf file. Here's an [overview of all the sheets](https://ehmatthes.github.io/pcc_2e/cheat_sheets/cheat_sheets/), with links to download whichever version is most appropriate for you.

Cheat sheets have been really helpful to me at times when learning a new language or framework, and I continue to use the library-focused sheets when starting new projects. I hope these are useful to many of you as well.",1571419003.0
Automate the Boring Stuff with Python Udemy course free to sign up until April 7th.,1752,ft8tv2,learnpython,https://www.reddit.com/r/learnpython/comments/ft8tv2/automate_the_boring_stuff_with_python_udemy/,146,"https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

[(EDIT: The HTML book is free online, but you can get the PDF/Kindle ebook of Automate the Boring Stuff with Python in this week's Humble Bundle in support of cornavirus relief (Direct Relief, International Rescue Committee, Doctors Without Borders, Partners In Health)](https://www.humblebundle.com/conquer-covid19-bundle)

You can also click this link or manually enter the code: APR2020FREE (on Saturday the code changes to APR2020FREE2)

https://www.udemy.com/course/automate/?couponCode=APR2020FREE

This promo code works until April 7th (I can't extend it past that). Sometimes it takes 30 minutes or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month.

You can also purchase the course at a discount using my code APR2020 or MAY2020 (or whatever month/year it is) or clicking https://inventwithpython.com/automateudemy to redirect to the latest discount code. I have to manually renew this each month (until I get that automation script done). And the cheapest I can offer the course is about $14 to $16. (Meanwhile, this lets Udemy undercut my discount by offering it for $12, which means I don't get the credit for referral signups. Blerg.)

Frequently Asked Questions:

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is now available online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid- or late-2020. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with.",1585775712.0
"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code",1673,i1w07u,learnpython,https://www.reddit.com/r/learnpython/comments/i1w07u/automate_the_boring_stuff_with_python_online/,139,"https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: COPSHOTMEINPORTLAND2

https://www.udemy.com/course/automate/?couponCode=COPSHOTMEINPORTLAND2

This promo code works until August 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to COPSHOTMEINPORTLAND2 on the 4th.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

You can also purchase the course at a discount using my code COPSHOTMEINPORTLAND2 or clicking https://inventwithpython.com/automateudemy to redirect to the latest discount code. I have to manually renew this each month (until I get that automation script done). And the cheapest I can offer the course is about $16 to $18. (Meanwhile, this lets Udemy undercut my discount by offering it for $12, and I don't get the credit for those referral signups. Blerg.)

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is now available online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid- or late-2020. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with.d",1596303018.0
I programmed someone out of a job and now I feel bad,1673,icpt8d,learnpython,https://www.reddit.com/r/learnpython/comments/icpt8d/i_programmed_someone_out_of_a_job_and_now_i_feel/,436,"We have positions at my job whose duty was to do data entry for our imaging system - they get hundreds of files every day and manually type in the identifier info for the imaging system so the docs can be stored and retrieved.

I knew our system had an automated data entry method, but it wasn't being used. It mattered because the department I lead is reliant on them entering those files in a timely manner. This is our busiest time of year and when I asked them if they could go faster they told me there was nothing they could do.

I write **a lot** of python, so I knew this was achievable. At first I just automated the part that affected me. It was easy enough, the files are standardized with the most important ID in the filename, so it was just a matter of parsing and building the ""index"" file that is necessary for import. I added some bells and whistles that I knew would help too, got pretty deep into Image Processing and OCR. PIL, OpenCV2, and Tesseract are now very familiar to me which was a lot of fun to learn. It's incredible the resources that are out there, and the computer vision field is so mature that it was a bit shocking how accessible it was.

But then the administration found out and wanted it applied elsewhere.... 

I found out today they're eliminating one of the jobs now that a lot of the process is automated. They just don't need so many people doing it anymore. 

Honestly it feels like shit, she is a nice person and I know this is going to crush her. She hasn't heard yet, but her coworker and I talked about it. It was only a matter of time before it happened, though he wasn't expecting it to be so soon. But with COVID19 they're looking for ways to trim fat and I guess this was an easy salary to eliminate. 

Feels bad man, I mentioned to her I'd be happy to help her learn Python but she wasn't interested... Oh well I guess. 

Yay python? :(

edit: cleaned some shit up",1597850946.0
Second edition of Automate the Boring Stuff with Python is now free online.,1601,eia22b,learnpython,https://www.reddit.com/r/learnpython/comments/eia22b/second_edition_of_automate_the_boring_stuff_with/,89,"A list of the new sections is here: https://inventwithpython.com/blog/2019/12/31/reading-guide-to-automate-the-boring-stuff-second-edition-for-readers-of-the-first-edition/

The table of contents and full book for the second edition is here: https://automatetheboringstuff.com/2e/",1577832245.0
[Update/Final Product] My dad is a programmer and I want to hand-sew a simple program as a gift to him.,1523,jzqcve,learnpython,https://www.reddit.com/r/learnpython/comments/jzqcve/updatefinal_product_my_dad_is_a_programmer_and_i/,68,"A few days ago, I requested help with a couple lines of code for an embroidery project as a gift to my dad, a computer science professor. You guys offered me a lot of feedback and also requested to see the final product. Welp, here it is! ([link to imgur album](http://imgur.com/gallery/ta90l8K)) It's not perfect (looking at you, wonky edges) but it *is* made with love. I had only done a tiny bit of coding before this project but I can confidently say this is the longest I've ever spent on twelve lines of code.

Thank you everyone for the help! I received a lot of great suggestions after I had already cut the fabric and started stitching. Even if I didn't use your suggestion, I still appreciate it.

I won't be able to see his reaction in person since we're spending Christmas apart for the first time in my life due to the pandemic. It makes me sad but it's the right thing to do. He's a great dad and I want him to stick around for a while so Google Hangouts will be good enough for us this year.

Thanks again and stay safe.",1606165149.0
Holy heck I'm addicted.,1501,gdzu6e,learnpython,https://www.reddit.com/r/learnpython/comments/gdzu6e/holy_heck_im_addicted/,177,"So I work with a financial firm. We had to go back and get quarterly statements from December for all accounts. Its over 350 accounts. Not all the statements are similar - some are a couple of pages and others are 15-20 pages. The company that generates the statements sent us a PDF of ALL statements. That bad boy was over 3800 pages long. 

So as we are doing these reviews, we fill out review paperwork, and then we have to go through this HUGE pdf to find the corresponding account. When I search for their name, it literally took 20 seconds or more to search the whole document. Then, I have to print the PDF and just save the respective pages, then save with the name of the account. 

Last night I thought I'd try a PDF parser. I've done some general Python, but nothing like this. I used PyPDF2. 

**I'm going to go through my thought process, but I can't really post code because it's honestly a mess and I don't know if my boss would appreciate it. At the end I'll pose an issue I had. And state what I learned** 

I had to find a way to find where the first page of each statement was. Guess what? They all have ""Page 1 of"", so I parsed each page and had it return every page in which that string exists. Then, I had to find how many pages were in each statement, since the page number varies. So if index 0 and index 16 contained that string, then I knew 0-15 were one statement. 

Now I'm able to split it, but I needed to save it with the filename as the account number. Heck yes, the account number is listed on each first page. And the account number begins with the same three characters. 

I iterated (is that the phrase) through the document. I grabbed the first page of each statement and set it as the first page. Then I got the index of the next page that has Page 1, and just subtracted 1. Then, I searched for the first three characters of the account number, and when it found it, return the index, then grab the following 7 characters which is the complete account number. Then it wrote the files!

**Issue** so when I was actually splitting the documents, it kept running out of memory. I was using Visual Studio Code. I have 16gb ram, and task manager showed it hitting 2.5gb before the process was killed because of memory. I had to go into the loop and change the beginning index ever 25-30 PDFs generated. I was trying to find a way to allocate more memory, but I couldn't find a way. Any help is appreciated. If the code for the loop helps, I may can post that part. 

**What I learned** this was incredible. While it was obviously a challenge (it took 20 minutes to pip install PyPDF2 and then get it to not throw an error in Visual Studio(Windows 10)) it's amazing to fathom I was able to actually do it. It took 5 hours (the SO was shocked that I was up until 3am). But I couldn't stop. The loop was pissing my off because it kept generating the same statement. I am not sure what really fixed it, because I made a couple of changes at one point and it worked. 

My boss is freaking beaming right now. I'm beaming. He called me in to his office 20 minutes after I showed him the final product. He asked if I'd be willing to take on some more of this automation during work hours. He'd take off some of my workload, and also give me a 15% raise. 

It's been a ramble but if you made it this far then you obviously are resilient enough to be a programmer.

Edit: I want to add this. For those of you like me. Even if you're NEWER than me. You can learn the language, watch videos, do practice problems, but it takes a tremendous about of resiliency and patience to produce real-world and practical applications. It took a lot to learn what's very simple for others. I probably looked at 50 web pages trying to find an explanation that made sense. I wanted to give up a couple of times but I really wanted to come in to work today with a finished product.So I work with a financial firm. We had to go back and get quarterly statements from December for all accounts. Its over 350 accounts. Not all the statements are similar - some are a couple of pages and others are 15-20 pages. The company that generates the statements sent us a PDF of ALL statements. That bad boy was over 3800 pages long. 

Edit2: I am in shock. This isn't in writing, but apparently the raise is verbally approved, but they are working to get paperwork drawn up. Right now, and this is all verbal, I'll get the raise. I just got an email from our IT guy that he was told to find a ""top of the line programming computer"" as my boss apparently put it. So when it's formal, I'll be getting a Dell XPS 15 (i9, 64gb ram, 1TB), dock, dual monitors. He (IT) said that it's probably way overkill, but the boss said to get it anyways. Boss asked if I thought about this full time. I was honestly so nervous (and still am) I just said ""heck yeah Dave"". He said all ""the little programs you make"" are property of the company, and they are not to leave the laptop. He also apologized for being so resistant in the past about implementing various technology that I had recommended. He then asked how I can learn about more stuff if I ""need to go to college or take classes"". I told him I'd love to go to college for it, but it's not really my personal budget and that there are some great online programs. He just said, ""hmm well find and online program and get info on pricing and timeline; let get this official and go from there"".

Edited to remove the double text.",1588692569.0
I'm super annoyed and taking it out on learnpython,1432,byfigg,learnpython,https://www.reddit.com/r/learnpython/comments/byfigg/im_super_annoyed_and_taking_it_out_on_learnpython/,248,"I've been a senior level software engineer for over 10 years. I have a ton of experience with multiple languages. I've been doing a lot of hard stuff for a very long time. I asked a twitter question to a pretty well-known person in the area I work in the other day, and he got really huffy, assumed that I had no idea what I was doing, told me to not ever do what I was asking about, and told me to go find a different job because I'm not competent to do the one I'm at right now. Never even asked why I was trying to do things a certain way, and just assumed that I was a n00b causing trouble.

&#x200B;

It made me really fucking angry. And it also made me think about how we deal with people we don't know, make assumptions based on questions, and tend to talk shit to people who aren't a part of our in-circle. About how things that people have done for a long time tend to get easier and how we forget how much we didn't know when we were getting started.

&#x200B;

So, I'm taking all my anger at that person out on this sub. I'm going to spend all day tomorrow answering all the questions I possibly can on learnpython in the kindest way I can and with a mentoring attitude where I'll try to understand where you're coming from, what you're trying to achieve, what might be the best way to get to it, and maybe a little extra handholding along the way.

&#x200B;

Be the change you want to see, right?

&#x200B;

Ask me anything about python and anything related to python. I'll spend 12 hours tomorrow answering every question I can.

&#x200B;

&#x200B;

EDIT: man, I was 50/50 on this post getting thrashed by the mods for being a rant. I'm so happy this is getting a lot of responses!

&#x200B;

First of all, thank you to all of you well-wishers encouraging me to not take it so hard. I do take it hard, and that's why I'm trying to resist and do something different with my frustration. To the person who said there needs to be more people like me in the world . . . thanks. That made my day.

&#x200B;

Here are some caveats about my approach: I am not a computer scientist. I don't come from that background. Many of my opinions are not orthodox. I spent the first 20 of my professional life as a classical violinist and music theory teacher. My first technology job was after I read a book on SQL, and my first 3 jobs were nothing but writing SQL. So a lot of my background has come from a data-centric place. It's nice that data is a big thing now! Over the last 13 years though, I've learned python and other languages mostly the hard way, but I've also done a ton of reading academic textbooks because that's how I grew up and learned music theory. So there's going to be some answers where I dive deep into computer science theory and practice and programming language design. Anything I say that isn't verbatim code is just one person's opinion. My word is not gospel. But it's what I have to offer, and I've thought about it a lot.

&#x200B;

I hope I can be really useful answering questions tomorrow and truly kind and helpful to everyone.

&#x200B;

&#x200B;

EditEditEdkt: I changed my mind about being so hostile to the person who gilded me. Thank you kind person, for giving me an imaginary thing to put in my butt while I masturbate.",1560046646.0
"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code FEB2021FREE",1413,la98y1,learnpython,https://www.reddit.com/r/learnpython/comments/la98y1/automate_the_boring_stuff_with_python_online/,110,"https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: FEB2021FREE

https://www.udemy.com/course/automate/?couponCode=FEB2021FREE

This promo code works until the 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to FEB2021FREE2 in three days.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

You can also purchase the course at a discount using my code JAN2021CODE or FEB2021CODE (try both if one doesn't work) or clicking https://inventwithpython.com/automateudemy to redirect to the latest discount code. I have to manually renew this each month (until I get that automation script done). And the cheapest I can offer the course is about $16 to $18. (Meanwhile, this lets Udemy undercut my discount by offering it for $12, and I don't get the credit for those referral signups. Blerg.)

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid-2021. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",1612201810.0
"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code JAN2021FREE",1401,krs99p,learnpython,https://www.reddit.com/r/learnpython/comments/krs99p/automate_the_boring_stuff_with_python_online/,121,"https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: JAN2021FREE

https://www.udemy.com/course/automate/?couponCode=JAN2021FREE

This promo code works until the 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to JAN2021FREE2 in three days.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

You can also purchase the course at a discount using my code JAN2021CODE or clicking https://inventwithpython.com/automateudemy to redirect to the latest discount code. I have to manually renew this each month (until I get that automation script done). And the cheapest I can offer the course is about $16 to $18. (Meanwhile, this lets Udemy undercut my discount by offering it for $12, and I don't get the credit for those referral signups. Blerg.)

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid-2021. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with.",1609953343.0
I made a Python script that tracks Elon Musk's tweets and if he tweets about Doge coin it buys $20 of $DOGE on Robinhood,1383,kqk21f,learnpython,https://www.reddit.com/r/learnpython/comments/kqk21f/i_made_a_python_script_that_tracks_elon_musks/,117,It uses the Twitter API and an unofficial Robinhood API. Feel free to critique it if you see anything that could be improved! [Github](https://github.com/djrdog578/DelonMusk/blob/master/src.py),1609800372.0
"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code OCT2020REALFREE",1347,j3eww7,learnpython,https://www.reddit.com/r/learnpython/comments/j3eww7/automate_the_boring_stuff_with_python_online/,105,"https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: OCT2020REALFREE

https://www.udemy.com/course/automate/?couponCode=OCT2020REALFREE

(I messed up this month and OCT2020FREE is the discount, but not free, code. Whoops.)

This promo code works until the 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to OCT2020REALFREE2 on the 4th.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

You can also purchase the course at a discount using my code OCT2020REALFREE or clicking https://inventwithpython.com/automateudemy to redirect to the latest discount code. I have to manually renew this each month (until I get that automation script done). And the cheapest I can offer the course is about $16 to $18. (Meanwhile, this lets Udemy undercut my discount by offering it for $12, and I don't get the credit for those referral signups. Blerg.)

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in late-2020. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with.",1601578904.0
HOW HAVE I BEEN SO BLIND!!!!,1313,lj2l0e,learnpython,https://www.reddit.com/r/learnpython/comments/lj2l0e/how_have_i_been_so_blind/,201,"IT IS ALL OBJECT....

EVERYTHING IS OBEJCT!!!! 

EVERYTHING!!!!!

OH MY GOD!!!!

IT'S ALL OBJECT!!!!!! 

AHHHHH!!!!",1613230249.0
I finally did it!,1311,fdrmsk,learnpython,https://www.reddit.com/r/learnpython/comments/fdrmsk/i_finally_did_it/,133,"I've been trying to learn Python for almost 3 years now. I've been off and on trying different things with little success. I'd mostly given up.

This past week at work, they changed some of the data I use, I'm an Accounting Analyst and we get all of our banking data in an excel file. They decided to change it into this convoluted workbook that had about 30 columns of data we didn't need. I figured I'd give Python on last chance and see what I could do.

I proceeded to build a script that takes all of the data into a dataframe, strips out what I don't need, creates columns for missing columns, adds any missing value and saves to a new workbook, all in 21.73 seconds. I finally did it. No one really seems to care. I saved my coworkers about 2.5-3 hours of work a month. I just feel really good and I had to share with someone.

Update: Thank you everyone for the encouragement. I really do appreciate. I've now built it out to include a nice GUI that allows me to choose the destination and name the file. Very happy with it and my boss is, as well.",1583392435.0
Proud Dad right here.,1309,npt0pd,learnpython,https://www.reddit.com/r/learnpython/comments/npt0pd/proud_dad_right_here/,92,"Introduced my 8yo daughter to CodeCombat yesterday. We worked along together in Python last night. We called it a night just before the introduction of while loops figuring it was a decent place to call it for the night.

I came down this morning to see she jumped on before school and is rocking through the while loops section with out me and understands what is going on.

My heart just skipped a beat.",1622551084.0
"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code JUL2020FREE",1286,hjgvgb,learnpython,https://www.reddit.com/r/learnpython/comments/hjgvgb/automate_the_boring_stuff_with_python_online/,189,"https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: JUL2020FREE (on Saturday the code changes to JUL2020FREE2)

https://www.udemy.com/course/automate/?couponCode=JUL2020FREE

This promo code works until July 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

You can also purchase the course at a discount using my code JUL2020 (or whatever month/year it is) or clicking https://inventwithpython.com/automateudemy to redirect to the latest discount code. I have to manually renew this each month (until I get that automation script done). And the cheapest I can offer the course is about $14 to $16. (Meanwhile, this lets Udemy undercut my discount by offering it for $12, which means I don't get the credit for referral signups. Blerg.)

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is now available online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid- or late-2020. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with.",1593630748.0
Learning Python? Keep at it! It could change your life,1281,f48ojm,learnpython,https://www.reddit.com/r/learnpython/comments/f48ojm/learning_python_keep_at_it_it_could_change_your/,215,"Hi Guys,

Just a quick motivational speech as this week it has really paid off for me.

I've been learning python for around 6 months now and have found myself in the perpetual tutorial loop as I think most newbies find themselves.

But now I started a new job which allows the use of python and in the first week I took on a new task from my new boss.

Long story short, I took a task they allowed 3 weeks for the creation of (excel surveys to be used by internal team leads) and had it done in two days; around 15 spreadsheets are populated with 5 to 10 changing questions, and will require analysis thereafter.

They fully expected me to spend weeks putting together said spreadsheets and all their permutations, and email them out.

Instead I created a csv of all the data required and took the data and used python to generate the surveys, updating when changes happen in the back end.

The survey files are then formatted by openpyxl and spat out with a filename title as each team lead.

Any changes to the structure of the surveys mean just changing one or two lines of code, not going into every single file to make all the changes.

The script takes 0.75 seconds to run.

They allocated 3 weeks.

Needless to say, worth it, and everyone is happy!

So if you're stuck in tutorial hell, my advice is to find a work task to accomplish because I reckon I learnt as much in the past 2 days with this task as I have learnt in the past month.

Edit: meant to say, I was only able to get this reasonably high paying job because I told them I started learning python 6 months ago and will be using it to automate tasks. 

Without that, I wouldn't have got it (about a 75 to 100% pay increase on my last job) 

Good luck!",1581769046.0
"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code MAR2021FREE",1273,lx4sx4,learnpython,https://www.reddit.com/r/learnpython/comments/lx4sx4/automate_the_boring_stuff_with_python_online/,102,"https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: MAR2021FREE

https://www.udemy.com/course/automate/?couponCode=MAR2021FREE

This promo code works until the 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to MAR2021FREE2 in three days.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

You can also purchase the course at a discount using my code JAN2021CODE or FEB2021CODE (try both if one doesn't work) or clicking https://inventwithpython.com/automateudemy to redirect to the latest discount code. I have to manually renew this each month (until I get that automation script done). And the cheapest I can offer the course is about $16 to $18. (Meanwhile, this lets Udemy undercut my discount by offering it for $12, and I don't get the credit for those referral signups. Blerg.)

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid-2021. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",1614806820.0
"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code NOV2020FREE",1254,jmaj8i,learnpython,https://www.reddit.com/r/learnpython/comments/jmaj8i/automate_the_boring_stuff_with_python_online/,97,"https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: NOV2020FREE

https://www.udemy.com/course/automate/?couponCode=NOV2020FREE

This promo code works until the 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to NOV2020FREE2 on the 4th.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

You can also purchase the course at a discount using my code NOV2020 or clicking https://inventwithpython.com/automateudemy to redirect to the latest discount code. I have to manually renew this each month (until I get that automation script done). And the cheapest I can offer the course is about $16 to $18. (Meanwhile, this lets Udemy undercut my discount by offering it for $12, and I don't get the credit for those referral signups. Blerg.)

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in late-2020. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with.",1604266367.0
Why study programming when you can just play an RPG?,1247,aw0au0,learnpython,https://www.reddit.com/r/learnpython/comments/aw0au0/why_study_programming_when_you_can_just_play_an/,179,"Had a noteworthy event today I thought many people in here would get a kick out of. I work as the IT tutor at my school and has part of that I  handle any Intro to Programming appointments that we get. In the Intro classes, they use Python. So I had a student come in today, basically at her wit's end, border-line in tears. Short of the long: 5 weeks into class and she was not understanding the concepts and it was really frustrating her. Okay, so I hunker down and start working with her. In this case, focusing on loops (as that's chapter 6 in the book). He seems to kind of, sort of be getting it, if I hold her hand and lead her through it.

30 minutes in and we haven't really made any progress. I took a step back and started working with her on comparison operations. But she wasn't really getting that either. she is getting more frustrated. So I try to get her mind off the material for a moment.  Her phone flashes a reminder about ""D&D party"" tonight. So I ask if she plays D&D. She does, and we chat briefly about the campaign she's in (she plays a rogue, go figure). Then I hit on an idea.

 ""You know a lot of early programmers were RPG players and because of  that a lot of what developed into modern programming was influenced and  based on RPG mechanics?""

She looked at me like I'm making a really bad setup for an even worse joke.

""I'm serious. How do you determine if you pass or fail a stat-test?"" I ask.

 ""Well, you determine what you need to roll over to pass, roll a dice,  add any modifiers you have and compare that to the first number."" She explains, more energetically.

""So you perform a comparison operation?"" I asked leadingly.

 ""Well... no. I mean...  kind of... wait..."" She stammers out, her response interspersed as she thinks and talks at the same time. 

I go to write on the White board: 


    if Dice_roll+modifiers >= needed\_roll:  
        you pass  
     else:  
         you fail

She looked at it for a long moment, you could see the gears turning in her head. 

 ""So the variable, Dice\_Roll is added to the variable modifiers.. and that's compared to the needed roll. If the needed\_roll is higher... you  fail... otherwise... you pass."" She parses out, once more thinking and speaking at the same time.

""Yeah... and what about this one?"" I ask as I write on the board:

     while enemy\_attack == True:            
          player.cast(shield)

She looks at it for a minute. 

""So long as the enemy is attacking, cast the shield spell."" she says.

""Nice, how about this one?"" 

     for each enemy in hoard:  
          If player.hp > enemy.defense:  
               Target_enemy = True   
               while Target_enemy == True:  
                    player.attack(sword,enemy)

 ""For each enemy in the hoard... check to see if the player Hit Points are greater then the that enemy's defense. If it is, target that enemy.  As long as that enemy is targeted, attack them.""

""And you just worked through a while loop nested inside an if control statement that was inside a while loop."" I explain.

 ""What?"" She says aghast. She quickly turns back to the board and starts studying the examples intently. I can see her eyes traveling across what I wrote.

""So this on is just a comparison operator?"" She askes pointing to the dice roll I wrote out before.

""Yup."" I respond.

 ""And this is just a while loop that would tell the player character to  cast the shield spell.""  She askes sounding more confident.

""Yup."" I respond.

 Her entire face lights up in that unmistakable look of 'the light bulb turning on'. We start hammering through more examples of loops and control statements, fluctuating between the requirements of her assignments and using RPG examples.

So I guess it all depends on what material you use to explain it, right",1551412934.0
Would anyone be interested in watching me create a Django app from scratch on a live stream?,1202,grfm5v,learnpython,https://www.reddit.com/r/learnpython/comments/grfm5v/would_anyone_be_interested_in_watching_me_create/,118,"I am a professional Python developer and I mostly focus on building web applications and backends with Django.

I have always wanted to make a youtube channel and post tutorial videos, and thanks to the lockdown here I have some free time now to actually do it.

I was thinking of starting with a live stream, where I will create a small but functional Django app from scratch. I'll explain everything as I go along, and will take questions from the chat. It should be around 2 hours long.

If you think you would be interested in something like this, message me or leave a comment here. Even one interested person will be enough motivation for me!

EDIT -

Thanks, everyone for kind words :)

I should clarify some things that people are asking in the comments

1. Yes, the stream would be recorded and available to view later.
2. A friend who runs a charity organization had asked me to make an app to simplify some of the things she was managing using google sheets. That's the app that I will be making. It would be a really basic Django app and will focus on customizing the Django Admin Panel and using the Role-based access system in Django.
3. I would emphasize that this is **NOT** a 2-hour tutorial about how to write Django apps. I won't be able to go into that much detail given the short amount of time. But I will try my best to make things easy to understand
4. If you are a Django developer already, I don't think there would be that much for you to gain from the stream. However, I loved some of the ideas people have suggested in the comments, and if I do stream more, I'll definitely go into the more complex things to do in Django.

&#x200B;",1590567138.0
"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code DEC2020FREE",1200,k4rxz6,learnpython,https://www.reddit.com/r/learnpython/comments/k4rxz6/automate_the_boring_stuff_with_python_online/,84,"https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: DEC2020FREE

https://www.udemy.com/course/automate/?couponCode=DEC2020FREE

This promo code works until the 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to DEC2020FREE2 on the 4th.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

You can also purchase the course at a discount using my code DEC2020 or clicking https://inventwithpython.com/automateudemy to redirect to the latest discount code. I have to manually renew this each month (until I get that automation script done). And the cheapest I can offer the course is about $16 to $18. (Meanwhile, this lets Udemy undercut my discount by offering it for $12, and I don't get the credit for those referral signups. Blerg.)

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid-2021. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with.",1606850558.0
"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code MAY2021FREE",1182,naqwnk,learnpython,https://www.reddit.com/r/learnpython/comments/naqwnk/automate_the_boring_stuff_with_python_online/,85,"I'm a bit late with this month's free code, but it is now active.

https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: MAY2021FREE

https://www.udemy.com/course/automate/?couponCode=MAY2021FREE

This promo code works for three days (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to MAY2021FREE2 in three days.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid-2021. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",1620831996.0
"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code SEP2020FREE",1176,ikocy5,learnpython,https://www.reddit.com/r/learnpython/comments/ikocy5/automate_the_boring_stuff_with_python_online/,90,"https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: SEP2020FREE

https://www.udemy.com/course/automate/?couponCode=SEP2020FREE

This promo code works until September 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to SEP2020FREE2 on the 4th.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

You can also purchase the course at a discount using my code SEP2020FREE or clicking https://inventwithpython.com/automateudemy to redirect to the latest discount code. I have to manually renew this each month (until I get that automation script done). And the cheapest I can offer the course is about $16 to $18. (Meanwhile, this lets Udemy undercut my discount by offering it for $12, and I don't get the credit for those referral signups. Blerg.)

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in late-2020. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with.",1598980299.0
Data Analysis Resources for Python,1172,gk517f,learnpython,https://www.reddit.com/r/learnpython/comments/gk517f/data_analysis_resources_for_python/,86,"## Introduction
Data Science is an increasingly important tool for companies looking for competitive advantage, and Data Scientist jobs are coveted and often well paid. As a result, the internet is awash with sites and Medium posts dedicated to teaching data science topics, many of which are of questionable value.

This post includes a list of resources which could help start you on the journey to being a data scientist, but focus on data analysis. This means there is little to no machine learning mentioned here, but there is a lot of focus on statistical analysis of data.

## Credentials
I’m a data scientist with a maths PhD and was a quantitative analyst before that. I work in the energy industry and spend a lot of time working with generalized additive models for time series forecasting, chucking stuff at random forests, doing Bayesian inference with pymc3, and survival analysis with lifelines. I don’t use a lot of Tensorflow or PyTorch because they tend not to fit the domain of my problems well, but I revisit them every few months to pit them against our existing models.

### Disclaimer
This post is purely my opinion, and in particular reflects my view that people too quickly jump to ML/DL methods when ‘traditional’ methods could do better. Obviously this is very domain-specific—you’d struggle to generate meaningful text with a linear regression.

Two final points before diving in:

- There is a lot of content between the sources below; don’t feel you have to read and understand them all by any stretch, but don’t expect to be on top of this stuff in a week or a month. Three months is probably the minimum amount of time required to get a *feel* for this, and more like a year to be useful to a third party
- Domain knowledge is super important; if you are interested in a particular industry, read up on that too to make yourself saleable

# Learning Resources
## Python Basics
Nothing here is specific to data analysis, so take a look at the [r/learnpython FAQ](https://reddit.com/r/learnpython/w/index?utm_source=share&utm_medium=ios_app&utm_name=iossmf).

In general, good data science often looks to the outside observer like software engineering. It’s not enough to build something in a Jupyter notebook and be done (many claim success in “productionising” notebooks, and all are wrong); so you also need to learn about:

- Version control ([git](https://try.github.io/) is the de facto standard, and if you understand that you’ll be able to pick another VCS easily enough. Note that IDEs such as PyCharm give a friendly interface to many commands, but you still have to know the basics.)
- [Packaging](http://packaging.python.org/)
- Unit testing (I like [pytest](https://docs.pytest.org/en/latest/))

## Data Analysis
There’s no getting away from the fact that mathematics is at the core of data analysis, but you don’t have to be John Conway to be useful. In addition, statistics is by far the most important at this level and you don’t need to understand the minutiae of the subject (which is based in measure theory and is *tough*). Unfortunately I’ve never found a good introduction to statistics with Python (there are plenty for R!), so you have to dip into a number of different resources.

### [All of Statistics](https://www.stat.cmu.edu/~larry/all-of-statistics/) ([PDF available here](https://link.springer.com/book/10.1007/978-0-387-21736-9))
Perhaps not *all*, but Larry Wasserman has written a very approachable introduction to statistics here. The link includes the few data sources given in the book, but it’s very much a textbook. At 500 pages it’s a bit daunting, so I recommend focusing on chapters 1–11 first, then the chapters on linear regression and multivariate models, which is about 200 pages total. Read along with the [SciPy docs](https://docs.scipy.org/doc/scipy/reference/); in addition take a look at [pythonfordatascience.org](https://pythonfordatascience.org/inferential-statistics/) which calls out useful functions in SciPy and statsmodels.

### [OpenIntro Statistics](https://www.openintro.org/book/os/)
An alternative (and possibly a better alternative) to AoS, this textbook is available with an optional contribution, and used by a number of colleges in the U.S. I’ve not read it, but a closer look, it appears to be pretty great. As with AoS you’ll have to read along with the SciPy and statsmodels docs.

### [Linear Algebra Done Right](https://link.springer.com/book/10.1007/978-3-319-11080-6)
Currently available for free from Springer, this covers a lot of ground in ~300 pages. Less immediately applicable than the stats books, but definitely worth keeping for the future

### [Python Data Science Handbook](https://jakevdp.github.io/PythonDataScienceHandbook/)
Jake VanderPlas is the author of the excellent [altair](https://altair-viz.github.io/) plotting library and a pretty bright chap. This book serves as a good introduction to NumPy, Pandas, Matplotlib and Scikit-Learn, and the link includes its full text as Jupyter Notebooks, which is awesome. You needn’t bother with the Scikit-Learn chapters unless you want to jump ahead.

### [Python for Data Analysis](http://shop.oreilly.com/product/0636920050896.do) and the [pandas docs](https://pandas.pydata.org/docs/user_guide/index.html)
Which of these you prefer is largely a matter of preferring one medium over another, but PfDA’s second edition is already slightly outdated for pandas 1.0.3, though certainly not enough that it’s not a very useful resource.

### [Data Science from Scratch](https://www.oreilly.com/library/view/data-science-from/9781492041122/)
Joel Grus’s book kinda *does* do what I assert isn’t possible—take you from zero to data scientist hero in a relatively short text. The criticism I would level at it is that it (necessarily) doesn’t go into sufficient depth everywhere, but what it does brilliantly is implement most things from scratch (duh!) to give you a good grounding in the basics.

### [Anatomy of Matplotlib](https://youtu.be/6gdNUDs6QPc)
This is a great video to get a better understanding of how to work with Matplotlib, which is definitely the least Pythonic library still in use by data analysts today. It’s also slightly outdated, but hugely valuable.

### [Introduction to Survival Analysis — lifelines docs](https://lifelines.readthedocs.io/en/latest/Survival%20Analysis%20intro.html)
Great introduction to survival analysis, which will either help you look like a superstar or be completely irrelevant.

### [Winning with simple, even linear models](https://youtu.be/68ABAU_V8qI)
I was at this talk at PyData London a few years ago and it was the best of the conference in my opinion. Vincent makes the argument that people are too quick to leap to ML/DL methods when simpler models could do as well or if not better.

### [The Visual Display of Quantitative Information](https://www.edwardtufte.com/tufte/books_vdqi)
If you buy one book on visualisation, it should be this. (If you buy two, it should be this an *The Grammar of Graphics*)

## Data Science
Briefly, here’re a few resources that cover data science proper, but don’t expect to get here any time soon!

- [r/datascience](https://www.reddit.com/r/datascience/wiki/resources?utm_source=share&utm_medium=ios_app&utm_name=iossmf) (includes all the other resources in this section)
- [The Elements of Statistical Learning](https://web.stanford.edu/~hastie/ElemStatLearn/) and [An Introduction to Statistical Learning](http://faculty.marshall.usc.edu/gareth-james/ISL/) (the former goes into more detail on the maths than the latter)
- [Pattern Recognition and Machine Learning](https://www.springer.com/gp/book/9780387310732)
- [Andrew Ng’s Machine Learning course](https://www.coursera.org/learn/machine-learning)

## Data Sources
As mentioned before, if you’re interested in a particular industry then see if you can get data related to it. Otherwise, these are some general sources of good-quality data.

- [Scikit-Learn data](http://scikit-learn.org/stable/datasets/index.html) has some really good ‘toy’ datasets that are useful for playing around with descriptive and inferential statistics, besides the skl estimators
- [data.gov.uk](https://data.gov.uk/) and [data.gov](https://www.data.gov/) have hundreds of thousands of data sets. Many of these offer a great opportunity to practice cleaning up data with pandas because they come in all shapes and sizes
- [OpenIntro Statistics](https://www.openintro.org/data/) data sets used in this textbook

## Out-of-scope
The following topics haven’t been mentioned in this post yet, because I consider them adjuncts to the main theme, but will probably be of importance:

- SQL (probably very important!)
- Big data (possibly less so, but in general the problems of big data are about finding efficient ways of doing the same stuff with… big data) inc. e.g. PySpark etc.
- Continuous integration/continuous delivery
- Docker/Kubernetes

## Postscript
The original version of this post appeared ~3 weeks ago and the number of links in it got it marked as spam and it was deleted by the mods; thanks to /u/novel_yet_trivial for sorting it out!",1589529992.0
I automated a part of my job that usually took me 2 hours to do in 2 seconds,1158,q8iyu7,learnpython,https://www.reddit.com/r/learnpython/comments/q8iyu7/i_automated_a_part_of_my_job_that_usually_took_me/,219,"I have to send out a hundreds of personalised emails for a literary magazine I run and writing the emails usually takes ages. But I wrote a simple script using requests, smtplib, and the sheety API and completely automated the task. Terrified when I hit run, but it actually worked! 

I love this language. I haven't been learning long but it just feels so intuitive.",1634281704.0
MIT offers free online course in Computer Programming using Python,1158,neg3hb,learnpython,https://www.reddit.com/r/learnpython/comments/neg3hb/mit_offers_free_online_course_in_computer/,90,"***The course offered by MIT is an introduction to Computer Science as a tool to solve real-world analytical problems using Python 3.5***

Massachusetts Institute of Technology(MIT), one of the most premium technical educational institutes in the world, has recently announced a free online course in Computer Programming using Python. The course is available on the edX e-learning platform and the registrations are open until June 2. Here are the course details.

**About course**

The course is named "" **Introduction to Computer Science and Programming** **using Python**"". The objective of this course is to provide learners with a brief introduction to many computer programming concepts so as to give them an idea of what is possible when they need to think about how to use computation to accomplish some goal later in their career. That said, this is not a ""computation appreciation"" course but a challenging and rigorous learning path on which the students spend a lot of time and effort learning to bend the computer to their will.

Python is the most sought-after programming language skill by IT professionals and the demand for skilled Python developers is also very high in the job market. In this course, learners will be taught the nuances of programming using Python 3.5.

**Course format**

The class will consist of lecture videos, lecture exercises, and problem sets using Python 3.5. The lecture videos are broken into small pieces usually between eight and twelve minutes each. Some of these may contain integrated ""check-yourself"" questions. Even if you have knowledge of Python 2.7, you will be able to easily transition to Python 3.5 in this course. There will also be programming assignments and standalone exams/quizzes, which are not part of the video lectures.

**What is in it for learners**

* A Notion of computation
* The Python programming language
* Some simple algorithms
* Testing and debugging
* An informal introduction to algorithmic complexity
* Data structures

**Course instructors**

The course is instructed by 3 MIT professors:

* John Guttag, Dugald C. Jackson Professor of Computer Science and Electrical Engineering at MIT
* Eric Grimson, Bernard Gordon Professor of Medical Engineering, Professor of Computer Science at MIT
* Ana Bell, Lecturer, Computer Science and Electrical Engineering at MIT

**System requirements**

You need to have a computer running one of the following operating systems: Microsoft Windows, version XP or greater (XP, Windows Vista, or Windows 7)Apple OSX, version 10.2 or greater.

Linux - most distributions that have been released within the past two years should work

In addition, you will need the ability to download, install, and run software on your computer.

**Other important details**

* This is an instructor-paced course; however, students can watch the lectures at their leisure and do not need to watch the lectures live or at any set time.
* The course starts on June 2 and will end on August 5. So, you are required to enrol before June 2.
* The course is free.

**How to enrol**

To enrol in this program, you can visit the [MITx course page on edX here](https://www.edx.org/course/introduction-to-computer-science-and-programming-7).

[Source](https://content.techgig.com/mit-offers-free-online-course-in-computer-programming-using-python/articleshow/82678099.cms)",1621257660.0
"Thank you guys and Python for giving me joy (NEW PYTHON PROGRAMMERS, READ THIS).",1150,l0lyh2,learnpython,https://www.reddit.com/r/learnpython/comments/l0lyh2/thank_you_guys_and_python_for_giving_me_joy_new/,127,"I have been using Python for over a year, and have practiced every single day. Python led me to a place in life I never knew would become possible. It has gotten me through tough times, entertained me, given me food and shelter, and most of all, given me joy. Sometimes I remember when I was watching those Tech With Tim tutorials on Youtube. So big thanks to Tim(Tech With Tim) also! Following his and a few other YouTubers tutorials, I have tried tons of different stuff like game dev, web dev, desktop application dev, scripting, AI, and more.

About 3 months ago, I watched Tech With Tim's series on Kivy. Kivy is a library for Python that allows Python devs to create mobile apps using Python, instead of languages like JS, Swift, etc. Before then, I had been using Sublime. Although it had been getting very messy(For my likings) with file explorer, cmd prompt, Sublime, and Chrome all open on my small laptop screen. So I downloaded PyCharm so I could have all my tools in one application. Well lemme tell you, PyCharm is INSANE. It really speeds up dev time with all those features. I tried Kivy out a bit and got a little confused. Not confused about how to do it, but confused about how I loved it so much. Before, I HATED web dev, desktop dev, so on. I thought I just hated front end development and was going to focus on AI, scripting, and overall software engineering. But somehow I became obsessed with Kivy.

I kept practicing and practicing, teaching myself the ropes. I never once thought about taking a break from Kivy, I just kept programming. It was 2 days until December, and I made a decision that would change my life forever. I decided I would start making money with my code. I considered this before but never could decide what I would code, and how I would make money. I didn't want a full-time job because I had no degree and I liked my current job. But now that I found Kivy, I knew I wanted to do mobile dev. I signed up for Fiverr and put up a simple gig post. I ended up getting two sales, but that motivated me. I recently signed up for Upwork, and I've gotten a few jobs. This is fine because for me it's about the coding, not the money.

Why am I sharing this with you? Simple, to thank all of you for helping me get to this place. I wouldn't know how to program without this subreddit. So again thank you. I wish I could do something more to thank all of you. For all those new Pythonistas, I hope this motivates you. I hope this lets you see the light at the end of the tunnel. When I first started, I thought I would never make it. Somehow I did though, and now I'm here. Sure I'm not making 6 figures, but I don't care about that. Because at the end of the day, you learned programming to do the impossible and have fun.

Edit:

Thanks for all the love guys! Didn’t think I would get a lot of views. I hope this motivated you guys! Feel free to PM me if you want help with anything or want to talk.",1611069843.0
Raise your hand if your scripts are littered with commented-out code that you are hoarding like it's the end times,1138,s89bpz,learnpython,https://www.reddit.com/r/learnpython/comments/s89bpz/raise_your_hand_if_your_scripts_are_littered_with/,176,"✋

EDIT: wow, I did not expect such a reaction from this community! Thank you all for your lively discussion. I should clarify that I am coding for personal use and usually the commenting is different ways of achieving a specific feature. I don’t know what I like best until it’s done. I also hoard old emails, bookmarks, free ebooks… so I guess you could call it a character flaw 🙃",1642650534.0
"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code JUL2021FREE",1102,obq077,learnpython,https://www.reddit.com/r/learnpython/comments/obq077/automate_the_boring_stuff_with_python_online/,80,"https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: JUL2021FREE

https://www.udemy.com/course/automate/?couponCode=JUL2021FREE

This promo code works until the 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to JUL2021FREE2 in three days.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

Side note: My latest book, [The Big Book of Small Python Projects](https://inventwithpython.com/bigbookpython/), is out. It's a collection of short but complete games, animations, simulations, and other programming projects. They're more than code snippets, but also simple enough for beginners/intermediates to read the source code of to figure out how they work. The book is released under a Creative Commons license, so it's free to read online. (I'll be uploading it this week when I get the time.) The projects come from this [git repo](https://github.com/asweigart/pythonstdiogames).

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",1625158520.0
I Actually Got a Job!,1099,o16gvr,learnpython,https://www.reddit.com/r/learnpython/comments/o16gvr/i_actually_got_a_job/,95,"Two years ago, I didn’t have much to brag about. I had spent six years in undergrad bouncing around between humanities majors before settling on international relations. I know you’re probably saying international relations is useless. I knew that, but I was also struggling with crippling depression and anxiety. Anything remotely technical or career-oriented would send me into a state of panic. I found that out the hard way when I failed freshman year and nearly got kicked out of school. I had always been interested in programming ever since I booted up my dad’s old Macintosh II as a kid and played around with True Basic. The idea of actually doing it for a living though, or even in an academic setting terrified me. Obviously everyone else would be so far ahead of me there would be no way I could compete. 

Well, after graduating and immediately going back to school for a one-year masters in marketing (turns out it’s very difficult to get hired with an international relations degree), I found myself frequently looking up coding tutorials in class. After randomly selecting python because some Reddit thread suggested it, I spent most of my downtime between lectures doing basic courses on Udemy and eventually graduated to some random connect four tutorial. For some reason, I was actually absorbing and retaining information. 

When I graduated and eventually got my first shitty agency job, I tried to use python for every single thing I could. There were so many tedious reports that needed to be put together every day that required visiting dozens of media sites, copying data between spreadsheets and so on. It was the perfect opportunity to learn web-scraping and data manipulation with pandas. I ended up saving the office about two hours of work a day. Needless to say, my boss was very impressed. It was great until he got laid off, and his replacement quit. Then I got laid off too. 

I spent the next year and a half working at a media agency. While my official job title didn’t reflect it, I ended up being able to shift my responsibilities away from simple ad placement to finding ways to automate  campaign budget allocation and media upload / allocation as well as reporting. I even got a chance to create some data infrastructure as the company had none before my arrival.  

After failing to get any sort of raise, I decided to start applying to junior developer and data analyst jobs in my area. I would highlight all the technical aspects of my previous jobs in my applications and include my GitHub portfolio. After 50 something applications, I finally got a lead with a multi national logistics company for a data analyst position. The interview went well and they gave me a python and sql assessment which I went overboard on completing. 

It’s been four months since I put in my notice at my last job and I just passed my probation period as a data analyst / engineer with a 60% salary increase. Instead of rushing to meet deadlines for campaigns and mindlessly scrolling excel files I get to spend the work day building data pipelines and automating reports without someone breathing down my neck. 

TLDR Thanks to stack overflow, reddit, and a resume that only highlighted my technical achievements, I managed to go from a depressed college student to someone with a good job, a fiancé and a house (albeit rented). So that’s pretty cool I guess.",1623854467.0
From a Beginner to Beginners: From print('Hello World!') to Tutorial Hell to Getting my First Job!,1092,lmi2lg,learnpython,https://www.reddit.com/r/learnpython/comments/lmi2lg/from_a_beginner_to_beginners_from_printhello/,129,"Hello all,

It finally happened! I became employed as a Data Engineer after self studying Python for around 8 months and SQL for around a month or two.  For reference, I'm based in the UK and older than 30.

I lost my job as a traditional scientist around August last year and had been at the mercy of a company doing data science/engineering incorrectly (overfitted models, zero subject matter expertise, dog shit data).  So, I took it upon myself to teach myself and prove they were doing it wrong.  Little did I know, I ended up discovering something I really enjoyed - making sure everybody is getting the right data.

After around 2 months of applying for jobs, I was contacted out of the blue by a company's HR department which was local who were looking for somebody to join their team as a Data Engineer.  This was pretty much nothing to do with my skill level and was 99% luck and being in the right place at the right time as the technical questions weren't as hard as other roles and the role itself is very new in the company.  I say nothing to do with my skill level because I really don't think I'm qualified for this job yet.  I also happened to be interested in a field which is popping off at the moment, so entering a market into a huge demand definitely contributes to success.

I had a total of 5 interviews:

* Data Engineer (webscraping)
 
* Python Developer/Consultant (I still don't really know what this job is, I took the interview because it was an interview)

* Test Automation Engineer

* Data Engineer (business intelligence)

* Data Engineer (financial services)

All of that aside, I think it's worth going over some stuff which might useful.  A lot of the skills in the learn programming subreddits are often a technical discussion and help.  Even from a science background there's a lot of similarities in the job search - the assumption good skills alone are enough to land the job.  Unfortunately, due to an influx of anybody being able to call themselves a recruiter, job hunting is definitely another skill that all programmers looking to get their job should learn in order to navigate getting strong armed into less than desirable positions for less than desirable conditions.

I was unemployed back in the tail end of the 2008 financial crash as well and, over time, I realised having the experience of job hunting and dealing with job specs, interviews, offers, recruiters was extremely helpful.  I completely understand that a lot of people in here may have never been in full time employment before so I thought it'd be useful to highlight what's still relevant:

**Culture, Prospects, Location, Money**

I would say these are pretty much the things that should drive your decision to get a job.

* You want to work with fun, decent people in a place which don't think you're a robot.

* You want a job which can either take you places at that company or kick start your career.

* It has to be somewhere you don't hate living.

* You want to get paid fairly.

Of course, not everything is set in stone and it's very much recommended to decide what you skimp on.  I'll echo something I learnt in science - offering to be paid less than the market value might help you now, but really hurts the industry as a whole.  Know your worth and stick to it.

For reference, here's the lowdown on a job I turned down vs the job I accepted:

Turned down:

* Recruiter constantly asked me the same questions over and over again (is the location okay because you live far away and are you sure you have experience using Python to which I answered yes)

* I did 3 interviews for them.  First stage was a classic verbal interview where the director literally left on the minute of the time we had allocated for the interview, cutting me off mid sentence.  Second stage was a technical task which I received feedback of ""not being great"" (this was because it was below the level of a developer.  At no point did I say, or suggest, I was at a developer level.  I was also applying for a junior level role) although invited me back for a third interview.  Third interview was a series of quick fire technical questions with right/wrong answers.  This whole process took 5 weeks.

* Spent another 2 weeks telling me they were still looking at other candidates.  So we are at 7 weeks for an interview process.

* Threw me an offer mid week and wanted me to start Monday.

At the beginning, I was so excited for this job although over time began to despair that this is the only job I might get.  Took all of this shite on the chin anyway and began planning my exit strategy.  Fortunately, a different job came through:

* Interview was carried out as a HR staff member found my CV directly on LinkedIn, emailed, and called me to schedule an interview.

* Manager was extremely personable and interested in hearing my motivations, giving me plenty of time to express myself.  Also over ran the interview by ten minutes as we were getting along.  They called me back on the within two hours to arrange a second stage interview.

* Second stage interview was with said manager and the analytics director.  Same format of being relaxed and asking a mix of scenario and experience based questions in order to see my approach to solving problems rather than how well I knew the documentation.  They also took the time at the end of the interview to get to know me more which was a really positive sign.

* I was offered the job about 3 hours after the second stage with an explicit instruction I'll be mostly working from home for the forseeable future and my start date will be at the very earliest in two weeks.

* This whole interview process took one week.

The relief and joy I experienced when I got this job was immense and made me realise that being desperate is a dangerous thing.

**Know What You're Looking For**

Googling is a highly underrated skill and it can be pretty crazy seeing people who are amazing at Googling for solutions to programming problems although completely forget all of that whilst job hunting.

What not to search for:

* Software developer jobs london

* Software engineer jobs wales

These are honestly the worst things you can search for because they will give you every result for every language and you'll spend a lot of time sifting through shite you don't want to apply for.

How you should search:

* Language + developer/engineer/general job title + location + jobs

* e.g. javascript front end developer new york city jobs

**Sometimes, It's Better to be Lucky Than Be Good**

I mentioned earlier getting the position I did was not about skill and more about being in the right place and that's something I want to touch on here.

In the end, as self taught programmers, university graduates, and people looking to change careers, all we want is a chance to prove ourselves.  In order to get that chance, you might have to face a few rejections and apply for stuff you might not necessarily be qualified for *right now*.  Although, if you honestly believe it's a job you can do given some time and training and you want to prove that, then every time you see a job application, just send your CV/resume in.  It doesn't cost anything and the worst thing that happens is they say no and you aren't ready yet.

Mindset whilst jobhunting is just as important as technical ability because with a weak mindset, you'll never get the opportunity to show what you're really good at.

I hope this was useful to somebody and good luck with everybody also looking to get their first job.

Special thank you to you guys at r/learnpython for helping people getting answers to their problems and just generally being a non-judgmental helpful sub.  You guys are dope af.

EDIT: 

**What courses did you use?**

[Courses I did here](https://www.reddit.com/r/learnprogramming/comments/lmi0zp/from_a_beginner_to_beginners_from_printhello/gnwfwv9/).

I also used Kaggle's free courses to get an introductory feel of Data Science.

In terms of study plan, it was extremely unstructured and I kind of liked that because it meant I could work on what I wanted to work on instead of following a regime which would mean learning stuff I didn't want to learn or wasn't ready to learn yet.",1613637640.0
"TIL that a software engineer filed a Freedom of Information Act request to get access to NSA's training material for teaching Python, the popular programming language. The material is now available for free online for anyone who wants to learn Python using it.",1092,t8tvfp,learnpython,/r/learnprogramming/comments/t8pc7n/til_that_a_software_engineer_filed_a_freedom_of/,34,,1646672617.0
Don't Give Up! Learning to code is damn hard.,1063,nmpvtl,learnpython,https://www.reddit.com/r/learnpython/comments/nmpvtl/dont_give_up_learning_to_code_is_damn_hard/,128,"This is bloody hard. I have learnt to do a lot of things in my life, and coding is up there as the hardest. I am currently just learning python and I'm struggling.

But we need to give ourselves permission to struggle. Tell yourself it's ok to be confused. To not know the answer.

To you, whoever you are. You got this. Just keep turning up. To struggle is to learn.

I am writing this for me as much as everyone else.

You can learn to code. I can learn to code. We can learn to code.

Today's beginner is tomorrow's master.

Edit: Thank you for all the support, especially from the masters in the subreddit posting advice. A great way to learn is to teach. For those struggling with motivation, I write about motivation and similar topics twice a week here [www.thehappyorchardblog.com](https://www.thehappyorchardblog.com). If you are ever struggling or need help you can reach out to me on the site and I'm happy to talk (If this link is not allowed, moderators let me know and I will remove it).",1622176705.0
I just wrote my first script to do mindless busy-work for me. Over the moon with glee!,1061,10h4tsu,learnpython,https://www.reddit.com/r/learnpython/comments/10h4tsu/i_just_wrote_my_first_script_to_do_mindless/,113,"I know the first rule of automating your job is to not tell your co-workers that you automated your job. But I had to tell someone. So I'm telling you all.

I've got a load of repetitive paperwork to fill out and I ignored it for far too long. So I've got a serious back-log.

Pyautogui to the rescue! My bot locates the correct form, opens it, fills in the blanks correctly and completely, closes the form out and then begins looking for the next one. All while I drink coffee and supervise.

I wrote it with 114 lines of python code, but I realize now that I could have done it in 50 if I had defined my own functions instead of being so programmatic. And I built in a lot of sleep delays to make sure the screen has time to load before the next command goes through. BUT IT WORKS!

I wrote this program in 4 hours, and it's going to do over 50 hours worth of work for me. And I had fun making it!

This has totally reinvigorated my desire to learn more Python. Thanks for being an awesome community and helping the little guys like me.

&#x200B;

UPDATE: So over a week later, my program has completed its task! It ran for over 50 hours and worked at a steady human pace. It saved me a LOAD of grief. It would have taken me MONTHS working during my downtime to clear that backlog. I'm going to make a few changes to it today to make it run on a schedule and take care of this task daily so I will never have a backlog again. I will make sure that it needs me to sign in so it doesn't run when I'm home sick or something. And it will not store login credentials.

Just as this is wrapping up, my company asked me to start digging into a gigantic spreadsheet with loads of different types of data so I guess I'll be looking into Pandas this week! My goal now is to quietly automate more of my job and learn a lot more python in the process. Thanks again for being an awesome community! I wouldn't be here without /r/python!",1674240517.0
"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code JUN2021FREE",1043,nrh5km,learnpython,https://www.reddit.com/r/learnpython/comments/nrh5km/automate_the_boring_stuff_with_python_online/,102,"https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: JUN2021FREE

https://www.udemy.com/course/automate/?couponCode=JUN2021FREE

This promo code works until the 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to JUN2021FREE2 in three days.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid-2021 or late-2021. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",1622736657.0
"Going from print('Hello World)' to tutorial hell to building my own ""data pipeline"" - From a beginner to beginners",1038,jwgatc,learnpython,https://www.reddit.com/r/learnpython/comments/jwgatc/going_from_printhello_world_to_tutorial_hell_to/,131,"Hello all,

I recently wrote a post about [getting my first paid job on Upwork](https://www.reddit.com/r/learnpython/comments/jrwi6d/just_completed_my_first_job_on_upwork/).  I got rehired by the same person to do even more work with the conversation going like this:

Client: This work is great.  Now, can we do the same for everything please?

Me: As far as I'm aware, all of the fields are filled.  Could you give me some more detail?

Client: *sends me a search page* You see all this info here? All 39 pages? Could we do exactly the same for all of these please? (client said it much nicer than this)

To avoid any confusion, I got asked to scrape a whole website of financial data and condense it into a spreadsheet.  This was a pain in the tits for the following reasons:

* The pages in the first post were static.  This is a dynamically loaded website.

* It's a lot more data - it ended up being over 18,000 data points.

* It needed a lot more code.

Long story short, I managed this and got it in on time and got paid! I enjoyed it so much I ended up making it a ""data pipeline"" (if you can even call it that) where it scrapes the data, passes it to a function which saves it to a CSV, and then passes the CSV to Pandas to have it cleaned and formatted.  All in one Jupyter Notebook cell!

5 months ago, I didn't know a single thing about code and now I can do this.  It's amazing and I'd love to be able to give some people a realistic opinion, as a beginner, to other people starting out. 

**Tutorials are a bit misleading**

As with all people learning, I'm sure you've probably watched tons of videos.  Whilst they're useful, it can be very disheartening watching somebody cane out code in 10 minutes which takes you 3 hours.

[Here's a video which made me feel better](https://www.youtube.com/watch?v=uIOhRD9J9oU&)

I saw this as I was transitioning out tutorial hell and it was very sobering how a lot of what he said happened.  I spent a lot more time searching for solutions, and running the same blocks of code with minor adjustments over and over again until it did what I want than I did watching my code work.  Also, actual time spend coding was a lot less than checking for ridiculously small things like unmatched brackets.

My code was literally trash and a mess which didn't make any sense whilst I was doing the job.  Huge chunks of code which worked and commented out as I was trying to fix things, code which didn't work and I forgot to delete, random comments I made whilst I was angry.  My code *worked* though and it's something the client never sees.  After I finished, I took the code and made it WAY cleaner just in case anybody would want to see it.

Judging from what more experienced people have said, this is the normal cycle of programming and thinking you're going to one-shot code is the mindset to failure.  Programming is about problem solving and problem solving involves running into a lot of problems and when I say problem solving, I mean a lot less ""If Jack has 3 apples and Jill has X-n^2 apples, come up with an algorithm which sorts out a list of even numbers and every odd number produces the word 'lmao'"".  I would say problem solving can be summarised with 'figuring out why your code isn't doing what you want it to do'. 

**Googling stuff and copying code is normal**

I used to feel like such a joke googling stuff for solutions and being unable to rattle stuff of the top of my head.  Same with copying code other people have done and subbing my own variables in there.

After about 2 months of doing this, this is pretty much what programming is like.  So don't feel bad if you do - this is normal.  Nobody feels guilty when they copy a recipe off youtube to impress somebody and nobody should feel bad for taking publicly available code and adapting it for their own purposes (within reason).

**Getting out of ""tutorial hell""**

I spent about 4 months in this stage.  I've done three courses overall and felt the same all the way through, 'me following along means I'm learning!'.  Unfortunately, this isn't true.  I ended up wondering why people were doing stuff the way they were doing it rather than understanding what was going on.

One of the most asked questions on here is 'I'm a beginner.  What should I build?' and usually people say the same projects which are projects 100 other people have documented and fine tuned. The obsession with using some sort of phrase involving the word 'build' or 'building' gets bandied a lot around here and I do think the concept is poorly explained although is correct.  I think the more apt advice for getting out of tutorial hell is:

""Come up with your own ideas and then build them""

Building what you're interested in and is useful to you is very different than churning out programs hundreds of other people have done and is the beauty of being self taught - getting over that hump and generating your own ideas is a steep, very rewarding learning curve.  Ultimately, from what I've learn from tutorials, is that zero courses teach you how to be creative and if you can't be creative, programming is really really hard.

My example projects before this huge one above was a password manager and a program to automate my computer to begin mine crypto when my electricity is cheap.  I also made loads of other stupid shit like a bot which spams annoying messages in chat channels with a sleep timer to avoid getting timed out, spamming email boxes of people who have sent me junk mail with scary pictures.  I came to the conclusion that all of the stuff I *like* to build is incredibly troll and that's totally cool as long as I don't use my powers for evil on a grand scale.

Which brings me to my next point...

**Have some fun**

Learning Python and programming always felt like a race to me.  ""How much time will it take for me to become a paid, full time programmer?"" was always on my mind and, to be honest, it ruined a lot of the learning for me.  I've had a lot of down days because it felt like I was ""slow"" compared to these people on youtube who became Software Engineers for the FAANG groups in 6 month, or these 15 year old kids winning Google coding competitions. I felt like I was ""missing out"" on earning a lot of money because of a lack of ability, rather than realising the only person that sets the goals posts is me.  Comparison is the thief of joy, after all.

Putting yourself under a lot of pressure to get somewhere is definitely a path to burning out.  My missus told me the other week that I ""looked tired"" and when I looked up at the clock, I had been sat at my computer for 6 hours without a break.  Whilst I don't disparage working hard, I do disparage disconnecting from your health.

Take a break.  Go for a run.  Spend some time with your family.  Build stupid shit which nobody will ever see every once in a while.

**Build your Github as soon as you can**

This is something I learnt far too late.  EDIT: Elaborated on below:

I say build a Github because a lot of people's goals are to become a software engineer or developer and a lot of people are also self taught although there's no really ""good"" way of showcasing your projects and what you've done on your resume/cv. Github is what developers use as part of their pipelines and a lot of jobs expect you to be able to use, so if you have a Github showcasing your work it shows your portfolio and suggests you at least know what Github is.

If you start late, like I did, you'll have a bunch of concentrated commits into your repository which doesn't look very professional and isn't visually very encouraging. A steady stream of projects over time shows that you've put a bunch of effort into either submitting projects or contributing towards other projects and helps boost the strength of your application.

**Your career aspirations can change, and that's okay too**

I have a background in chemistry and was enamoured with the idea of becoming a data scientist.  What I learnt from doing python is two things -

* I really like collecting data and automating things.

* I really hate analysing data.

And that's alright with me.  I know what jobs I should be looking for now!

Of course, this is all just my opinion based on personal experience.  I always recommend going out there and getting your own.  I hope this was helpful to some beginners!

EDIT: Wow, holy shit.  This is a lot bigger than I thought.  Thank you for all the awards and the nice comments.  Also, big thank you to much more experienced people weighing in - it's what makes this community!",1605708199.0
My dad is a programmer and I want to hand-sew a simple program as a gift to him. Feedback on the program I came up with?,1036,jxr209,learnpython,https://www.reddit.com/r/learnpython/comments/jxr209/my_dad_is_a_programmer_and_i_want_to_handsew_a/,147,"Edit 2: Project completed. :) Here it is: [link](https://imgur.com/gallery/ta90l8K).

Edit 1: Thanks so much, everyone! Here's my final draft ([link](http://imgur.com/gallery/RgpfUjJ)). I'll post a picture of the piece when I finish it. :)

Not homework help!

I want to embroider a simple program for a Christmas gift to my dad, a computer science professor and self-proclaimed ""geek"". Here's what I came up with ([link](http://imgur.com/gallery/EyjT9iE)).

Does this make sense? Should I change anything? All feedback is welcome. I barely know Python and don't want my gift to make him cringe.

Thanks so much!",1605886160.0
"I love Visual Studio Code so much, especially for learning Python",1021,gxycd2,learnpython,https://www.reddit.com/r/learnpython/comments/gxycd2/i_love_visual_studio_code_so_much_especially_for/,160,"When you're starting out like me learning Python, these are the 12 recommended extensions that I currently have installed. I hope it helps you in your learning journey as it is doing wonders for me:

&#x200B;

1. Bracket Pair Colorizer
2. indent-rainbow
3. Python
4. Python Docstring Generator
5. Python Preview
6. Trailing Spaces
7. Visual Studio Intellicode
8. Gitlens
9. Docker
10. Dracula Theme
11. Material Icon Theme
12. Settings Sync

&#x200B;

Let me know if you have other cool extensions that I can add.

Thanks!

&#x200B;

Edit:

* Added:  Gitlens (for those already learned git/github), Docker (only install if you learned Docker), Material Icon Theme, Settings Sync, Dracula Theme
   * Considerations:
      * Themes: Monokai Pro (very cool, I tried it), Material (most popular)
      * Code-Assistant/Auto-Complete: Kite, TabNine
      * Webdev: Minify, Prettier, Paste JSON as Code (for those learning html, css and js)
* Removed:  vscode-icons (sorry microsoft), Code Spell Checker (confusing with other syntax errors)",1591474991.0
Handy Python Functions For All,1018,gfaq9s,learnpython,https://www.reddit.com/r/learnpython/comments/gfaq9s/handy_python_functions_for_all/,76,"A small collection of snippets that I use quite frequently. Feel free to use them for whatever you want. Go crazy!

Lonk: https://recycledrobot.co.uk/words/?handy_python_functions",1588871716.0
Automate the Boring Stuff FREE on Udemy,1018,drnc0z,learnpython,https://www.reddit.com/r/learnpython/comments/drnc0z/automate_the_boring_stuff_free_on_udemy/,96,"The great Al Sweigart is now on Udemy and is hooking us up with a FREE coupon thru 11/7.  Get some, and maybe show him a little social media love for all he does.

https://mobile.twitter.com/AlSweigart/status/1191436575659311105",1572898247.0
"I was finally hired as a junior software developer, and it only took me.... seven years! Here's a quick write up on my journey for those on a similar path.",1011,mivbxe,learnpython,https://www.reddit.com/r/learnpython/comments/mivbxe/i_was_finally_hired_as_a_junior_software/,47,"I began learning to ""code"" when I was a teenager. I got very into the scene of making websites for hosting sprite comics (despite making no more than two or three strips in my life time ha). I spent time at htmldog learning HTML, and the very basics of CSS but actually spent more time in Photoshop creating layouts and splicing them up. I then learned more of CSS as I moved on to creating templates for forums (do we all recall proboards for our favourite video games, hobbies and tv shows?). During this time, I also learned some JavaScript and ActionScript (because no worthwhile site at the time didn't have a flash based splash screen). This all stopped at the ripe old age of 16.

Flash forward to my early twenties. I got the urge to pick up programming again, with the idea of learning to become a web developer (mostly as a hobby). I did however, have an awful ""career"" in retail and was hopeful I might one day be able to transition into a programming career. It was at this time I also discovered Python (thanks Reddit). I spent the next 12 months learning both webdev skills (html, css frameworks and now properly learning JavaScript) and slowly falling in love with Python. I subscribed to every Python subreddit, forum, learning resource and YouTube channel I could find. In particular I went through the entirety of Learn Python the Hard Way, which gave me a solid foundation and also went through the Codecademy track and FreeCodeCamp.

Unfortunately, this was the point that I fell into tutorial hell. I became completely reliant on tutorials. I wasn't able to think up projects and implement them by myself. All I could do was follow a tutorial from beginning to end (and not even always to the end), and honestly not understand half the code that I was typing. I did make a conscious effort not to copy and paste code, but without truly understanding what the code I was typing did, it didn't really make much difference. This began a yearly cycle of ""getting into"" Python, following tutorials until I burned out, not learning much and then just stopping. This rinse and repeat process happened over and over until I hit my late twenties.

I had spent literally years wanting to be a professional developer, but had never felt confident enough in my skills to go for it. I occasionally sent out a job application for junior positions hoping they'd take me on in the form of an apprenticeship, but looking back I can see just how laughable my applications were. I had _nothing_ to show in the form of a portfolio. Nothing that wasn't just a rehashed tutorial project with a few variable names changed and some different choices of colours. During this period, I did manage to escape the dreaded world of retail. I landed a customer service position in Supply Chain for a large company, and from this managed to form a real career working through the various departments that existed there. This was great for my self-confidence and my wallet, but it absolutely did not excite me. 

I had started doing things like Project Euler, Advent of Code and other similar coding challenges, and I found that I loved them. They gave me a challenge without many clues of how to solve it, and I had to just go at it with Python to try and get a solution. Obviously, I would get stuck and then hit the search engines, but this was one of the greatest lessons I had every learned - it is okay to search for the gaps in your knowledge. These challenges pushed me to learn all kinds of programming concepts I'd never really come across before, and they did it in the form of a game. I learned about recursion, regex, proper uses of functions, classes and dictionaries (and creative ways to iterate through them) and so much more. Best of all, once I'd solved these problems I'd head over to their communities and look at other peoples solutions. This was a game-changer. Now I could see how my brute-forced (but successful) attempts were clumsy, and how I could have written them more elegantly and efficiently. I'd go through this very positive feedback loop of solving these problems, searching when I needed help and then comparing with others and repeating, and it felt great. Eventually, I realised that I'd built up enough skills doing this that I could actually automate a few of the more boring tasks at work. I read through the highly recommended 'Automate the Boring Stuff' by Al Sweigart and off I went.

In about 12 months I had automated nearly every report I had involvement with, automated all date collection from our various suppliers and customers, and even managed to use PyAutoGUI to automate some of the mind numbing and repetitive tasks I had to do in SAP (where I was only allowed access to the GUI, no scripting...). I created a few Flask apps that allowed me to do some of this and share a bit of it with some close co-workers too, but mostly I kept this to myself. Early on in the process of doing Project Euler I had created a GitHub to host my solutions, so I regularly added and updated my scripts on there to.

At this point, I had completely fallen in love with programming. I wanted more. I needed more. I knew at this point, that I would only become more miserable in my current career and decided at this point that I would aim to gain employment in a junior software position within 12 months. And then COVID came... This was a blessing and a curse. The job market became a mixture of stagnant and more competitive due to all of the lay-offs. But I had way more time on my hands thanks to permanent remote working. During this time I threw together a few simple web dev projects so I had something of a portfolio, but more importantly I tidied up all of the scripts I'd been using at work and threw on some READMEs explaining what they do and why I'd created them. I sent out regular job applications during this time, for all kinds of positions. Then in January, it happened. 

I applied to a small company that specialises in open source software and they got back to me asking if I'd like to interview. I spoke with the managing director and explained to him why I'm interested in the role, why I thought I'd be a good fit and then went through some typical interview questions. We got on well, and it turned out that the software they create is similar to the software that I was using and automating every day (SAP). I then went on to a second interview, this time with HR and their lead developer, where I was asked some question on how I would solve several problems in general terms (I didn't have to actually code anything). This went well and I was offered a junior position the following week.

I'm now just over 6 weeks in role, and I feel absolutely in over my head. Every day I hit wall after wall of problems I have no idea how to solve, and feel like I'm constantly fighting our framework of choice. But I love it. I'm finally doing it every day, and someone is actually paying me to do so. I can hardly believe it. I have a long way to go, but the team I'm in is super supportive and I can't wait to get the training wheels of and really get stuck in to something.

All in all, going from an interest in python to working as junior python developer took me a little over seven years. Could this have been done quicker? No doubt. If I had the right focus from the beginning, this probably could have been a year or two. But if my grandmother had wheels she'd be a bicycle. This is the pace it took me, and ultimately I'm really happy.

I know many of you learning have read similar stories before, and I know mine may not be that different from others, but hopefully a few of you might get some helpful takeaways from my story. If I was to summarise the keys steps that landed me employment, it would be these (this is the TLDR):

* Learn the basics of the language, and learn them well. Learn about data types, for loops, while loops, how to iterate through lists, take inputs. Learn about booleans and boolean logic. Learn about functions and classes (and perhaps a bit about object oriented programming). I spent far far FAR too long on this step...

* Learn how to make something. This can be anything. For me this was simple calculators and games to begin with, and moved on to simple programs that could rename files in my media folders.

* Take part in challenges that make use of programming. I adore Advent of Code and the community surrounding it, but there is also Project Euler, Code Wars and I'm sure plenty of others. Take your time with these. Don't cheat (by searching for other solutions before completing your own), but do feel free to use search engines, Reddit and Stack Overflow for ways to achieve sub tasks within your solution. When your done definitely go and compare against other people's solutions, and make note of why someone else's might be better.

* Make use of tutorials and and websites such as Codecademy, but don't *rely* on them. For anything you make during a tutorial, make something similar but different making use of your new skills and using stack overflow to fill gaps in your knowledge for features that weren't covered in the tutorial and that you don't already know.

* Create a GitHub and upload everything you make. Tidy things up and and README files to them.

* Soft skills / related skills: These are all the things you can transfer from other employment such as leadership, teamwork, effective communication etc, but also related tech skills. On my journey I learned how to use Linux, became comfortable with the command line and set up my own VPS on Digital Ocean (and one on Linode). This is NOT as difficult as it might sound if you've never done it before, but it does take some learning.

* Find ways to implement what you learn in to your current job if possible. Automate some processes. Scrape useful data. 

But really, all of the above can be shortened to: Study the language, build things, showcase what you've built.

A massive thank you to /r/learnpython as this has been one of the biggest sources of support for me over the years, and I'd never have gotten this far without it. If anyone is in a similar position to me prior to getting the first job, feel free to ask any question or reach out for some encouragement.

---

Edit: Thank you very much to those who have given me awards for this post. I'm glad that this could be useful to many of you, and it means the world to me that you felt strongly enough to send such a kind gesture. But please can I implore anyone else who is inclined to do so: Please spend your money on another good cause instead! Send a donation to doctors without borders, Reddit has plenty of money :)

I've tried to answer any question you guys have posted, but if I've missed anyone I'll try to make sure I get back to you shortly.",1617402563.0
Got my first offer as a python developer,1005,k51frp,learnpython,https://www.reddit.com/r/learnpython/comments/k51frp/got_my_first_offer_as_a_python_developer/,146,"I’ve been consulting for this company as an accountant and I just started writing scripts to automate some of the work they were doing. I also mentioned some ideas I have to automate a huge chunk of their AP process.

 I got a call tonight from the CFO with an offer to work full time, big raise, fully remote as a junior python developer/data analytics. I’ve been working my ass off trying to get a base knowledge of python over the past months. I just didn’t expect this quick of a turnaround and am so happy. I can’t believe I don’t have to trudge through a day of doing shit I don’t want to do before I get to code, now I get to do It at work. I’m ecstatic.

Thank you to everyone who has answered my questions in here. Happy holidays ❤️

*EDIT: I see all the questions under this post I’m going to answer all of them tonight",1606880452.0
"New, free book from Al Sweigart: Python Programming Exercises, Gently Explained",1000,y38qqx,learnpython,https://www.reddit.com/r/learnpython/comments/y38qqx/new_free_book_from_al_sweigart_python_programming/,85,"Hello, I've released my new book ""Python Programming Exercises, Gently Explained"". You can read it for free at:

https://inventwithpython.com/pythongently

Description: Many books and websites have aggressive programming challenges for top coders. However, *Python Programming Exercises, Gently Explained* is for the rest of us. We want challenges that improve our coding skills, not leave us confused and discouraged. Other tutorials and books have taught you the basics of Python, but the 42 programming exercises in this book let you practice what you've learned. Selected for their simplicity, these programming problems include gentle explanations of the problem, the prerequisite coding concepts you’ll need to understand the solution, and helpful templates to put together the programs if you have trouble starting from scratch.

This is the perfect book for beginner and intermediate programmers who want to test their Python skills but aren’t ready to begin professional-level software development. You don’t need the frustration of being expected to create complex algorithms and computer science theory; you need a large set of programming challenges that meet you at your level, with gentle explanations.",1665692050.0
I got an invitation from Google's Secret Hiring Challenge!,991,j0d2xj,learnpython,https://www.reddit.com/r/learnpython/comments/j0d2xj/i_got_an_invitation_from_googles_secret_hiring/,140,"Today in the afternoon I was typically googling some stuff about Python, minding my own business. A normal day for a normal programmer, right? Not for me this time! Suddenly, from one of my searches, I got the message from Google page saying: ""You're speaking our language. Up for a challenge?""

For the first few moments, I did not realize what was going on. Did I open some shady Google-like website? Was this an ad...? The layout itself seemed kind of mysterious. Like it led you to a secret, dark room for a mission to save the world from publicly unknown powers. lol. Regardless, I clicked the ""I want to play"" button.

The page looks like a typical command-line interpreter. There are 5 total levels, one challenge for the first level, two challenges for the second, three challenges for the third, and so on...

I was so thrilled that I've been coding non-stop for almost 7-8 hours. They are super fun to do and they surely get harder along the way! I've recently completed level 3 and the page asked for my personal information so they can contact me for an interview (maybe, who knows?!).

Obviously, as a second-year student, I did not expect this kind of opportunity at all. I don't even know where all of this will lead me to, but one thing is sure, as I keep doing these challenges, it brings valuable experience and knowledge to the table!

I am really excited about this. I wholeheartedly wish you, too, the best of luck in the near future!

BTW, the platform is called Google FooBar.

[Image of the Website](https://imgur.com/a/RzR5lTI)",1601151653.0
Holy fuck I get it now my dudes.,986,gmcgvc,learnpython,https://www.reddit.com/r/learnpython/comments/gmcgvc/holy_fuck_i_get_it_now_my_dudes/,115,"I've been learning python for the past several weeks, and I'm working on creating an FTP program using PyQt. I was struggling understanding the vocabulary so I just spent the past 1.5 hours rewriting down the terms trying to understand them. Everything just clicked and I think I finally understand how OOP works.

**EDIT:** Lots of people where asking how I studied. I'm working on writing down all of my notes Understanding the code is important but I think if you can't explain the terms or what you're coding. It will only hold you back.

**EDIT 2:** Below are the vocabulary terms, I've been trying to memorize. I've been trying to use these terms to explain to myself how my code works. This has been helping me ""connect the dots"" I have some examples below.

EDIT 3:

Okay this was actually a lot fucking harder than I thought it would be. If the definitions or code needs to be corrected. **PLEASE LET ME KNOW I DON'T WANT TO SPREAD INCORRECT INFORMATION!!**

&#x200B;

* byte code -  representation of the python program in the interpreter
* complex numbers - extension of the familiar number system which all numbers are expressed as real and imaginary
* decorator - A function that modifies another function. Return value is a callable object
* dictionary - A python datatype composed of keys + values. Can be a variety of data types
* duck typing - object properties determine what it is.
* first class object - Object that can be created dynamically, stored in a variable, passed to a function, returned as a result (ex: variables, lists)
* greedy regular expressions - Regular expressions that match the longest string possible, \* + ? Counterparts are \*? +? ?? these are non-greedy (shortest string)
* hash - number used to relate objects for storage in a hash table.
* hash table - An object that maps keys to values
* hashable - An object is hashable if it implements hash.
* list - A series of values that can be changed
* tuple - similar to a list. However this is a sequence of values that cannot be changed
* nested scope - Where a function inside a function, can refer to values in the outer function.

TIME FOR THE SUPER IMPORTANT ONES:

* **Immutable Object** \- An object with a fixed value. Immutable objects cannot be altered. A new object has to be created if a different value has to be stored. ex: tuple
* **Mutable  Object** \- An object that can be changed after it is created
* **Attribute** \- Values associated with an individual object, accessed using dot syntax. Ex: a.x means fetch the 'x' attribute from the 'a' object. **Can be also called properties**. Accessible though object creation.
* **Functions** \- A reusable block of code written to preform a single related action. A block of code written to do one thing.
* **Classes -** Define the general behavior objects can have. A template for creating user defined objects.
   * **Instantiation** \- Making of an object from a class
   * **Instance** \- Creation of an object from a class.
   * **Object** \- Any data with attributes + values, and defined behavior (methods)
      * *From my research An* ***Instance*** *and an* ***Object*** *can be referred to as the same thing, these words can be used interchangeably. If someone has a clearer explanation, please feel free to comment.*
   * **Class attributes** \- Variables owned by a class and shared by all instances of a class.
   * **Instance attributes** \- Attributes that are owned by once specific instance of a class and not shared between instances
   * **Methods** \- Functions that ""live"" inside of a class. The functions work the same as normal functions. They are just called methods to differentiate them from functions that don't ""live"" inside of a class.
   * **\_\_init\_\_** \- is a method (function that lives inside of a class) that runs when an instance is created. It is used to create instance variables.
   * **self** \-  'self' is nothing special, it is a word used to reference the object the  class is assigned to. when you create instance variables with **init** or other methods. self is passed to connect the methods to the object. Also prefixing variables with self, allows every method in the class to access the variable, and any instance(object) created from the class can access the variable.
* Classes -> Blueprint, Instances -> Things that can be made
* **super()** \- Helps python make connections between parent and child classes.
   * Classes can inherit from other classes
* **Multiple Inheritance** \- When a class inherits the characteristics of more than one class
   * This  creates the famous diamond problem AKA ""The Deadly Diamond of Death""  (sounds way cooler tbh). If Class D inherits from B and C, in what order  does the class inherit.

A

/          \\

B            C

\\            /

D

* Method Resolution Order (MRO) - Looks to solve this problem, used primarily to  determine the order in which methods(functions apart of classes) should  be inherited in the presence of multiple inheritance.
* Python uses the [C3 Linearization Algorithm](https://en.wikipedia.org/wiki/C3_linearization) for MRO - This algorthm is difficult to understand. I think python provides a built in function to determine what methods are inherited first.

&#x200B;

**I CAN USE DEFINITIONS ALL DAY LONG BUT LETS TRY TO VISUALIZE EVERYTHING**

&#x200B;

    class cat():
    '''
    This is a class attribute(property), it can be accessed by all methods inside  the class by invoking the class name followed by the property ex: class.cat
    We can define class properties that will effect all the methods(functions)     inside the class
    '''
        breed = 'calico' 
    
        '''init function used to create instance(object) variables.'''
        def __init__(self, name, age):
        
    '''we preface self with a variable name so every method in the class can    access the variable, and any instance(object) created form the class can access the variable.'''
            self.name = name 
            self.age = age 
    
    
     
        def sit(self):
    '''We're calling a instance variable defined in another method'''
            print(self.name.title() + ' Likes to sit on the table')
    
    
        def cat_type(self):
     '''We're calling a instance variable defined in another method and calling a class attribute'''
            print('My cat is ' + self.age + ' years old and is a ' + cat.breed)
    
    
    '''This creates an instance(object) and defines instance variables self.name='Max', self.age='6'. Instance variables are unique to that instance. We're instantiating(creating) the my_cat object from the cat class'''
    
    my_cat = cat('Max', '6') 
    
    '''This creates a different instance(object) and defines new instance variables'''
    
    another_cat = cat('Sophie', '8') 
    
    '''Here we're looking at the sit attribute associated with the object my.cat'''
    my_cat.sit()
    
    '''Here we're looking at the cat_type attribute associated with the object another_cat'''
    another_cat.cat_type() ",1589843074.0
7 Beginner Python Project Ideas,965,huezhd,learnpython,https://www.reddit.com/r/learnpython/comments/huezhd/7_beginner_python_project_ideas/,101,"# 7 Beginner Python Project Ideas

These are some of the beginner project ideas that I have done when I was learning Python. Hopefully, it helps anyone who reads this too. Here are the project ideas:

1. **Any Type of Card Game** \- I personally made Blackjack due to its simplicity, but any other type of card games such as rummy would also work. Building most types of card games can help you master fundamental concepts of Python.
2. **Hangman Game** \- Hangman is a great game to test a person's knowledge of the beginner programming concepts such as lists, loops, and conditional statements. A simple Hangman game on the console is usually recommended for beginners
3. **Strong Password Generator** \- These can make use of the random module that is present in python in order to create random strings of numbers, letters, and symbols. You can also use the String module as I did for the project.
4. **Guess the Number Game** \- This is recommended for the very new Python beginners who only have a few days or a few weeks of experience. This also uses the random module to create a random number that the user has to guess.
5. **Login System -** This is where the program lets a user login to the system and lets them create an account if they haven't. This takes advantage of Python's ability to read and write to text files, which can be used as mini-databases. Highly recommend trying this project out
6. **Mad Libs Generator -** This is probably one of the most common project suggestions that you would find on the internet. But, it's a good one to try. It gives you a chance to experience all the beginner topics in a fun way.
7. **Text-Based Adventure Game -** This might also be one of the most commonly suggested ones, and it does take a long time to build a well-designed, long, and complex game. But, it's definitely worth trying to do as it will be very rewarding in the end.

Let everyone know any other idea in the comments for this post so that they will have a greater variety of options to choose from. Also, feel free to suggest any other types of project ideas (pygame, GUI, intermediate) project ideas that you want to know. I could also share the best youtube tutorial links for particular projects to anyone who wants guidance through these projects. Hope you have great fun building these projects and advancing your Python skills!",1595219720.0
From struggling with for loops to a government database administration job-- in one year,964,etwubn,learnpython,https://www.reddit.com/r/learnpython/comments/etwubn/from_struggling_with_for_loops_to_a_government/,58,"TL;DR-  I'd like to thank all of r/learnpython from the bottom of my heart for being an amazing and helpful resource from day 1 of my python journey.  Never give up on programming, and never stop learning. Practice, practice, practice.

One year ago, I started out with zero programming experience and zero security experience. I got placed in my high school's technology course to fill out my schedule. I spent about two weeks watching Bob Ross and following along in MS Paint before my teacher recommended that I learn something useful. He mentioned something called Python, and told me to look into it. I immediately fell in love with it. It was fun to use, easy to write, and extremely flexible. I struggled a lot when I first started, and my first program took me longer than I care to admit. It was extremely simple:

    num = int(input(""Enter the number: ""))
    if num == 1000:
        print(""The number is 1000"")
    elif num > 1000:
        print(""The number is greater than 1000"")
    elif num < 1000:
        print(""The number is less than 1000"")
    for i in range(num, 0, -1):
        print(str(i))

I struggled for three days with type errors and the loop threw me for a loop. It was frustrating, but the feeling of reward and pride when I saw those numbers printed out correctly inspired me to stick with it. Those, in my opinion, are the two most useful virtues to have when learning programming: passion and perseverance. I poured time into Python, spending 6-7 hours a day programming and the rest thinking up projects and reading reddit posts about programming.

Not long after, I decided to move on from small programming exercises and start a real project. I found that picking a project that forced me to learn new things about python greatly helped me. I wrote a text based dungeon crawler, and it taught me about classes, function, and dictionaries. It's a hot mess (4k lines of insane code- [you can see it here, in all its nasty glory](https://github.com/Mili-NT/Dungeon-Of-The-Silver-Key)). I was proud of it, and I honestly still am. The location system was insanely difficult for a new programmer, and it even drove me to tears on a few occasions. I was so proud I decided to enter it in my state's technology competition in project programming.  I won local and districts, but didn't place at state.

&#x200B;

After that, I discovered my other passion: cybersecurity. Like I did with Python, I fell in love with it and spent hours upon hours reading, doing CTF exercises, and messing around with networking. I decided that cybersecurity was what I wanted to do with my life. Just like python, what helped me most here was hands-on practice and time. Getting stuck in a cycle of reading and not practicing is easy, but you only really learn by doing. Doing hack the boxes, Capture The Flags (such as the ones at [over the wire](https://overthewire.org/wargames/)), and messing around with vulnerable VMs like DVWA and Metasploitable was crucial to learning for me.

Over the summer, I got an entry level IT support job with a contractor that worked with my high school. It was a lot of grunt labor at first, hauling obsolete systems off for disposal and such. As the summer progressed, we started updating chromebooks by hand for 9 hours a day. I was bored as all hell, so I turned once again to python. I wrote a small script to scrape public text documents off of pastebin. It was slow, got banned every 40 minutes or so, and really was just a stream of random data deposited in a onedrive folder for me to look through.

&#x200B;

Over the summer and through the year, I honed it into the crown jewel of my python projects. It went from a shitty script made from boredom to a tool for malware collection and data analysis. I dubbed it [BinBot](https://github.com/Mili-NT/BinBot) and worked on it constantly. I decided to enter it in the tech competition again. I swept locals, and impressed the judges so much that one judge offered to put in a recommendation to a manager he knew for a part time job at the google HQ in Atlanta.

Today was the regional competition. I presented BinBot as an open source threat intelligence program. I demonstrated how it worked, what it's potential in a security workflow was, and to accompany it, I walked the judges through an analysis of an Emotet sample I did. I showed how BinBot alerted me to a potentially malicious URL, how I retrieved the malicious word doc and deobfuscated the powershell payload, and fetched the live payload from a compromised domain and ran it through HybridAnalysis. They were extremely impressed, and I won first place.

&#x200B;

Afterwards, the regional IT supervisor and the head of the board of education came up to me and offered me a job as a Database Administrator. They said the old admin has retired, and that they wanted to hire me. The work is fully remote and has government benefits, which means I can continue doing it when I go off to college. I'll be setting up, writing queries for, and maintaining every database in the entire district. I'm extremely excited and grateful.

Thank all of you for helping me, answering my stupid questions, and never stop learning. Hack on, brothers.  


edit: Link to a markdown version of the emotet analysis [https://pastebin.com/FgcDQt3g](https://pastebin.com/FgcDQt3g)",1579987322.0
Don't quit,953,j8su3p,learnpython,https://www.reddit.com/r/learnpython/comments/j8su3p/dont_quit/,132,"Idk who needs to see this out their but if you're struggling to find the motivation to keep learning python or programming in general, don't give up. What worked for me is finding a project that would challenge me, and set aside time every day(or however often you can) and just struggle through it. Once you make it through, it's one of the most rewarding feelings ever. Every hurdle you jump over in the learning process is one less that you have until you meet your goal. You can do it! I spent 6 hours yesterday struggling to learn canvas' api and I finally got it to work perfectly and now I know so much more about requests, headers, responses, and more. And I'll continue to keep struggling and learning until I've met my goals and move onto whatever's next :). Good luck out there, I believe in you!",1602365791.0
It’s insane how easy learning is when you have an end goal.,948,vbjg65,learnpython,https://www.reddit.com/r/learnpython/comments/vbjg65/its_insane_how_easy_learning_is_when_you_have_an/,120,"When I say an end goal I don’t mean an end goal of “learn python”.

For me I’ve tried to get into python for years but I never really had a simple use for it at work. I’m sure I did, but it never came to mind.

I recently started a new role, and a lot of the role is cleaning data via excel. I figured this can easily be automated and save like 30 of my 40 hours a week. So here I am running code to clean data instead of spending all my time manually cleaning the data. Plus I’m understanding so many things I never understood before because I had no “goal” for it.

Codes not done yet and it can be improved upon greatly, but I’m so happy to be using it.",1655146534.0
Finally did something I am proud of - Helping others with Python!,937,gabj9m,learnpython,https://www.reddit.com/r/learnpython/comments/gabj9m/finally_did_something_i_am_proud_of_helping/,77,"I have been dabbling in programming for a few years now, but with a full-time job and other commitments, I never really made the time to create something truly useful. 

I went through the web scraping phase, made simple scripts to move files out of my downloads folder and place them into the respective folder based on their extension, and I was quite content with this kind of simple stuff. 

But now I finally feel like I made something worth while! While quarantined with the fam, I overheard my mom trying to resize 100s of product images for her e-com site. 

Mom is not technologically incapable, she knows how to google ""Image Resizer"" or something along those lines, but she always does them one-by-one. A huge time sink. I did not know she does this every time she gets new images from her vendors. 

**Mom:** ""This is going to take me forever! This vendor never sends me the right image size, every quarter this takes hours, ARGHHH!""

**Python Noob:** ""I think I can get this done in a few minutes for you, mind if I give it a go?""

After some googling I proceeded to use the Pillow module to iterate through all of the images in a folder and plop them into a new folder, nicely resized. This took me like 10 mins to resize all of the images, she was blown away. 

I went one step further though because I knew this was a recurring thing for her. I needed to make a proper desktop icon for her to clickity clack and immediately have 100s of images resized anytime. A few youtube videos later, and she was able to double click an icon on her desktop to resize product images anytime without needing the command prompt. 

It took just a few minutes to teach her how to put the original images in folder X, double click the image resizing icon, and the new images would be in folder Y shortly thereafter. 

Needless to say, she is super happy to be able to resize all of these images in bulk, saving her HOURS of her time. I am on Cloud 9 as well because I feel like I've finally put my programming wherewithal to good use by helping my mom with something so practical. 

I'm excited to continue learning new ways to make life easier with the ""magic"" of python. 

TL;DR - Finally did a thing in python and feeling quite good about it!",1588173979.0
I created an app in PYTHON.,933,mtwjwy,learnpython,https://www.reddit.com/r/learnpython/comments/mtwjwy/i_created_an_app_in_python/,132,"Hey! I am 14 years old and I have made a free and open source app in PySide2.

Its name is MrPlayer and it is Mp3 Player which plays songs from local folder with lyrics which is extracted from [genius.com](https://genius.com/) but for lyrics you need to create a genius API token which is very simple. It is a full fledge app, please check it out on [https://AkshatChauhan18.github.io/MrPlayer](https://akshatchauhan18.github.io/MrPlayer) every detail is provided in website.

Please star the GitHub repository and all contributions are appreciated. It also have a CLI.

Please tell how it looks and what improvements can i make",1618822915.0
"""Automate the Boring Stuff with Python"" Udemy course is free to sign up for the next 48 hours: DEC2019FREE",932,e59vzp,learnpython,https://www.reddit.com/r/learnpython/comments/e59vzp/automate_the_boring_stuff_with_python_udemy/,92,"You can use this code to sign up for the Udemy ""Automate the Boring Stuff with Python"" course for free:

https://www.udemy.com/course/automate/?couponCode=DEC2019FREE

During the month of December, you can also use DEC2019 to sign up for $14 instead of the usual $50: https://www.udemy.com/course/automate/?couponCode=DEC2019

Due to the way Udemy now does promotions, I'm limited in how many discount codes I can make each month, so there's no way for me to make more after the 72 hour period, which ends roughly Wednesday night 7pm Pacific time.

I'll have the second edition of the book in HTML format online, uh, soon. I've had some delays getting it ready. The online course follows the 1st edition, and I won't be able to update it until probably mid-2020. I'll write up a blog post about what exactly is new in the 2nd edition soon too. Go ahead and get started: the Udemy course is still useful.

The 1st edition is free online under a Creative Commons license, but if you want to buy a print copy of the book, I recommend getting it directly from the publisher instead of Amazon; you get DRM-free ebook copies in PDF, Kindle, and epub formats for free with the print book: https://nostarch.com/automatestuff2",1575339229.0
Beginner's Python Cheat Sheets (updated),921,mhw66i,learnpython,https://www.reddit.com/r/learnpython/comments/mhw66i/beginners_python_cheat_sheets_updated/,57,"Hello everyone. I've been wanting to update the Beginner's Python Cheat Sheets that accompany Python Crash Course for a while now. I finally made time over the last month to go through the entire set. I originally developed the sheets in Word, which was not a particularly sustainable approach.

I rewrote all of the sheets in a proper desktop publishing app (Indesign, if you're curious), so I can easily revise them as needed from this point forward. If you find any errors or issues that haven't been addressed, please let me know and I'll get them fixed promptly. I also made a number of other improvements in the process:

- There's an entirely new sheet that focuses on using Git.
- All sheets are available in the original full-color design, and a printer-friendly black and white set is included as well.
- The download includes a single 28-page document which includes all the sheets, as well as a folder where each sheet is its own document. This can be helpful if you're focusing on one specific area of Python.
- A number of minor errors and outdated sections have been corrected.
- As always, they're not specific to Python Crash Course; they've been helpful to many people, regardless of your primary learning resource.

The updated sheets are hosted on [Leanpub](https://leanpub.com/beginners-python-cheat-sheets) and [Gumroad](https://gumroad.com/l/python-cheat-sheets), and there's an option to download the full set at no charge on both platforms. Although I'm making it optional for people to pay a small amount for the set from this point forward, they will remain available at no charge as long as Python Crash Course is in print.

Thank you, and I wish you well in your Python journey. :)",1617286360.0
I actually used Python to do a thing!,916,iwdr8s,learnpython,https://www.reddit.com/r/learnpython/comments/iwdr8s/i_actually_used_python_to_do_a_thing/,83,"I've been learning Python for maybe a month now, mostly with Al Sweigart's Automate the Boring Stuff, and last week at work I actually managed to write a script to automate something. My boss asked me to copy a list of file names (70+) in a network folder into a spreadsheet; this is not difficult to do manually but it's a faff so I thought I'd try using os.walk and... it worked!

I wanted to post here partly because I'm feeling smug, but also to try to encourage any other beginners who are thinking of / scared of / struggling with learning Python. I was always keen to try to learn something like Python but I'm crap at learning unless there's a real world application; Al's course is brilliant at teaching concepts, but then relating them to how you can actually use them to get things done in the real world, and that's made learning a lot more fun and doable.

Thanks also to everyone on this community for being friendly and supportive. I'm now going to go and delete all the comments from my script so none of my colleagues will ever be able to reverse engineer it...",1600608144.0
"""Automate the Boring Stuff"" author refactoring beginner's code on a live stream Wed 4/17 at 7pm pacific",907,bdzedl,learnpython,https://www.reddit.com/r/learnpython/comments/bdzedl/automate_the_boring_stuff_author_refactoring/,63,"EDIT: Thanks for checking out the stream. If you missed it, it's at https://www.youtube.com/watch?v=y2W1PiHctnE

Hello, Reddit! I'll be going over a short Python game written by a beginner and showing how I'd refactor the code so that it does the same thing but with shorter, more readable code.

I'll be streaming tomorrow evening, Wednesday 4/17/2019 at 7pm Pacific at https://www.twitch.tv/alsweigart/ and answering questions folks post to the chat room. If you can't make it, this stream will be recorded and later posted to [YouTube](https://www.youtube.com/user/Albert10110).

Some of the themes I'll cover are:

* How to avoid ""Choose Your Own Adventure"" style code, which depends on flow control instead of data structures.
* How to remove duplicate code (and why you'd want to).
* When you should replace multiple variables with a list or dictionary.
* How you can save yourself effort by using the Python standard library.

If you have programs you'd like to see me refactor, feel free to PM me or post as a comment here your pastebin.com link. To make sure the audience can follow along and it's easy to stream, I'd like to ask that they:

* Generally be between 10 and 300 lines of code in a single file.
* Only use the Python standard library and not require additional modules.
* Not require additional files, like files that need to be on your computer, or account info or special permissions or environment setups.

See you then!",1555449741.0
Beginner's Python Cheat Sheets (updated),901,11eg5af,learnpython,https://www.reddit.com/r/learnpython/comments/11eg5af/beginners_python_cheat_sheets_updated/,99,"Hi everyone! When Python Crash Course first came out, I made a set of cheat sheets to go along with the book. Over the years this resource has proven useful to a much wider audience than just PCC readers. I just finished updating the full set of sheets, and wanted to share them here first.

You can download a pdf that includes all the sheets in color in [one document](https://github.com/ehmatthes/pcc_3e/releases/download/v1.0.0/beginners_python_cheat_sheet_pcc_all.pdf). For a full description of the overall set, including printer-friendly black and white versions, see [here](https://ehmatthes.github.io/pcc_3e/cheat_sheets/). Individual sheets cover Python basics, and the following libraries: pytest, Pygame, Matplotlib, Plotly, and Django. There's also an additional sheet covering Git basics.

Last year I tried offering these through Leanpub and Gumroad, so people could pay for them if they wanted to. There was an option to download them for free, but both platforms have made it more difficult to download resources for free. It was never my intention to put them behind a paywall, so the full set is free to download from GitHub, and will remain so as long as Python Crash Course is in print.

Thank you, and I'm happy to answer any questions anyone may have. (Also, if you find any mistakes please let me know and I'll get them updated quickly.)",1677609442.0
I found a job (Thanks to ya'll),890,n3yrpl,learnpython,https://www.reddit.com/r/learnpython/comments/n3yrpl/i_found_a_job_thanks_to_yall/,89,"Ill try to keep it short but here it is: I was made to take a exam on the industry of the company, SQL and Pseudocode. 

Although, I didn't have any experience with SQL at all and only 4 days to get a basic understanding of it for the exam. The fact that I had some experience with Python made the the task a lot less intimidating. 

SQL and Python are hardly similar at all but having experience in another language and being able to think somewhat programmatically really helped in getting me a basic understanding of SQL 

When I took the test I got most of the SQL questions and the industry questions correct but according to my interviewers they were the most impressed with how I answered the pseudocode question

The Pseudocode they gave me was essentially Python Code!! it only had some missing bits but it was essentially a simple while loop with the same exact indentation that Python code is known for so it was an easy answer for me.

Later on, subsequent interviews they asked me about how I knew how to answer the question and I mentioned that I practiced Python on the side and they tested me on my knowledge of the language and I got most of their questions right (Keep in mind that I haven't programmed in Python for months but the knowledge stuck!)

It's all thanks to roaming this subreddit for years and all of your great suggestions for learning material THANK YOU ALL!.

TL;DR : I recently got a job at a large multinational company, due in no small part to all of you. thank you again!!",1620055291.0
"Hello, world! I'm Al Sweigart, author of ""Automate the Boring Stuff with Python"" and several other programming books. AMA!",886,otcqs7,learnpython,/r/Python/comments/otbvoj/hello_world_im_al_sweigart_author_of_automate_the/,5,,1627487679.0
Nothing is more liberating than learning python well enough to be able to answer questions on Stack Overflow,869,cvl5jy,learnpython,https://www.reddit.com/r/learnpython/comments/cvl5jy/nothing_is_more_liberating_than_learning_python/,45,Seriously! Actually makes me feel vaguely skilled at the language!,1566807421.0
a program I wrote 5 years ago was finally useful. feeling weirdly proud about this.,871,w88ygy,learnpython,https://www.reddit.com/r/learnpython/comments/w88ygy/a_program_i_wrote_5_years_ago_was_finally_useful/,72,"5 years ago I started learning python so try and get a better job. I quit so many times, but slowly worked up enough knowledge to bullshit my way into decent career as a data engineer. 

Well tonight my wife, a teacher, was mad that she couldn't used any YouTube videos in her classroom because the network locked it out. Well 5 years ago just for learning I wrote a python program using youtube_dl that could download whole videos when given a url. Lucky I'm a data hoarder and still had it in an old hard drive. I showed it to her and 20 minutes later she had everything she needed. I'm feeling weirdly proud of this stupid little thing I made that was finally useful 5 years later. 

Don't give up, or at least don't give up completely. It might take longer than you had first hoped, but if my dumb ass can do this shit so can you.",1658806249.0
META: Pandas shouldn't be recommended to a beginner who wants to read a CSV.,870,fo6lbo,learnpython,https://www.reddit.com/r/learnpython/comments/fo6lbo/meta_pandas_shouldnt_be_recommended_to_a_beginner/,130,"I'm on this subreddit a good bit, and any time anyone mentions wanting to work with data, without fail one of the first 
things that gets brought up is Pandas. I'm not convinced that is the best advice for people who are trying to learn 
Python, and I wanted to bring it up to the community to see what others thought.

Here's an example block of code that a poster might write if they want to open a CSV and show rows where a 
column matches a certain value:

    import csv
    
    f = open('path')
    reader = csv.reader(f)
    
    for row in reader:
        if row[0] == 'some_value':
            print(row)

It might not look like much, but opening a file using the `csv` module exercises a significant number of the fundamental 
aspects of the Python language. Among the highlights we have:

 - importing a module
 - assigning a variable
 - opening a file (using python's `open` builtin)
 - using imported code
 - `for` loops, iteration in general and the syntax for it
 - the concept of a list (because that's what rows are by default)
 - using list indexes to get a value
 - `if`/`else` statements
 - boolean expressions / the `==` equality operator
 - the print function

By slowly writing the code to perform this task and running it, they get exposed to all of these important concepts! We 
could even modify this example to use a `with` statement for the file, and show yet another important piece of Python.

Let's compare that to the same operation in Pandas, from a [very popular stackoverflow answer](https://stackoverflow.com/a/17071908/4453925):

    import pandas as pd
    
    df = pd.read_csv('file path')
    select = df.loc[df['column_name'] == some_value]

Sure, this is less code, and is ""easier"" as a result, maybe, but even as an experienced Python user, this block of code takes a 
minute to unpack, and what it fundamentally *does* is not immediately obvious. The poster probably copy + pastes it, runs it to see what it *does* and then moves on without any deeper understanding of what it means, programmatically, to search through a dataset for an item. It has the added negatives of doing three other things which are decidedly not good:

 - it renames an import, which has a time and a place, but to a brand new learner is both not obvious and not helpful
 - it shows overloaded behavior of `[]` which is uncommon and potentially confusing if they don't have a good understanding of the slice / `__getitem__` constructs
 - almost every Pandas example I've seen uses the same damn variable name, `df`, for any `DataFrame`, which doesn't do
any good to hammer in the importance of good, descriptive variable names. I'll admit this might be a silly gripe.

This example leads directly on to the next point: Python can be *beautiful*. It is a concise, yet expressive language, and 
one of the most amazing things about it is that the creators have worked hard to make sure it has a certain feel to it: 
when an API is written ""pythonically"", you can intuitively understand how to work with it, if you are familiar
with how Python works. The `csv` module is no different, and it starts to give users an idea of what that means. 
This is another place where Pandas falls short for the beginner: it does not tend to exemplify this important aspect of the 
Python language.

All this said, Pandas is an awesome, powerful library and it has an important place in data science and Python in general. 
When you work with data  *all the time*, having a very concise way to express your data manipulation is 
both helpful and desirable. However, I do not believe that it should be enthusiastically recommended to new 
users of Python because pointing someone towards Pandas and telling them to use it when they work with 
data is not a useful or effective way for folks to learn about the fundamental underpinnings of the Python language.",1585062341.0
I made a script that automatically adds all songs from youtube playlist to spotify playlist.,865,htyr40,learnpython,https://www.reddit.com/r/learnpython/comments/htyr40/i_made_a_script_that_automatically_adds_all_songs/,40,"This project was super fun to make and i learnt a lot.

Github repo:  [https://github.com/piyx/add-yt-songs-to-sptfy-playlist](https://github.com/piyx/add-yt-songs-to-sptfy-playlist)",1595156656.0
I wrote my first useful Python program!,857,gd70np,learnpython,https://www.reddit.com/r/learnpython/comments/gd70np/i_wrote_my_first_useful_python_program/,122,"For the first time in my life, I wrote a Python program from scratch to automate my work. My boss gave me the task of copy/pasting all the fields from a long online application form to a word doc and I wrote a code to do that in 5 minutes. It shaved off at least 40 minutes from my workload. It might not seem like much, but I'm over the moon :)

Edit 1: Thank you all for your kind words. Being part of this community has helped me immensely. I’m truly grateful to have found it.

For those who asked for the code, here it goes - https://github.com/abhisu30/OnlineFormExtraction

Edit 2: For those who asked, no I didn’t use my work computer. My boss asked me to email her the word file with the form fields so I executed this code on my home computer and emailed it to her.",1588577149.0
TIL I’ve been making debugging statements harder than they needed to be.,855,nur6o9,learnpython,https://www.reddit.com/r/learnpython/comments/nur6o9/til_ive_been_making_debugging_statements_harder/,91,"I don’t know if I’m the only one who missed this, but today I learned that adding an ""="" sign to the end of an f-string variable outputs ""variable_name=value"" rather than just the ""value""

Makes writing quick, clean debug statements even easier!

    In [1]: example_variable = [1,2,3,4,5,6]

    In [2]: print(f""{example_variable=}"")
    example_variable=[1, 2, 3, 4, 5, 6]

    In [3]:

Edit: Works in Python 3.8+, thanks /u/bbye98",1623109946.0
Just want to say THANK YOU to all the kind people always willing to help!!! It encourages people new to programming to keep pushing instead of giving up! It helped me!,855,m7cbsl,learnpython,https://www.reddit.com/r/learnpython/comments/m7cbsl/just_want_to_say_thank_you_to_all_the_kind_people/,41,"I've asked a couple of times here for advice or help.


There were always people willing to help or share their opinion. No one was mean!


Did the same with Stack Overflow - it was disgusting. Almost made me want to quit learning because I thought there is no one that will try to help you.


This sub - a different world! 


**So thank you kind people that still remember that once they were beginners too! You have no idea how much it helps a newbie when s/he sees that there is a place to ask for help and no one is judging you!**",1616019715.0
5 Projects For Beginners To Learn Python,856,ld5c3e,learnpython,https://www.reddit.com/r/learnpython/comments/ld5c3e/5_projects_for_beginners_to_learn_python/,92,"I have been involved in many discussions on here where i tell people the best way to learn is by doing but I never mention what to do. Below are the projects i think would be best for Python beginners.

1. **User inputs** \- Create an app that asks the user to input one character that must be a vowel. Continue asking for the input until a vowel is inputted. You can also give user feedback every time a non-vowel is entered or upon a successful input.
2. **Write a function** \- Write a function that takes in a positive integer and returns its multiplicative persistence, which is the number of times you must multiply the digits in the integer until you reach a single digit. For example the integer 39 returns 3. You get this by taking 39 and multiplying its digits 3\*9 which equals 27. You then multiply 27's digits 2\*7 = 14. Lastly 1\*4 = 4 which is a single digit. You had to multiply 3 times so you return 3. The integer 999 would return 4.
3. **Calculator app** \- Build a calculator app that performs multiple operations. Use the skills learned in projects 1 & 2. Try using many functions in your app, one for each operation (ex. addition, subtraction, multiplication, division).
4. **Read & write files** \- Build an application that reads a txt file and outputs a csv file. The app should take each line of the txt file, split the line into an array of words, and write each line to the csv file with each line being a row and each word being its own column in that row.
5. **Bots & webscraping** \- Using everything you have learned in projects 1-4, build a bot that scrapes data from a webpage and writes the data to a txt file. For example, you can have a bot go into instagram and pick a random person following you. Output their name to the first line of a txt file. Then go into their followers and repeat the process by outputting the name of this chosen person to the second line of the txt file. Run this until you get to 10 names. Make sure you add random time pauses in your code so that your bots don't get recognized by the sites you are scraping. If you have trouble starting this one, take a look at using Selenium Webdriver here: [https://selenium-python.readthedocs.io/installation.html](https://selenium-python.readthedocs.io/installation.html)

Write your answers to 1 & 2 in the comments. If you struggle with any of these projects we can provide guidance and solutions in the comments.",1612524813.0
"Beginner learning Python at 40 here. Any friend like me, please raise your hand!",854,p249dn,learnpython,https://www.reddit.com/r/learnpython/comments/p249dn/beginner_learning_python_at_40_here_any_friend/,300,"Yes, everyone said that we can learn programming at 40! But the key success is about how can we over come the challenge.

I have started python two months ago. (slowly). and it's been painful. Even I am a believer in life long learning but sometimes age get in your way. 

I think one of the key success here is that we have a strong community support (or at least, I need a moral support) so I want to create a thread where people can ask question safely and some place where they can vent out their frustration. 

so anyone who start programming fresh at 40s please shout out here!",1628649921.0
"Al Sweigart, author of the legendary 'Automate The Boring Stuff' book (and many others) now streams beginner-friendly live coding on twitch!",856,ao3zq2,learnpython,https://www.reddit.com/r/learnpython/comments/ao3zq2/al_sweigart_author_of_the_legendary_automate_the/,52,"Find him here:

- https://www.twitch.tv/alsweigart

Thanks to u/fersloth for posting this info in r/Python, this is super exciting news for anyone who watches twitch and wants to learn to code from a professional programmer and educator in an interactive environment!
",1549547957.0
5 interesting Python modules,852,hv9r5u,learnpython,https://www.reddit.com/r/learnpython/comments/hv9r5u/5_interesting_python_modules/,100,"# 5 Interesting Python Modules

These are some modules that might not have day-to-day use for Python programmers but are still fun to try out and experiment with. Here are the modules:

1. **Wikipedia -** It turns out that you can import the whole Wikipedia into your Python Program! Simply run `pip install wikipedia` on your computer and import the module. There are multiple functions in the module such as summary(), search(), set\_lang() which can be used to create multiple interesting projects. More info at [https://pypi.org/project/wikipedia/](https://pypi.org/project/wikipedia/)
2. **Emoji -** This is a cool module that you can use to add emojis to your project. The emojis will be displayed in the command line for your project. To install it, run `pip install emoji`. More info at [https://pypi.org/project/emoji/](https://pypi.org/project/emoji/)
3. **Turtle -** This is one of the most well-known interesting Python modules. It comes pre-installed with the default Python3 package. Import turtle for graphics and simple 2d games. This is a module primarily used for creating graphics and cool visuals. More info at [https://docs.python.org/3.3/library/turtle.html?highlight=turtle](https://docs.python.org/3.3/library/turtle.html?highlight=turtle)
4. **PyDictionary -** This is a module containing the whole English dictionary! It can be used to find the definition, synonym, antonyms, and translations of words. To install it, run `pip install PyDictionary`. More info at [https://pypi.org/project/PyDictionary/](https://pypi.org/project/PyDictionary/)
5. **Arrow -** This is an interesting module used for advanced functions with date and time. This is the more advanced version of the dateandtime module that is built into Python. You need to run `pip install -U arrow`. More info at [https://pypi.org/project/arrow/](https://pypi.org/project/arrow/).

I highly encourage everyone to try these modules and use them for useful/important projects, at least for some of them :). Hopefully, I have given some inspiration for everyone to check out the many more interesting and useful modules that Python has. There are many more interesting modules in Python, but these are the most interesting ones that can suit beginners and intermediates. Feel free to add your own suggestions in the comments for this post. Also, you can add your own opinions about these modules so that the readers can also get another perspective for these modules. Thank you all for taking the time to read this post!",1595346579.0
"I'm a Computer Science Teacher in the UK, thanks to this subreddit and a few notable Python Youtubers - I'm now able to help more young people get into coding.",834,ocvfzr,learnpython,https://www.reddit.com/r/learnpython/comments/ocvfzr/im_a_computer_science_teacher_in_the_uk_thanks_to/,57,"Just wanted to say thank you, really - to anyone that contributes on this subreddit, you are playing your small part and giving people real genuine life skills. 

I've also managed to start my own YT channel which focuses around using Python to fight back phishing scam emails/texts. It's given me a new lease of life.

So just once more, thank you.",1625307738.0
"I'm Al Sweigart, author of Automate the Boring Stuff with Python. I'm currently doing an AMA about my latest book on recursive algorithms.",830,xcqs55,learnpython,https://www.reddit.com/r/learnpython/comments/xcqs55/im_al_sweigart_author_of_automate_the_boring/,34,"Please post question to the AMA thread rather than on this post. Thank you!

https://www.reddit.com/r/IAmA/comments/xcp6jv/im_al_sweigart_author_of_several_free_programming/

EDIT: Heyas, I'm done for the day. Thanks to everyone who asked questions!",1663023183.0
For begginers who are searching for what to do after finishing a course,831,dob4kd,learnpython,https://www.reddit.com/r/learnpython/comments/dob4kd/for_begginers_who_are_searching_for_what_to_do/,68,"I have been lurking around in this subreddit for quite a while and what I have noticed is people ask the following questions a lot:

* What to do after I finish a course?
* What projects should I build?
* What should I learn next in python?

So if you are asking one of these questions this article is for you.

Enjoy!

I would first recommend anybody to learn the following interesting and helpful modules in python like:

1. Beautiful soup to do web scraping.
2. Tkinter for building basic GUI/apps.
3. PyGame for game building with GUI.
4. Os to mess with files and folders.

I would also recommend you'll to go through the book, [""Automate the boring stuff with python""](https://automatetheboringstuff.com/) from [chapter 7](https://automatetheboringstuff.com/chapter7/) if you'll are familiar with most of the stuff in python otherwise start with [chapter 1](https://automatetheboringstuff.com/chapter1/). Some projects which could be done with those modules are:

1. A very common project with beautiful soup module is scrapping every day's weather forecast.
2. Building a calculator, attendance recorder or an image hub like [pexels.com](https://pexels.com/) with Tkinter.
3. With PyGame there are endless possibilities and trust me game making is not so easy with PyGame though basic projects you'll could build are a flappy bird, a racing game, a top-down shooter game or a side scroller like Mario(well don't try to make the exact replica of Mario because that's tough!!).
4. If you'll want to build something very very basic try building rock paper scissors, cross and nuts, battleship without any GUI and output in the terminal itself.

Another thing which I would recommend is solving problems by going to these few sites

1. [Hackerrank.com](https://hackerrank.com/)
2. [geekforgeeks.com](https://www.geeksforgeeks.org)

Solving problems might get you'll to be demotivated and to be honest, it got demotivated too but I continued and I got my more confidence back afterwards.

And that's all. Doing these will give you guys a massive skill, knowledge and a confidence boost in python.",1572279758.0
My Python regex ebook with hundreds of examples and exercises is currently free,828,hmvnt1,learnpython,https://www.reddit.com/r/learnpython/comments/hmvnt1/my_python_regex_ebook_with_hundreds_of_examples/,43,"Posting with mod's permission.

---

Hello!

I recently updated my **Python re(gex)?** ebook. I had first released it at the beginning of last year (https://www.reddit.com/r/learnpython/comments/aevgbi/i_wrote_a_book_on_python_regular_expressions_it/).

My initial motivation was to add **epub** format and separate out **third-party regex** module content into a separate chapter. An email exchange with a reader, a look at feedback from the past year and my own improvements as a writer resulted in a significant overhaul. It took me about 6 weeks to complete the revision instead of 1-2 weeks that I estimated. Sounds familiar right? I’m definitely pleased with the changes, but along the way I added a long list of TODOs that will probably need months of work. Future me is not going to be pleased.

To get pdf/epub versions, use any of these links:

* https://gumroad.com/l/py_regex
* https://leanpub.com/py_regex

As a bundle (Python/Ruby/JS regex and grep/sed/awk cli tools):

* https://gumroad.com/l/regex
* https://leanpub.com/b/regex

I made **all my books free** at the end of March when the pandemic hit my country. The virus doesn’t seem to be going away anytime soon, so I’ll probably start charging again after I finish updating the Ruby and JS regex books, which will take me at least till end of July. You can still pay if you wish.

You can read the *entire* book from the GitHub repo - https://github.com/learnbyexample/py_regular_expressions. The repo also contains the **code snippets** used in the book and a handy way to access all the **exercises** in a single file. You can also find the **solutions** there. 

---

I’d highly appreciate your feedback. That’s been a major motivating factor to keep writing as well as for improving the content.

Happy learning :)",1594132497.0
"Finally feel I've graduated from complete beginner and finished my first small project thanks to this sub. Here's the learning path you all recommended, and a small open source project I have to show for it so far.",830,n6yd44,learnpython,https://www.reddit.com/r/learnpython/comments/n6yd44/finally_feel_ive_graduated_from_complete_beginner/,115,"Pretty much the entirety of my learning experience was guided by this sub in one form or another. From book recommendations to general path guidance. So thanks to all the posters here new and old.

The path I took was roughly as follows:

1. [Automate The Boring Stuff](https://automatetheboringstuff.com/2e/chapter0/). It's a popular recommendation and is available for free in it's entirety online. Goes from the absolute basics to useful things really quickly.
2. [Python Crash Course](https://nostarch.com/pythoncrashcourse2e) moves into more project-orientated learning. Great for when you want to start focusing on programs that span more than one file.
3. [Problem Solving with Algorithms and Data Structures using Python](https://runestone.academy/runestone/books/published/pythonds3/index.html) gets you thinking about program design, data structures and program complexity.
4. Kinda got stuck in ""tutorial hell"" for a bit at this point. Was looking for more books/tutorials to read and wasn't sure where to go next. Ended up doing a lot of [Codewars](https://www.codewars.com/) to gain confidence in non-guided coding.
5. While completing katas on codewars I found [https://realpython.com/](https://realpython.com/) and [https://docs.python-guide.org/](https://docs.python-guide.org/) to be endlessly helpful.
6. Wrote a few scripts to help admin my own computer before asking some friends if they had any mini-project suggestions. Which lead to me writing the project link I'll post below.

I have to say, doing a small project of *something* (jeez, is it hard to think of project ideas) is so very helpful for the learning process. It forces you to learn about things I didn't read too much about during any of the aforementioned books, like packaging, testing, typing, code documenting and properly using source control like github.

Anyway, the project I made:

[https://github.com/sam0jones0/amazon\_wishlist\_pricewatch](https://github.com/sam0jones0/amazon_wishlist_pricewatch)

&#x200B;

>*Periodically check your public Amazon wishlist for price reductions.*  
>  
>This package will send you a notification (SMTP email and/or telegram) each time a product on your **publicly available**  wishlist reaches a new lowest price. Price still not low enough? You'll  only receive another notification for the same product when the price  drops further.

&#x200B;

Perhaps this sized project doesn't really need tests, types and documentation of this level. But I did it primarly to learn, and to that end - succeeded!

Feedback and contributions welcome from devs of all skill levels, **happy to help others learn** whether you've never used github before. So **reach out here or on github if you need help with anything** or have an idea for an extension of this project or whatever. Can be isolating learning by yourself and I'm sure some people including myself could benefit from one another.",1620393693.0
Wrote this program to skip Spotify Ads using Spotify API,812,ozrbh4,learnpython,https://www.reddit.com/r/learnpython/comments/ozrbh4/wrote_this_program_to_skip_spotify_ads_using/,61,"No one likes interruptions! right? So i wrote this program that detects when an advertisement plays by monitoring the type of the track that is currently playing, using the Spotipy API. When an ad is detected, the program restarts Spotify by the os module and plays it via pynput, which skips the ad and starts right where you left off. Its kinda cool and i am proud of it.

Here is the repo- [https://github.com/daspartho/SpotiByeAds](https://github.com/daspartho/SpotiByeAds)

I would love to get some thoughts and feedback on the project.",1628334425.0
Begginers do not use Google search often enough,812,in1gv6,learnpython,https://www.reddit.com/r/learnpython/comments/in1gv6/begginers_do_not_use_google_search_often_enough/,160,"I dunno if this should be on r/learpython or r/unpopularopinion but figured that it should rather be posted here.

As an intermediate programmer I find that many of my problems can easily be solved by just googling the problem. Unfortunately I have seen many beginners that for some reason are to shy to ask for help even if it means being stuck on the same problem for impossible amount of time. 

I had this problem too actually. I dunno if it was a really toxic part of programming community or just my personal pride but I simply would not ask for help even if it ment being stuck and not accomplishing anything at all. 

If u r beginner and find yourself pinned and u can't figure out the problem please do ask questions. U are just learning, it is OK not to now everything at first. Find healthy balance between figuring problem yourself and being stuck and wasting time.",1599313998.0
[Rave] Finally able to prove the value of Python,804,ep2xb8,learnpython,https://www.reddit.com/r/learnpython/comments/ep2xb8/rave_finally_able_to_prove_the_value_of_python/,138,"This is just at celebratory post because I finally managed to actually show my manager and the local Excel/Database guy that python is worth investing time in.

Basically we have a problem with some data in a laboratory intercalibration test that is off the mark compared to the intercalibration average. In order to find the problem I had to extract between 6 and 15 values from each of around 100 excel workbooks. This was further complicated by the fact that we have password protection on our workbooks which meant power query (which I am not that familiar with to begin with) was complaining.

Instead I went to openpyxl, and managed in an hours time (including several iterations to improve the data extraction) to put together a script that opens the workbooks, extracts the data and returns min, max and averages as well as plotting histogram and historic development of this particular test result to see if we have seen a general trend in some direction (turns out we have).

My manager was happy that I could present the data visually, and my colleague (who is generally supportive, but usually only works in VBA and SQL) was thrilled that I could get so much data from so many workbooks in a minute, rather than when he has to make VBA open each workbook in excel to extract the data. This opens up the option to efficiently extract tons of data in old excel files and get them into our SQL database. Something he has been putting off for a while.

This is the first time I have produced actual value with Python at work, and it feels great to finally be at a stage where that is possible. Next up is to automate our microscopy analyses with openCV!

Sorry if this does not contribute much value here. I am just happy :)

I am cleaning up the code then I can publish it if there is interest, but currently it is a mess, because I didn't have a clear plan and just kinda made it up as I went along.

Edit1: So you don't have to find my comment below:
Here is the code (anonymized/company data replaced) https://pastebin.com/8Vg85WBG

Edit2: Wow this took off and may well end up as my highest rated post ever. Thanks for the kind words everyone, I love this community.",1579098220.0
"What are some ""must learn"" libraries in Python",797,ng3nq0,learnpython,https://www.reddit.com/r/learnpython/comments/ng3nq0/what_are_some_must_learn_libraries_in_python/,133,"Hey guys, I'm done school for 3 months and I'd like to go deeper in my python learning during that time. Since we didn't touch libraries at all, I feel like it could be a good thing to look into. 

So as the title says, which ones should I go an try to learn by myself? And are there good resources to learn them? I know we're going to be moving to other languages next semester, but I'd like to think that I can use python properly too. 

Thanks in advance.

Edit: Wow thanks for all the answers. I have a lots of stuff to check out now. Probably more than my 3 months will allow me too lol.",1621424944.0
"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code AUG2021FREE",798,ovth0a,learnpython,https://www.reddit.com/r/learnpython/comments/ovth0a/automate_the_boring_stuff_with_python_online/,53,"https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: AUG2020FREE (uh, I forgot what year it was and it doesn't let me change it: the code is 2020 not 2021)

https://www.udemy.com/course/automate/?couponCode=AUG2020FREE

This promo code works until the 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to AUG2021FREE2 in three days.

**I'm also working on another Udemy course** that follows my recent book ""Beyond the Basic Stuff with Python"". So far I have the first 15 of the planned 56 videos done. You can watch them for free on YouTube:

https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&index=1

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

Side note: My latest book, [The Big Book of Small Python Projects](https://inventwithpython.com/bigbookpython/), is out. It's a collection of short but complete games, animations, simulations, and other programming projects. They're more than code snippets, but also simple enough for beginners/intermediates to read the source code of to figure out how they work. The book is released under a Creative Commons license, so it's free to read online. (I'll be uploading it this week when I get the time.) The projects come from this [git repo](https://github.com/asweigart/pythonstdiogames).

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",1627829418.0
Why you can't progress at Python,790,tbba69,learnpython,https://www.reddit.com/r/learnpython/comments/tbba69/why_you_cant_progress_at_python/,145,"Every few days there is a new post on this sub that describes the same problem: ""I've taken so many courses on Python, yet I can't even write a simple program. What gives?"" The answer is very simple: you aren't practicing. Courses don't count as practice. You will not even be able to write a simple program in Python (or any programming language) until you start writing code yourself. Stop relying on courses to learn. At most, courses should be used to learn the very basics. After that, it is just practicing through writing code yourself. 

So please, if you've already gone through a Python course, do yourself a favor and stop looking for the next course and instead go write some code. You're welcome.",1646952601.0
I made a bot that accuses random celebrities of being in 6ix9ine's 'Nine Trey Bloods' gang.,795,da0eqv,learnpython,https://www.reddit.com/r/learnpython/comments/da0eqv/i_made_a_bot_that_accuses_random_celebrities_of/,58,"IDK why I did this, but [here it is](https://twitter.com/bloods_bot).

 Every day, it accuses the most famous person on [Famous Birthdays](https://www.famousbirthdays.com/) of being in [6ix9ine](https://en.wikipedia.org/wiki/6ix9ine)'s '[Nine Trey Bloods](https://en.wikipedia.org/wiki/Nine_Trey_Gangsters)'.

Here's how it works:

* Uses bs4 to scrape Famous Birthdays for celebrity name & picture.
* Uses Tweepy to search Twitter for the name, returns the most relevant user (if the celeb doesn't have a twitter, it still tags the first result which is kinda funny).
* Uses Tweepy to attach media & tweet.

[Full code.](https://github.com/lilblizzard/blood_bot)

p@",1569590897.0
Newbie Here🙂,787,layd52,learnpython,https://www.reddit.com/r/learnpython/comments/layd52/newbie_here/,154,45 year old dad here. Laid off in the pandemic now learning Python. Regretting that I didn't take it up earlier in my life.,1612280171.0
I just wanted to say a massive thank you to the community.,787,hirzuh,learnpython,https://www.reddit.com/r/learnpython/comments/hirzuh/i_just_wanted_to_say_a_massive_thank_you_to_the/,53,"I wanted to share something with all of you that meant a lot to me. I hope that's ok.

I work as a lab assistant for a huge company, I've been there for over a year and I've
felt like my life is going nowhere for some time. In order to give myself a boost I decided
to take up learning Python. I've sat at a computer since I was a kid so it felt like a natural
choice. [I started following this video lesson](https://www.youtube.com/watch?v=rfscVS0vtbw)
It's a blast, and I go back to work Monday evening having sat through just under 3 hours of it.
Around 2am at work I get an idea.

  
I decide to give myself some homework, something I **think** I should be able to do with what I've
learned so far, but still very tricky for a beginner like myself. I decide to make a little keypad program.
I outline my idea on a piece of paper, what I hope to make it do and rough ideas how, I come home
and I go to bed.

  
I wake up, start pycharm on my brand new laptop and I'm stuck, completely. I have no idea what to do.
So I decide to write something, anything to get going. I print a simple message for the user:

""You're standing in front of a door with a keypad. You need the correct 4-digit code to unlock it"".

Then it slowly starts rolling. If statements, while loop, elif, user inputs, else, I'm feeling on fire at this point.
It's constantly three steps forward, two steps back, sometimes everything breaks and I'm downing coffee
like it's the last day on earth but after a few hours, there it is. I did it. The very last thing I do is add a break
if the user successfully enters the right numbers in the right order, print a final message to the user:
""This is where the adventure begins, are you ready?"" Super cheesey I know.

  
I'm on cloud 9. I had an idea, I outlined it, started, worked through the problems, finished it. It might not be pretty but it WORKS!

  
I get it now, I get how addicting it is and tonight when i'm at work, you can bet I will come up with another 
piece of homework to myself. Thank you all so much, you are all amazing.",1593538497.0
Learning Python Protip: when doing exercises change the example code to make it funny or interesting to you. This will help you retain more and utilize more creative thinking to keep you engaged.,777,i2g41g,learnpython,https://www.reddit.com/r/learnpython/comments/i2g41g/learning_python_protip_when_doing_exercises/,35,"I’ve been helping a few friends get started with things like ATBS. Some say they get bored early on or they essentially go through the motions of doing the example code and don’t retain any information.

This tip seemed to help them and is something I still do.

For example, in ATBS one of the first things you make is a number guessing game. It’s very simple and a great exercises but I remember yawning and not retaining what I was doing. To perk me up I started making it insult the user. Instead of just saying print(‘your number is too high’) I changed it to print(‘you’re too big, something no woman has told you before’).

This got me interested so I wanted to do it more. I then started adding all kinds of IF statements and loops to make the insults different based on how many guesses it was taking, each insulting the user’s mom in the process. Then I wanted an opening to even initiate the program where it would ask if you wanted to play and if you said “no” the game would insult you as well.

All of this turned an 8 line (I don’t remember exactly) piece of code into 30+ while solidifying the concepts because I wanted even better ways for the game to insult me/the user. 

My example is of course childish, but doing something that makes you laugh or at least tailored to your interests will help the early learning process. It could be as simple as instead of a random number guessing game change it to a random Kardashion (spell?) guessing game if that’s your thing.

Edit: a word 

Edit 2: as some users pointed out: students, do NOT use vulgar language in class. The core concept still applies and you can make it fun / funny for you but don’t use anything that could get you in trouble as you might forget and leave it in the code when you turn it in.",1596390022.0
"2,000 free sign ups available for the ""Automate the Boring Stuff with Python"" online course.",779,x6px4m,learnpython,https://www.reddit.com/r/learnpython/comments/x6px4m/2000_free_sign_ups_available_for_the_automate_the/,85,"**NOTE:** The codes are all used up. [But you can watch the first 15 of the 50 videos for free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW) If you want to buy the rest of the course, the https://inventwithpython.com/automateudemy link redirects to a discount code that lowers the price to $13. The course follows the info in the book, which is for free in full at https://automatetheboringstuff.com/

If you want to learn to code, I've released 2,000 free sign ups for my course following my Automate the Boring Stuff with Python book (each has 1,000 sign ups, use the other one if one is sold out): 

~~https:// udemy .com/course/automate/?couponCode=SEP2022FREE~~

~~https:// udemy .com/course/automate/?couponCode=SEP2022FREE2~~

Udemy has changed their promo code and severely limited the number of sign ups I can provide each month, so only sign up if you are reasonably certain you can eventually finish the course. [The first 15 of the course's 50 videos are free on YouTube if you want to preview them.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

Instead of having unlimited free sign ups for 6 days per month, Udemy only lets me make 2,000 free sign ups per month. >:(

**NOTE: Be sure to BUY the course for $0, and not sign up for Udemy's subscription plan. The subscription plan is free for the first seven days and then they charge you. It's selected by default. If you are on a laptop and can't click the BUY checkbox, try shrinking the browser window. Some have reported it works in mobile view.**

Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.

Some people in India and South Africa get a **""The coupon has exceeded it's maximum possible redemptions""** error message. [Udemy advises that you contact their support if you have difficulty applying coupon codes, so click here to go to the contact form.](https://support.udemy.com/hc/en-us/requests/new?type=student)

**I'm also working on another Udemy course** that follows my recent book ""Beyond the Basic Stuff with Python"". So far I have [the first 15 of the planned 56 videos done. You can watch them for free on YouTube.](https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&index=1)

Side note: My latest book, [The Big Book of Small Python Projects](https://inventwithpython.com/bigbookpython/), is out. It's a collection of short but complete games, animations, simulations, and other programming projects. They're more than code snippets, but also simple enough for beginners/intermediates to read the source code of to figure out how they work. The book is released under a Creative Commons license, so it's free to read online. (I'll be uploading it this week when I get the time.) The projects come from this [git repo](https://github.com/asweigart/pythonstdiogames).

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",1662408557.0
What libraries do you wish you discovered earlier?,774,kmwrve,learnpython,https://www.reddit.com/r/learnpython/comments/kmwrve/what_libraries_do_you_wish_you_discovered_earlier/,238,What libraries do you wish you discovered earlier?,1609309400.0
Feeling too fucking dumb for Python and programming in general,767,i13byl,learnpython,https://www.reddit.com/r/learnpython/comments/i13byl/feeling_too_fucking_dumb_for_python_and/,212, I am 28 and have only just begun an introductory course in Python and have never felt more fucking dumb than I do now! From the realization that I need to take algebra lessons to knowing that I am not comprehending the bare basics is fucking demoralizing. Though I find having my hand held through courses like Codeacademy comprehensible. Mostly I feel this way as the introductory course through a Technical College I am enrolled in has an indicative time to complete their first project as 3 hours. All I can say is thank fuck its online because I've been working on it for legit 2 weeks. GOD FUCKING HELP MY DUMBASS LEARN!!,1596180646.0
Do you know any Python projects on Github that are examples of best practices and good architecture?,770,n5a6fo,learnpython,https://www.reddit.com/r/learnpython/comments/n5a6fo/do_you_know_any_python_projects_on_github_that/,69,"I'm looking for some projects to learn from. To ""read"".

I'd love to see the correct way of doing things.",1620199704.0
I finally used Python for work!,765,jkcy74,learnpython,https://www.reddit.com/r/learnpython/comments/jkcy74/i_finally_used_python_for_work/,44,"I was tasked with the small project of making a bot for our Discord server. It’s really simple so far and just reminds certain users to complete their tasks and takes them off the reminder list when they use a command, but after two years of coding as a hobby, I’m finally actually using it! I’m definitely using this as leverage into a raise when my review comes around.

Stick with it!",1603987880.0
Learning other languages will make your Python better.,771,ize2jn,learnpython,https://www.reddit.com/r/learnpython/comments/ize2jn/learning_other_languages_will_make_your_python/,138,"Python is great, but it's not used everywhere. Web dev is Javascript. Embedded C/C++. (by default at least)

But! Don't be afraid to learn other language.  Just how Blue is more Blue when it's next to Red. And Hot is more Hot when next to Cold, that's how you will know better Python when next to Javascript or any other language. Just keep on learning.

Good luck!",1601013057.0
I've Realized I Officially Love Coding,767,mgxib8,learnpython,https://www.reddit.com/r/learnpython/comments/mgxib8/ive_realized_i_officially_love_coding/,51,"I hated it when I first started, and felt really dumb trying to learn it.  The beginning was easily the worst.

&#x200B;

5 years later, I love it.  Part of me has always enjoyed it, but tonight I realized that I truly love it.  I had a really long day at work and got off late, and to destress I began learning PyQt so I can build a GUI for a stock script I spent that past week or so building in my freetime.

&#x200B;

I still have a long ways to go, however I've come a very long way as well.  I started my career right out of college 3 months ago and even though the learning process is quite painful I've proven to be an asset on the team as a newcomver just because of my coding skills, which has been a huge motivator for me to keep improving them.

&#x200B;

Just wanted to throw this out there for those of you doubitng yourself.  For many of you reading this, now is the hardest part.  Don't give up, and don't doubt yourself; with consistency and discipline you'll be able to do great things.",1617162703.0
I want to learn how to make a personal text-to-speech reader for my spouse before I die.,758,o7kvjp,learnpython,https://www.reddit.com/r/learnpython/comments/o7kvjp/i_want_to_learn_how_to_make_a_personal/,44,"I apologize if the title is too depressing. I have a gene that makes me more prone to get cancer, and I want to leave something meaningful for my spouse before I die. When we first met, they said how much they love voice, and how it was their most favorite sound, they would say how they always wanted to get into reading as well, but their eye health has never been the best, and they have dyslexia. So, they'd ask me to read little things for them here and there, but because I'll be dead first, and possibly a lot earlier than them, I'd want at least the voice they love so much to continue reading them those books long after I'm gone.

tldr: is there a way to make a personalized text-to-speech reader in my voice for my spouse? (cannot tell if my question is more dystopian, or wholesome)",1624616311.0
Automate the Boring Stuff is so much better than video tutorials,754,dr6jzi,learnpython,https://www.reddit.com/r/learnpython/comments/dr6jzi/automate_the_boring_stuff_is_so_much_better_than/,71,I've been making my way through [https://automatetheboringstuff.com](https://automatetheboringstuff.com/) and it is so much more detailed and helpful than any of the tutorials on YouTube I've tried,1572814415.0
"From a Beginner to Beginners: Learning print(""Hello world!"") to freelancing to full time employment. One year on!",756,t2m2g3,learnpython,https://www.reddit.com/r/learnpython/comments/t2m2g3/from_a_beginner_to_beginners_learning_printhello/,95,"Hello /r/learnpython,

Time really does fly! After losing my job as a Chemist, I've been a full time Data Engineer for just under a year now and have learnt so much.  I still feel a bit of the imposter syndrome stress, especially as I've had a great first year.  Needless to say, the pressure is rising but that's okay because you never stop learning!

This will be my last post in this Beginner to Beginners series.  The series was made as a bit of insight into a self taught programmer's journey into the world of tech/IT as well as a way for me to share my own experience with like minded individuals.  

For lists of courses and generally more detail, you can find the other posts from my series here:

* [Just completed my first job on Upwork!](https://www.reddit.com/r/learnpython/comments/jrwi6d/just_completed_my_first_job_on_upwork/)

* [Going from print('Hello World)' to tutorial hell to building my own ""data pipeline""](https://www.reddit.com/r/learnpython/comments/jwgatc/going_from_printhello_world_to_tutorial_hell_to/)

* [From building my own data pipeline to my first technical interview.](https://www.reddit.com/r/learnpython/comments/l7drly/from_a_beginner_to_beginners_from_building_my_own/)

* [From print('Hello World!') to Tutorial Hell to Getting my First Job! ](https://www.reddit.com/r/learnpython/comments/lmi2lg/from_a_beginner_to_beginners_from_printhello/)

* [Dealing with ""First Job Imposter Syndrome"", ""What project should I make?"", and an OOP Epiphany.](https://www.reddit.com/r/learnpython/comments/mez5jk/from_a_beginner_to_beginners_dealing_with_first/)

If you've enjoyed this series, please consider [following me on medium](https://mikedoeseverything.medium.com/).

I'll do the usual openings and then get to the actual content further down.

**Background**

I am an experienced Chemist who lost his job during the pandemic in 2020.  During the process of losing my job, I worked for a company who touted themselves as trying to be ""data first"" with extremely tenuous approaches to data management, data science, and infrastructure.  I thought I could do a better job than the management team so I taught myself.

Originally, the goal was to become a Data Scientist.  I was already a scientist, how much harder can it be? The more I learnt about Data Science, the more I hated.  It was a slog, learning was boring, and I was never inspired, but I carried on anyway.  I did my Python courses, I did a Data Science course, and just didn't really know what to do.  At this point, I started looking at freelance jobs and found some for my favourite thing to do - webscraping.  It was here I had the revelation I loved automating the collection of data, thus, I accidentally discovered the world of Data Engineering.  This was over the course of around 5 months.

I carried on working on my portfolio, I carried on trying to do freelance work (it's competitive), I carried on working on my CV.  Whilst struggling to find opportunity, I signed up for a free ""Zero to Hero"" style bootcamp in Python, HTML, and CSS, thinking it would help.  In a good way (I guess), I had already done significantly more advanced projects in my spare time than the level of the course offered, although I was optimistic that they'd see that and help me get a job.  During this bootcamp, I started to get job interviews and eventually got offered and accept my current role.  This was over the course of around 4/5 weeks.

**What I Do Now**

I'm a full time Data Engineer in financial services.  My day to day job involves creating new pipelines for internal customers, managing access to data to users, maintaining existing pipelines and services, working on very simple front ends, and vetting new tools for the company.  I work both on premise and in cloud, although primarily I work in the cloud.

**Notes, Qualifications, Caveats**

For the reasons of transparency, I think it's always important to define a lot of this information to help people manage their expectations.  I have a Masters degree in Chemistry from a good university in the UK.  I have never written code before I started learning in late 2020, do not have any experience in my current field of financial services, tech, or IT, and did not get referred.  I do have experience being employed though and happened to be interested in a field (Data Engineering) which went, and is still going through, an unprecedented hiring spree and happened to have learnt the relevant stack and skills along the way.  Luck is always a huge factor when it comes to jobs.

**Actual Content**

**The job market for Data Engineers is insane**

Life as a Chemist was usually spent finding the very few jobs around and competing with everybody in the area for it.  Life in the world of data engineering (can't possibly comment on the wider field of tech), has been the complete opposite.  I get bombarded with jobs in calls, emails, messages on LinkedIn and my profile isn't really even that good.  I think I speak for the wider field of data that if that's what you're into, then it's a really good time to be in said field.  Make no mistake though, it's still competitive.

**Imposter syndrome doesn't go away, you just kind of live with it**

Like many self taught people, imposter syndrome is a proper thing.  There are some days where I get requests and I just think, ""How the fuck am I meant to do any of this?! Do they think I'm way better than I am?!"" and there's a bit of panic in my head whilst somebody is explaining the request.  Once you start working on it though, applying good principles and design concepts, you start to get it and can get on with producing a good piece of work.  So, my tip is if you're still feeling like you aren't good enough and it never goes away for a long time, then that's alright.  A good team will always gives you time to get better and improve so long as you want to.

**Never stop learning**

I always imagined once I had ""made it"" in my job, I'd just kind of hang out and coast through the day.  The reality is you kind of never really do and the moment you stop wanting to keep up is when you get left behind.  Of course, there are limits to everything.  Being on the forefront and fluent in every single technology is pretty much impossible, although striving to be aware of what's out there and how industry standards change is definitely really key for moving forward. 

**Advice for new programmers**

I always love to provide advice on how to go about getting a job in tech when you're self taught.  I think even after working for a year, my advice hasn't really changed:

* Find a job you're interested in first.  Do a lot of research here, it might take a while. 

* Recognise the stack you're interested in and start learning that stack.

* Build projects you are interested in first.  This in itself is a skill and will need time to learn.  I would say this is the critical point because being able to design and build projects is essentially you being a programmer.  So, if you can't do it straight away, that's alright.  Just keep trying.

* Apply for jobs you're interested in.  

* Keep refining your CV and your project portfolio.

* Most importantly - don't give up! Burnout is a very real problem.  If you are feeling exhausted and a bit defeated, then take a break.  The job market isn't going anywhere and taking a day or two for your own mental health is never a bad thing.

Whether you've been here since the start of my entire coding journey or you're brand new and looking for inspiration, thank you! As always, questions are welcome and even if will take a while, I will try to answer all.",1645960315.0
Does anyone else dread asking questions on stackoverflow?,751,jyz6xd,learnpython,https://www.reddit.com/r/learnpython/comments/jyz6xd/does_anyone_else_dread_asking_questions_on/,262,"I’ve posted what I think are legitimate questions I’ve encountered while learning Python, only to get trolled and shut down by people who are really advanced developers. I’m learning online and sometimes it’s helpful for me to ask someone with more experience rather than bang my head off a wall trying to figure it out. 
Is there another place to ask maybe more intro to intermediate questions without being made to feel like an idiot for wanting to learn? Am I the only one who is started to hate stackoverflow for this reason?

Edit: thank you for all the responses! I see a lot of “you need to ask the question properly and make a strong research effort prior to going to SO”. I’ve really only gone there after I’ve exhausted every available avenue and still came up short or found things somewhat similar, but it still didn’t solve the problem I was facing. I see this has also been the majority experience with SO. Thankful for this group!",1606065098.0
How would you guys feel about a daily / weekly whatever challenge that would offer a problem to be solved. We can then share GitHubs solving said problem in hopes of learning new approaches and prospectives?,757,g0vamb,learnpython,https://www.reddit.com/r/learnpython/comments/g0vamb/how_would_you_guys_feel_about_a_daily_weekly/,85,Just a thought,1586824444.0
My first python script that works.,745,hah264,learnpython,https://www.reddit.com/r/learnpython/comments/hah264/my_first_python_script_that_works/,102,"Started on the 1st of June, after 2 weeks of ""from zero to hero"" video course I decided to try something ""heroic"".  Asked my wife yesterday ""what can I do to simplify your work?"". She is a translator and one of the client has most of works in PPT.  For some reason PPT word count is never accurate, well at least for invoicing purpose.  
So they agree to copy and paste contents in word and count.

I just write a script that read all the text contents in PPT and save them in a text file.  So she can easily count the words there.

Although it took me almost 4 hours for only 25 lines of code, but I am still happy that I can apply what I've learned so far.",1592356323.0
"I automated part of my job and I now have to present it to my Vice Chief CTO, any tips?",734,gix1qt,learnpython,https://www.reddit.com/r/learnpython/comments/gix1qt/i_automated_part_of_my_job_and_i_now_have_to/,140,"Hi,

I recently began learning Python and automated part of a task that 40 staff members have to do a month. It typically takes 2-3 hours a month and I've managed to shave 30-45 minutes off for every person which equates to about 360 hours saved a year.

I work for a Market Research firm that runs a forum where we ask consumers questions and we have to pay these consumers incentives in the shape of Amazon vouchers. We also have to post these winners on the forum for the sake of transparency. We create a pretty image which involves Excel and Powerpoint which is very tedious.

My script is basically a form that will take the long list of winners in an excel file, allow you to put in your login details to the forum, the number of people you want to win, the message you want to send to the winners and title to your post. It will then spit out the Excel file in a pretty image and upload it to the forum as well as your message and title without you having to login at all.

I showed this to my Head of operations and she loved it so much that she instantly booked a meeting with my Vice CTO, Director of product innovation, a senior UX Designer and two senior software developers.

My original presentation for my Head of Operations was very process-oriented, whereas this interview will be full of technical people. So I was wondering, what type of questions are my CTO and Senior software developers likely to ask? And how should I prepare?

For example, should I list all of the packages I have used and write out their permissions? Should I create a very technical process tree that shows the complete process and what happens in the back end?

Thanks,",1589368544.0
Corey Schafer has returned to YT making tutorials!,732,109njot,learnpython,https://www.reddit.com/r/learnpython/comments/109njot/corey_schafer_has_returned_to_yt_making_tutorials/,72,"My favorite channel from when I first started out. He disappeared 2 years ago but has returned a few days ago with a tutorial on simulating the powerball lottery. 

https://www.youtube.com/@coreyms

His Python videos specifically 
https://www.youtube.com/playlist?list=PL-osiE80TeTt2d9bfVyTiXJA-UTHn6WwU",1673490100.0
"Got to say it, IMO, the book 'Python Crash Course', is far superior for a beginner than 'Automate the Boring Stuff'",727,uo7ufj,learnpython,https://www.reddit.com/r/learnpython/comments/uo7ufj/got_to_say_it_imo_the_book_python_crash_course_is/,84,"I read upto lists and dictionaries in Automate the Boring stuff, and watched the videos on youtube for those chapters. The excercises seemed to ask for stuff that i had not learnt or were far ahead of my learning so far. 

Dived into 'Python Crash Course' and haven't looked back. This book is fun, engaging, and all the excersises are relevant to what you have just learnt. 

I will go back to 'Automate' but was overwhelmed and skipped most of the chapter excercises, as they seemed too difficult",1652380613.0
It's finally paid off!,736,lra4l2,learnpython,https://www.reddit.com/r/learnpython/comments/lra4l2/its_finally_paid_off/,38,"I've been trying on and off with Python for years and have always got frustrated and never managed to complete an introductory course.

I think now it's because these courses went too deep into statistical nuances that really had no baring on my capability to learn python.

I've been working through DataCamp since the new year (Yes I know evil datacamp boohiss) and have finally managed to do something useful with my knowledge today.

I'd been given some pdfs at work with tables containing information I needed. However I needed the information in excel format. It would take me hours to manually copy the data by hand into a spreadsheet.

I managed to find [https://pypi.org/project/tabula-py/](https://pypi.org/project/tabula-py/) which can read tables in a pdf, convert them into a pandas dataframe and then export them as a CSV.

After installing the library and using the documentation I did it!

Probably sounds very simple but a massive success for me!",1614164352.0
My first 100 hour of learning programming(28 days),728,e8uo6c,learnpython,https://www.reddit.com/r/learnpython/comments/e8uo6c/my_first_100_hour_of_learning_programming28_days/,104,"hi everyone one month ago i decided to learn programming. I always enjoyed the idea of programming but never tried it. So i started a udemy course on python and i was addicted from the first line of code(actually from the second!! i really hated the ""hello world"" programs). I have a batchelors degree in a different field(as you can see not in English!!!) so i never thought about programming as a new career, i just wanted to start a new hobby. 28 days later i really consider to change path to programming, or maybe find a master combining my field with programming. So for the last 28 days i studied and wrote code for 100 hours!!

Let me tell you about my progress from hour to hour and what i managed to make so far!

**hour 0:** Hello world!!

**hour 1-15:** learning the basic python syntax

**hour 20:** i created 2 simple projects. one simple dictionary where you give an input and the script returns the meaning ofthe word from a json file. The second program is a simple script for runners  which gets some user input about your running speed duration and heart rate and returns an estimation of your running fitness. Sound like a lot but it is just a simple calculator with some fancy equations i found online

**hour 23**: Things are getting interesting. As i learn about webscraping instead of building(copying) the program my tutor was making i instead decided to create a scraper on a different website.Theres a site called polar flow where running data from sport watches are stored. so i created a webscraper that scrapes my data from my past acticities and using the equation from my last progress estimates my running fitness from every activity of mine!!

**hour 23-40**. Studied about numpy,pandas,selenium webdrive,BeautifulSoup,csv files.matploid,bokeh and other libraries

**hour 45**: learned how to do linear fitting of scatter data in bokeh. Actually i have a good math background from my university studies so the math part was not hard. I created my first graph in bokeh using the running data of my previous project to calculate how my running fitness increases over time

**hour 45-60**: Learning some basic things about oo programming and classes and pyqt5 graphical interface library

**hour 60**: created my first one window program with pyqt5. now i had to decide. Create simple one window boring programs copying code from my tutor or take notes about the various code lines and how they work together and create a graphical interface for my running app project. i chose the later!!

**79 hour**: almost 20 hours laters most of which was me looking at a screen and wondering why my program doesnt work (cried twice) i managed to create a 4 window program. The concept of the program is to get some running data input from a csv file and calculate running performance and vo2max(estimate). Then using some fitted equations which i created on my own by fitting data from 20 athletes the program estimates your training speeds as (easy, tempo,intervals ect). The third screen calculates your heart rate zones and the forth screen shows a graph on how your stats change over time. I want to add more functions to my program but i left it on the side for now to study more.

&#x200B;

**hour 79-92**  started reading more about some oop cause i don't really get it! started rewriting my code without using  copy and paste even from my one previous scripts and studied various online resources

**hour 92-101**: created a ""shady"" instagram webscraper which does the following.

visits a profile and scrapes all the usernames that follow this profile. Then it visits every each one of them   and scrapesfollower and following number data. Then calculates the ratio of following and followers andchecks from its last posts if it is an active account. If it is an active account and follows more people than hasfollowers the program saves his link and username in a database.The concept is that people who followmore people than get followed are good future follower candidates. Now i want to add a function to theprogram to auto like 5 posts on each of this account. I created a second account to test all this and i won't tryto use it on my primary account. I will get banned obviously!

&#x200B;

So that was my first 100 hours of programing, i would be happy to answer your comments and questions and about your programing journey too!!

&#x200B;

**Edit**: heres some photos of my running fitness project     [https://imgur.com/gallery/LDTkPlZ](https://imgur.com/gallery/LDTkPlZ)  the dots in the plot are running fitness scores for individual runs and the line is the last 3 activities average. Something i want to clarify is that i am not good at programming yet. My programs are buggy and my code is most of the times unreadable. i use google and stack overflow all the time and i get stuck every 5 seconds at something.

&#x200B;

**Edit2:** The reason i remember so clearly what i did in every hour is cause i logged every minute studing and coding in a productivity timer app. I am a master procrastinator so doing things like this keeps me motivated. i also kept notes of what i accomplised every hour to a spreadsheet knowing that one day it may motivate and help someone else do the same.

i won't stop here!!! i am planning to write about my journey here or on a new post as i reach 200-300 hours. The next 2 months will be a little slow but i believe until summer i will reach 300-500 hours

&#x200B;

**Edit 3** : ***I want to add some more things to the post(advices,thoughts and future plans)***

* edx and coursera has plenty of more ""university"" like courses on programming even from universities like MIT and other known institutions, all of the courses there are FREE to watch, you only pay if you want to get a certificate. Also there is a financial aid program if you cant pay the full price but still want to get a certificate. I plan to start a data science/Machine learning course in the future
* the strugle with online courses is that most of them cover the basics and then you are pretty much on your own, so i now i feel a little lost on where to go on and what to learn
* another strugle i have is that i don't know how to organize my code properly. I don't know where it makes more sense to create classes, when to split my script to two or more files and things like that, as my projects grow in size i get the feeling that my code is like a giant with glass legs one little thing goes wrong and the whole thing colapses and sometimes i have to rewrite whole sections just to make it work. I believe that if i learn to organize my code better i won't have such problems in the future
* use jupyter notebooks!!!! google it!
* visit [codewars.com](https://codewars.com) it is a great site where you solve problems riddle like using programming. You start from easy problems and as you solve them you go to harder ones
* do your own projects not the one your tutor does. you will fail miserably but in the process of finding why you failed you will learn more stuff
* play with the code. when i find a line of code online and put it in my project i switch little things to see how it breaks and trying to find out why. This way i learn what every word and symbol in the line of code does and whats it's role
* try to not copy paste code even if you wrote it in a previous project.
* read a libary's documentation. When you start learning a new library don't google everything take some time to read the documentation, you will get a better idea of what you can do with this library in the future",1576003198.0
My first Python program - Fifty years in the making!,733,irytd1,learnpython,https://www.reddit.com/r/learnpython/comments/irytd1/my_first_python_program_fifty_years_in_the_making/,85,"Hello everyone!

I am a seasoned SQL programmer/reporting expert who's been working in Radiology for the past 20+ years. I had always wanted to learn another programming language and had many starts and stops in my road to that end. I was able to understand the process of programming but never really pushed myself to have any real work/world applications to try it out on.

So for my 50th birthday I made a promise to myself that this would be the year that I actually learn Python and create a program. I started with the ""Automate The Boring Stuff"" course and then figured out what problem I wanted to solve.

Once a month I have to collect test results on the monitors that the radiologist use to read imaging (xrays) on. The Dept of Health says we need to be sure the monitors are up to snuff and we have proof that this testing is happening. Normally I would have to click through a bunch of web pages to get to a collection of PDFs (that are created on the fly)  that contain the test results. Then I'd have to save the file and move it to the appropriate directory on a server. Very manual and probably takes 30 minutes or so to get all the reports.

It took a bit of time but my Google Fu is strong so I was (for the most part) able to find the answers I needed to keep moving forward. I posted a few problems to Stack Overflow when I was really stumped.

The end result is the code below which does the whole process in about a minute. I am so proud of myself getting it to work and now I have this extra boost of confidence towards the other jobs I plan to automate.

I also wanted to post this because some of the solutions were hard to find and I hope if another programmer hits the same snag they could find it in a Google search and use part of my code to fix theirs.

I'm on fire and have so many more new projects I can't wait to create!

EDIT: changed any real links to XXX for security reasons.

    from selenium import webdriver
    from selenium.webdriver.common.by import By
    import time
    import shutil
    import os
    from datetime import datetime 
    
    ##Set profile for Chrome browser 
    profile = {
        'download.prompt_for_download': False,
        'download.default_directory': 'c:\Barco Reports',
        'download.directory_upgrade': True,
        'plugins.always_open_pdf_externally': True,
    }
    options = webdriver.ChromeOptions()
    options.add_experimental_option('prefs', profile)
    driver = webdriver.Chrome(options=options)
    
    ##Log into monitor website
    driver.get(""https://xxx.com/server/jsp/login"")
    
    username = driver.find_element_by_name('j_username')
    password = driver.find_element_by_name('j_password')
    
    username.send_keys(""XXX"")
    password.send_keys(""XXX"")
    
    driver.find_element_by_css_selector('[value=""Log on""]').click()
    
    ##Start loop here
    monitors = [""932610524"",""932610525"",""932610495"",""932610494"",""932610907"",""932610908"",""932610616"",""932610617"",""932610507"",""932610508"",""1032422894"",""1207043700""]
    for monitorID in (monitors):
        url = ""https://xxx.com/server/spring/jsp/workstation/complianceCheckReport/?displayId={}"".format(monitorID)
    
        driver.get(url)    ##Driver goes to webpage created above
    
        workstationName = driver.find_elements_by_class_name('breadcrum')[3].text ##Grabs workstation name for later
    
        badWords =['.XXX.org']    ##Shorten workstation name - remove url
        for i in badWords:
            workstationName = workstationName.replace(i, '')
        
        driver.find_element_by_class_name('css-button2').click()    ##Driver clicks on top button that leads to webpage with most recent PDF
    
        driver.find_element_by_class_name('href-button').click()    ##Now we're on the pdf webpage. Driver clicks on button to create the PDF. Profile setting for Chrome (done at top of program) makes it auto-download and NOT open PDF
    
        time.sleep(3)    ##Wait for file to save
    
        dateTimeObj = datetime.now()    ##Get today's date (as str) to add to filename
        downloadDate = dateTimeObj.strftime(""%d %b %Y "")            
           
        shutil.move(""C:/Barco Reports/report.pdf"", ""Y:/Radiology/DOH monitor report/All Monitors/"" + (workstationName) +""/2020/""+ (downloadDate) + (monitorID) + "".pdf"")    ##Rename file and move
    
    driver.close()
    time.sleep(3)
    driver.quit()

UPDATE: since posting this I have done some major updates to the code to include almost everything that commenters had suggested. I think I am done with this project for now and starting work on my next automation.

&#x200B;

    from selenium import webdriver
    import time
    import shutil
    import os
    from dotenv import load_dotenv
    import requests
    
    # Set profile for Chrome browser
    profile = {
        'download.prompt_for_download': False,
        'download.default_directory': r'C:\Barco Reports',
        'download.directory_upgrade': True,
        'plugins.always_open_pdf_externally': True,
    }
    options = webdriver.ChromeOptions()
    options.add_experimental_option('prefs', profile)
    driver = webdriver.Chrome(options=options)
    
    # Loads .env file with hidden information
    load_dotenv()
    
    # Log into BARCO website
    barcoURL = os.environ.get(""BARCOURL"")
    
    # Check that website still exists
    request = requests.get(barcoURL)
    if request.status_code == 200:
        print('Website is available')
    else:
        print(""Website URL may have changed or is down"")
        exit()
    
    driver.get(barcoURL)
    
    username = driver.find_element_by_name('j_username')
    password = driver.find_element_by_name('j_password')
    
    name = os.environ.get(""USER1"")
    passw = os.environ.get(""PASS1"")
    
    username.send_keys(name)
    password.send_keys(passw)
    
    driver.find_element_by_css_selector('[value=""Log on""]').click()
    
    # Start loop here
    
    barcoURL2 = os.environ.get(""BARCOURL2"")
    
    with open('monitors.csv', newline='') as csvfile:
        for row in csvfile:
            url = (barcoURL2).format(row.rstrip())
    
    # Driver goes to webpage created above
            driver.get(url)
    
    # Grabs workstation name for later
            workstationName = driver.find_elements_by_class_name('breadcrum')[3].text
    
    # Grabs date from download line item
            downloadDate = driver.find_element_by_xpath('/html/body/table/tbody/tr[2]/td/table/tbody/tr/td[2]/table/tbody/tr[2]/td/table/tbody/tr[2]/td/div[@class=""tblcontentgray""][2]/table/tbody/tr/td/table[@id=""check""]/tbody/tr[@class=""odd""][1]/td[1]').text
    
    # Remove offending punctuation
            deleteDateComma = [',']
            for i in deleteDateComma:
                downloadDate = downloadDate.replace(i, '')
    
            deleteColon = [':']
            for i in deleteColon:
                downloadDate = downloadDate.replace(i, '')
    
            sensorID = driver.find_element_by_xpath('/html/body/table/tbody/tr[2]/td/table/tbody/tr/td[2]/table/tbody/tr[2]/td/table/tbody/tr[2]/td/div[@class=""tblcontentgray""][2]/table/tbody/tr/td/table[@id=""check""]/tbody/tr[@class=""odd""][1]/td[4]').text
    
    # Remove offending punctuation
            deleteComma = [',']
            for i in deleteComma:
                sensorID = sensorID.replace(i, '')
    
    # Get workstation name - remove url info
            stripURL = ['.xxx.org']
            for i in stripURL:
                workstationName = workstationName.replace(i, '')
    
    # Driver clicks on top button that leads to webpage with most recent PDF
            driver.find_element_by_class_name('css-button2').click()
    
    # Now we're on the pdf webpage. Driver clicks on button to create the PDF
            driver.find_element_by_class_name('href-button').click()
    
    # Profile setting for Chrome (done at top of program)
    # makes it auto-download and NOT open PDF
    
    # Wait for file to save
            time.sleep(3)
    
    # Rename file and move
            shutil.move(""C:/Barco Reports/report.pdf"", ""Y:/Radiology/DOH monitor report/All Monitors/"" + (workstationName) + ""/2020/"" + (downloadDate) + "" "" + (sensorID) + "".pdf"")
    
    driver.close()
    time.sleep(3)
    driver.quit()
    
    # Things to update over time:
    # Use env variables to hide logins (DONE),
    # gather workstation numbers (DONE as csv file)
    # hide websites (DONE)
    # Add version control (DONE),
    # Add website validation check (DONE)
    # Add code to change folder dates and
    # create new folders if missing

&#x200B;",1600005814.0
I'm 43. Want to be a software engineer. Am I crazy?,725,pm6jf4,learnpython,https://www.reddit.com/r/learnpython/comments/pm6jf4/im_43_want_to_be_a_software_engineer_am_i_crazy/,263,"Hi. I tried my hands at the most easiest quizzes at leetcode.com. I sucked without knowing list expressions even though I went through almost all of w3 introduction of python. Am I trying to eat a cake that is too big for my aspiration?

*Thank you very much for your kind words and encouragement. Wise words and advices from the expert and experienced. Heartfelt gratitude to those who have taken the time to read and reply with thought.",1631363246.0
My dad thinks that a road in his hometown in Tasmania is the longest constantly curved road in the world. I want to prove him either right or wrong.,719,i4sbct,learnpython,https://www.reddit.com/r/learnpython/comments/i4sbct/my_dad_thinks_that_a_road_in_his_hometown_in/,109,"Driving along [this road](https://www.google.com.au/maps/dir/-41.0025882,145.7407935/-40.9849608,145.6996683/@-40.997629,145.7194357,14.18z/data=!4m2!4m1!3e0) takes a few minutes but at no point do you have to move the steering wheel much.

The plan was to pull google maps data, plot points along major roads, and do some math to those points based on my currently undefined curvature criteria. Does anyone have any idea if this is feasible? It would be cool to be able to validate his claim, or find a bigger curve.

Ideally the map data will include road endpoints and it will be possible to plot points along each road to be tested. I'd then run a check that determines the deviation of point 3 relative to points 1 and 2. If the deviation of point 4 relative to points 2 and 3 was within tolerance a counter would increment and the longest succesive run of successful checks would give me the longest constant curve on that road. 

I'd then aim to check every road I could, with some filters around high population areas and filters based on total road length if available to optimise where I could.

Does this seem feasible?

Thanks in advance.",1596722452.0
I wrote a program that allows you play Hangman with a random comment from Pornhub,721,em32nj,learnpython,https://www.reddit.com/r/learnpython/comments/em32nj/i_wrote_a_program_that_allows_you_play_hangman/,85,"I spent a solid day working on this just to practice.

Here's the [source code](https://pastebin.com/Dfg5dzWd) compatible with python 3.8+. The third-party libraries, [bs4](https://pypi.org/project/bs4/), [requests](https://pypi.org/project/requests/), and [lxml](https://pypi.org/project/lxml/), are required to run the source code.

There's a few improvements and implementations I would like to make, but I think it's at a presentable stage. Feel free to leave a comment or suggestion on this project.

EDIT: I optimized various parts of the code and added a few features.

* Added commands. You must enter a `/` followed by the command. You can get a list of commands with `Hangman.commands.__doc__`.

* Added `prompt_vid` parameter to the `main()` function. This will prompt the player with the option to open the related video in the default web browser after a game. `prompt_vid` is set to `False`  by default.

* Added `comment_len` parameter to the `main()` function. This allows you to control the length of the comments to avoid lengthy comments. `comment_len` is set to `(5, 50)` by default.

* Made various tweaks to the code's logic for better optimization and to be made compatible with the new features.

Here's the [source code for the updated version](https://pastebin.com/G8U5Y1EG).",1578536466.0
To beginners (or anyone honestly) here are some helpful keyboard shortcuts (and keys themselves) that could greatly improve your efficiency or just make life easier,725,gky9cs,learnpython,https://www.reddit.com/r/learnpython/comments/gky9cs/to_beginners_or_anyone_honestly_here_are_some/,110,"Was recently helping out a family member of mine, with their programming assignment. Kid is in college, some intro to cs type class that involved python. I don't know why it bothered me, but seeing how slow he navigated through the file / docs in general - I couldn't help myself. i showed him a handful of easy keyboard shortcuts, that I suppose Ive just incorrectly assumed most people know about them- but apparently not: after a little practice, he's told me it was some of the most helpful advice ive given him. sometimes the little things can really make a difference: like - quickly reaching the start/end of your line. quickly moving things around in your file, by highlighting to copy paste..etc...I typically am of the belief a mouse should rarely be used. that's not only brutally inefficient, it (for me at least) would cramp the hell out of my hands if i was using a mouse all day. to clarify- i say that as it pertains to writing code. obviously using a mouse to open different browsers or diff apps is a reasonable time to use it.    
 
experienced programmers: I imagine you use these along with others, so this isn't so much directed at you: but feel free to chime in, and add anything you think might be useful. figured this can at least help some people out:   
  
should be noted these are done on my windows computer. not all will be doable on mac: and might require diff commands  
  
Ill start with the `Home` and `End` keys that apparently few people seem to actually know about:  
  
`Home` moves your curser to the start of the line  
`End` moves curser to the end of the line its on  
`ctrl` + `Home` moves your curser to start of doc | `ctrl` + `End` moves your cursor to the end  
   
`shift` + `Home` will select/highlight everything on the line cursor is on up to the curser  
`shift` + `End` will select/highlight everything on line after the curser  
if you wanted to quickly highlight a line to copy: you press `home` to get to start of the line: then press    
`shift+End` to highlight the line. (you could also do the reverse...where you press `End` followed by
`shift+Home`)    
    
`ctrl+shift+End` : wherever my cursor is, everything after it in the doc gets selected/highlighted  
`ctrl+shift+Home` will highlight everything in the doc up to cursor  
  
`ctrl+left/right arrow` to move your 'jump' your cursor to the previous/next word on the line. Ex: you want to edit the 3th word on a line. hit `Home` then `control+rightarrow`to quickly get there    
  
`ctrl+shift+ left/right arrow` to select the whole word. if you wished to select multiple words- keep ctrl+shift  held and continue to press left/right arrow to add  
`shift+ up/down arrows` to select lines either above or below to include - (useful if you want to move those lines elsewhere with a ctrl+x to cut/paste. or just copy/paste)   
  
`ctrl+backspace` - to delete word  (cursor starts at end of word)
`ctrl + Delete` -  to delete word (cursor at start of word) can keep pressing backspace/delete in both ex to delete more than one word.  
If you wish to delete full line can - highlight the line + del [ hit home, then shift+end then delete]  
    
others:  
`ctrl` + `/` : will comment/uncomment line the curser is on. you can highlight however many lines you wish, and it will comment/uncomment all selected  
`ctrl+n` : new file   
`ctrl+o` : open file  
`ctrl+z` : undo  
`ctrl+y` : redo  
`ctrl+f` : find certain word  
`tab` : indent to the right  (can be multiple lines if multiple lines are highlighted)  
 `shift+tab` : 'unindent' or indent to the left  
`ctrl+c` : copy | `ctrl+x` cut  --> `ctrl+v` :paste  
`ctrl+a` select ALL ..selects everything  

edit:  will add a few more upon reading comments:    
 the same indent/unindent can be done with `ctrl`+`]` to indent and `ctrl`+`[` to unindent  
some shortcuts can be done in more than one way, and are more matter of preference and what feels more natural. its a perfectly fine alternative  
  
additionally- `ctrl` + `H` :Find and Replace 

can be another great one. rather than simply hit ctrl+f to find a word...find and replace not only locates the word. but offers the ability to replace that word with a different word of your choice. you can choose to replace only one instance, specify youd like to replace the next as well, or you can replace all. (maybe you spelled something wrong, or updated a name, and instead of scrolling through the entire file, to locate each instance, you simply hit CTRL+H to find the word you wish to replace, and enter the word you want to replace it with.  
its worth noting, this can get more complex with the inclusion of `regex`, so ill leave that out of this post, but any beginner who's interested in learning about regex, its incredibly helpful to know [this is one ex: that explains it](https://docs.python.org/3/library/re.html) but there are countless others. don't be discouraged when you see it. few people I know actually memorize every element of regex -  rather develop a familiarity, recognize common patterns, but don't feel discouraged if you cant memorize it all...its extremely unique to what most of youve likely seen - b4 everybody jumps in at me lol- im strictly addressing begginers here who could easily have never seen regex before- by no means feel obligated to learn it... but it quite powerful so at some point it certainly can be quite helpful. combined with CTRL + H can do some cool things  
  
lastly: [heres another nice reply](https://www.reddit.com/r/learnpython/comments/gky9cs/to_beginners_or_anyone_honestly_here_are_some/fqvgoz8/)  
now you should all know how to format your code in reddit lol. 

im sure there are others Im not thinking about. but for beginners I figured this may be helpful. feel free to add other shortcuts you like/find useful",1589649127.0
"Out of curiosity, how many of you guys started your journey with 'Automate the boring stuff'?",720,jjpq3t,learnpython,https://www.reddit.com/r/learnpython/comments/jjpq3t/out_of_curiosity_how_many_of_you_guys_started/,129,"The video course has been a real 'ice breaker' for me, very glad it exists.",1603898463.0
"My career path going from zero experience, to a Sr. Engineer @ FAANG. No college or bootcamps, completely self taught.",711,tf3929,learnpython,https://www.reddit.com/r/learnpython/comments/tf3929/my_career_path_going_from_zero_experience_to_a_sr/,57,"Good afternoon everyone!

I made a post on another users post here:  
https://www.reddit.com/r/learnpython/comments/ctkypf/im\_100\_self\_taught\_landed\_my\_first\_job\_my/ that I would also do a  
write-up of my experience as I am similar to the user in the above post. I'll try and follow the same format as people  
seemed to like it.

This will be my story on how I went from (essentially) zero IT experience to becoming a Senior Engineer @ FAANG.

Location: US  
Age: 28

My start isn't as philosophical as the above posters, I worked a couple service industry jobs through my teens and 20's, I didn't really have a plan in mind at the time, but I was a pretty big gamer, and had always been somewhat interested in computers throughout my life. I knew some really basic networking to get my computer to have a static IP and knew the old ""DNS is names pointed to numbers"". I'm not sure if I would consider myself the most motivated person, but I think I  
would fall into the category of ""If I have an itch, it needs to be scratched."", and most of my itches came in the form of wanting to know how things worked.

My first job I got when a manager of mine at In-N-Out managed to get himself a position as a Jr. SysAdmin and knew I was interested in computers at the time. We had talked about computing and gaming over our time together at In-N-Out, so he had suggested I apply and put in a good word for me (He's ""@WadingThruLogs"" on twitter go throw him a follow).

I'll link the resources that I've used throughout the years, but I didn't really follow too many YouTube channels specifically, most of my experience comes from what I do on my own and the people that have taught me things along the way.

\------------------------------------------------------------------------------------------------------------------------

Most of my book recommendations will be for programming but to be honest I didn't do much programming until I became a devops engineer.

Book 1: Design Patterns: Elements of Reusable Object-Oriented Software  
Authors: Erich Gamma, Richard Helm, John Vlissides, Ralph Johnson (The Big 4)

I feel like this is the first on everyone list, but use it more as a reference manual rather than sitting down and reading it front to back. The things you build now may not be enterprise grade or all that fancy, but its good to understand design patterns now and think of ways they can be applied when solving a specific problem. If you find yourself writing a lot of boilerplate code over and over, there's probably a better way to do it.

10/10 Recommended

\------------------------------------------------------------------------------------------------------------------------

Book 2: Code Complete (2nd edition)  
Author: Book by Steve McConnell

Another book in everyone's list. This one is a beefy boy but essentially is an encyclopedia of best practices and pragmatic guidance. It comes with tons of examples and digrams that help explain best practice concepts and teach you how to be a better programmer by thinking of things differently that you would originally. Are you refactoring code? Here's the recommended way to go about it. Starting unit testing? Well you're code will ALWAYS have bugs, but here is how you can build fault tolerance into your software. Etc Etc

10/10 Recommended

\------------------------------------------------------------------------------------------------------------------------

Book 3: Refactoring  
Author: Martin Fowler

This book is quite good for when your getting into a new position, and you need to take on a new codebase. Often times we find ourselves walking into a dumpster fire of code, and need to know the best way of approaching a refactor. This can take time and introduce more unintended side effects into the code than was there originally. You should start adopting the idea of ""Leaving the code cleaner than you found it"" now, so that when the time comes you don't have to take 3 sprints to refactor a complete codebase, but it's all done as you revisit different sections of the code in your  
normal workflow.

8/10 Recommended

\------------------------------------------------------------------------------------------------------------------------

From here on out I don't have many book or video recommendations, but I will talk a little about my progression through my career as that may help some people in understanding ""Where do I go next?"" after they have gotten their first position.

Position 1: Jr. Systems Administrator  
Location: Datacenter  
What I learned: Problem-Solving, Critical Thinking, How to break down problems to small chunks  


Just a note here, this position while the title is misleading, I was a glorified help desk operator taking calls and working on tickets. I think the title only existed because I was slotting servers and doing basic administration.

My very first IT job bright-eyed and bushy-tailed, the company was a small datacenter located not too far from where I lived at the time in a small business park. At this point I didn't really know much so I had to do a ton of self leaning on the job, as I went. My company had required that I pass the Microsoft MCSA certification for Windows Server 2012 which involved the 70-410, 70-411, and 70-412 certifications. I was wholly unprepared because even Microsoft themselves recommended at least 4 solid years of experience as a dedicated Windows administrator before even attempting  
the test and I didn't even understand what Windows Active Directory EVEN WAS.

Needless to say I failed the first exam twice, and never ended up getting any part of the MCSA, but more importantly I got moved to night shift where we got very few calls and tickets. This time was spent now learning any new technology I thought was interesting while also looking for things I could improve on for my daily working life.

For example, when we deprecated old bare-metal servers we would need to wipe the hard drives that came out of them and install our baseline linux image to get them ready to be reslotted. I knew that PxE booting was a thing but not really a whole lot on how it worked, so I read the wiki, watched a few videos, and ended up standing up my own pxe boot server for us to use that would automate the process of wiping the hard drives and installing an image automatically. All while it just needs to be plugged into the network port on our test bench. My process was all about taking small bites out of  
a large problem and just googling how to do it until I had a grasp on what was happening.

I also learned basic bash scripting to install a LAMP (Linux, Apache, MySql, PHP) stack on a linux system by just writing the script line by line and re-running it until it worked. The main point being just how important it was to sit down and try things until you understand how they work.

\------------------------------------------------------------------------------------------------------------------------

Position 2: Cyber Security Operator I  
Location: SOC  
What I Learned: Understanding of IT security, More scripting but this time with Python!  


Didn't see that one coming did you? Jr SysAdmin to working in cyber security? Well it turns out the same manager that had helped me out getting my first job developed a more specific interest in IT security and while I wasn't as interested in it, the position paid way better that what I was doing at the datacenter, and I absolutely hated working nights. So I applied at the same place and ended up getting offered the position.

I started working with what I had learned from my previous position, basic networking, a concept of firewalls, active directory, how basic websites worked, etc. and learned very quickly about the security of all these things in my own time. A huge shoutout here to the /r/netsec community, as they were essentially my every day read for new security write-ups, open source software that I found interesting and cool, and an all around nice community! After a few months of studying I went and took my Network+ CompTIA certification.  


The same concept that I applied in my last position I applied here, I'm very lazy and so I want to build something that would make my life easier at work. At the time I had been playing EvE online for quite a few years before coming across a corp member that also happened to be a like 10 year C/C# programmer. He helped me really get into the idea of programming with an actual language rather than just bash scripting, and I chose python. My first program I ever wrote was a calculator for how many times a ship or number of ships would need to pass through a wormhole to cause it to  
collapse on while you were stuck on the correct side.

Moral of that story is that any example you can find of something to automate or write something about you should make a project out of! I ended up also creating an auto hotkey script that would write the number of security event tickets required of me per day, so essentially all of my day was spent understanding how these open source software I found on /r/netsec worked, and I came across a term or concept I didn't understand I would do some learning about what it was.

\------------------------------------------------------------------------------------------------------------------------

Position 3: Security Engineer  
Location: Electronics Conglomerate  
What I Learned: More in-depth security, Basics of engineering and the cloud (AWS)!  


This job isn't super remarkable for what I learned specifically but was nice was getting a title bump and essentially doubling my salary at the time. Which leads me to my next point, a title change can be the difference in entire job families. Now there isn't really much of a difference between a Cyber-Security Operator and Engineer, as long as when you write your resume you're selectively putting your job duties that focus on building things. Breaking into the engineering tier with job titles is very beneficial because once you have that title on your resume, you basically can  
always be an engineer anywhere you go. Same goes for Operators, Analysts, Architects, etc.

An example being I didn't really do any engineering when I was an operator, but I did know how to write scripts and in my time learning on the job, I did some reading on design patters (see above book) and put on my resume that I built scripts to automate the workflow of security events within my daily activities. I didn't technically lie about any of that I did actually do it, it just wasn't in my job description. So always tailor your resume to the job you're applying for, even going back to previous positions and tailoring your experience there to be more geared to the current position your trying to get.

What I learned here mostly was the basics of AWS, like what is EC2, S3, Load Balancers, VPC's etc, and how to administrate a security appliance. In our case it was a Secrets Management System that I wrote a commandline utility for.

\------------------------------------------------------------------------------------------------------------------------

Positions 4,5,6: Senior Devops Engineer  
Location: Tax, Healthcare, FAANG Companies (Current Position)  
What I Learned: Everything under the sun that has to do with infrastructure as code  


This post is getting to be a little long-winded, and I'll probably just end up repeating myself but essentially getting into devops was the same process as the previous jump from sysadmin to security, tailoring your resume and making sure to apply your time outside of work and the downtime you have inside of work to learn about new things. In this case it's for Development Operations (DevOps). It's the new fullstack engineer because of the vast quantities of technologies you need to be familiar with to be effective. To list the ones I use in my day to day off the top of my head:

AWS (EKS, CloudFormation, EC2, S3, SSM), Helm, Kubernetes, Bash, Docker, Golang, Python, Groovy (Java), Networking,  
Various different programming specific frameworks.

Over time I've had to learn a ton of other technologies that all do similar things but just differently enough that the knowledge didn't directly translate. Like Jenkins and Octodeploy, or Ansible and Salt-Stack essentially do similar things but their operating model and capabilities are different.

\------------------------------------------------------------------------------------------------------------------------

Closing notes & Tips  


Interviewing:  
\- In the beginning you'll pretty much have to take the positions that are offered to you, until the time you gain   
the confidence to interview the company, rather than the company interviewing you.  
\- If you're comfortable teaching yourself things, don't limit your job searches to things that only include your   
area of expertise, if you like use Django, look for positions in python webdev, not just Django jobs and teach   
yourself the framework they use.  
\- WORK ON YOUR SOFT SKILLS! This is probably one of the most important tips, soft skills get you in the door and get   
people to like you. If people like you, they are more willing to help you out or give you a break. I was a bar rat   
for a couple of months, and it really helped me harness my natural charisma and general conversation. Find a social   
hobby that puts you in uncomfortable situations to help out with this.  
\- There's always more money in the budget for your role than you think there is. If the average for a role is 100k   
the money on the table is probably closer to 120-140% of that. If you're confident, you can ask for the world.  
\- I agree not to put technologies you don't completely know on your resume, but it's fine to put things you have a   
small about of experience with. Just indicate in the interview as such ""How much do you know about framework X?   
Oh I build a small personal project with it, here's a short description and the parts of the framework I used.""  
\- Dress well  
\- If you don't know the answer to a question, tell them! You should also however follow up with your best guess at   
how it should be done conceptually. Anyone can google how to use a hash map, but when interviewing I care more   
about \_when\_ you would use one. How you think is more important than what you know most of the time as it's   
easier to fix.  
 

Thats really it! If you have any specific questions I'll be posting responses in the comments.  


Thanks!  
\~ Tali",1647386200.0
Finally understand why virtual environments are so important...,711,jjaf3q,learnpython,https://www.reddit.com/r/learnpython/comments/jjaf3q/finally_understand_why_virtual_environments_are/,73,"It never quite clicked to me exactly why virtual environments are so important.. until today.  I don't use python a whole lot, but use it for some automation / data processing.  I've been trying to incorporate it more leveraging 3rd party libraries.  I've generally only had a couple of projects that almost all utilized the same libraries (requests, pandas etc.)

Well, those third party libraries are potentially built using other third party libraries.  In their [setup.py](https://setup.py) file they contain the versions of those libraries they use.  Well today, I installed csvmatch and noticed it removed my dedupe library and replaced it with a much older one.  This would have broken another program I created.

Going forward I will learn how to properly use virtual environments so I don't screw up other projects.

Dumb I know, but sometimes you need to see it for yourself to truly understand how and why something works or its intention.

Thanks for coming to my ted talk.",1603834262.0
Python helped me get a job!,705,m8epf6,learnpython,https://www.reddit.com/r/learnpython/comments/m8epf6/python_helped_me_get_a_job/,61,"So some background: I'm an econs student who came to sg for my master's in applied econs- graduated back in June 2020 and tbh I wasn't exactly sure what I wanted to do. I got this internship offer from this crypto fund of funds based in London (quantitative investment side intern) and I just figured that I'll roll with it as well it helped pay the bills and would be a good learning experience while I look for work in sg. 

Around 9 months later - I've automated all the data collection and management work for all our funds using python. Set up multiple scripts to do bunch of fund and market monitoring tasks while also setting up scripts to generate dynamic quant templates (bunch of financial metrics) pertaining to our fund needs. Eventually got offered a starting role as an investment analyst! 

I was the only intern who could code and while I didn't have a full fledged finance background per se (all the other interns were finance majors), my python skills (albeit quite basic lol) helped me separate myself and add some unique value to the firm (it's a startup so a smaller team and no one else in the company can work with python/R) 


I just wanted to thank this subreddit tbh. I don't post often but I lurk around alot. I know it's just the start and for everyone who's just starting to get into python - stick with it. It might take a while but once you actually do an actual project that's useful for your needs - you'll finally start feeling that your hard work is worth it!",1616151435.0
"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code SEP2021FREE",693,pgode2,learnpython,https://www.reddit.com/r/learnpython/comments/pgode2/automate_the_boring_stuff_with_python_online/,90,"https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: SEP2021FREE

https://www.udemy.com/course/automate/?couponCode=SEP2021FREE

This promo code works for 3 days (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to SEP2021FREE2 in 3 days, and that code will work for another 3 days.

Some people in India and South Africa get a **""The coupon has exceeded it's maximum possible redemptions""** error message. [Udemy advises that you contact their support if you have difficulty applying coupon codes, so click here to go to the contact form.](https://support.udemy.com/hc/en-us/requests/new?type=student)

**I'm also working on another Udemy course** that follows my recent book ""Beyond the Basic Stuff with Python"". So far I have [the first 15 of the planned 56 videos done. You can watch them for free on YouTube.](https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&index=1)

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

Side note: My latest book, [The Big Book of Small Python Projects](https://inventwithpython.com/bigbookpython/), is out. It's a collection of short but complete games, animations, simulations, and other programming projects. They're more than code snippets, but also simple enough for beginners/intermediates to read the source code of to figure out how they work. The book is released under a Creative Commons license, so it's free to read online. (I'll be uploading it this week when I get the time.) The projects come from this [git repo](https://github.com/asweigart/pythonstdiogames).

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",1630609342.0
I FINALLY DID IT!!,694,l75ir6,learnpython,https://www.reddit.com/r/learnpython/comments/l75ir6/i_finally_did_it/,71,"After multiple attempts (over several years) to ""get"" Python, I finally did it: I built a function that is clean and useful for my job in Python.

You can find it here in a GH repo, and while I recognize it's super basic, the fact that I was able to write a program that *does something* just feels so good. This sub has been incredibly helpful in that process, along with ATBS by our lord and savior Al Sweigart.

[https://github.com/jwblackston/bazan\_lab\_projects/blob/main/movingImagingFiles.py](https://github.com/jwblackston/bazan_lab_projects/blob/main/movingImagingFiles.py)

&#x200B;

Just remember if you're stuck, find the simplest thing like reorganizing thousands of files at work, and you will quickly open the door to Python magic.

&#x200B;

\*also, please feel free to make suggestions to this program! I recognize it's basic but in the spirit of learning, I would love suggestions to make it more clean or efficient for even bigger tasks!\*

&#x200B;

P.S. ***Wow***! Reddit gold? That's a first for me. You all are so supportive and wonderful. I love this community - keep at it y'all!",1611860807.0
Coding sites for beginners like pythonchallenge.com,699,h0w15n,learnpython,https://www.reddit.com/r/learnpython/comments/h0w15n/coding_sites_for_beginners_like_pythonchallengecom/,94,I am new to programming and just completed a foundation course in Python. I just discovered pythonchallenge.com. I was wondering what other sites are their to practice and learn coding.,1591868051.0
Anyone else learning Python to fill the time at a boring desk job?,699,d4imc2,learnpython,https://www.reddit.com/r/learnpython/comments/d4imc2/anyone_else_learning_python_to_fill_the_time_at_a/,158,"Instead of squandering the hours of downtime at my bs job on mindless Redditing , I'm learning to code. Going great so far, and I get hours of practice every weekday,

It's like a reverse bootcamp, where I'm being paid to learn development.

Can't believe I didn't think of this sooner.",1568541986.0
Don't forget to take care of yourself,692,kczpqb,learnpython,https://www.reddit.com/r/learnpython/comments/kczpqb/dont_forget_to_take_care_of_yourself/,44,"This post is more about learning programming globally, than python specifically, but I think it fits in well here, because python is so easy to jump into, as compared to C, Java, etc.

Computers are just tools, nothing more. They're the descendant of the abacus and calculator. They can do some pretty wild stuff like massive online multiplayer games, but fundamentally, they just receive, act upon, and deliver information from one to another. Most people experience computers from graphical user interfaces (GUIs); drag, drop, copy, paste, etc. -- it's all an abstraction of receiving, acting upon, and delivering information. Programming is simply a means to explicitly instruct a computer how it should perform these processes. 

Many Bootcamps, Udemy classes, YouTube series, etc. don't discuss it in these plain terms. They often advertise an identity not functional mastery of a tool. *""Become a web developer in 6 weeks, master the latest framework in python/JS/whatever, work remotely from a beach, be financially intendent.""*  Sound familiar?

But after these sort of courses, bootcamps, etc. you find that there is so much more to learn; data structures & algorithms, for example. It's not some modular skill you can just pick up over an afternoon. It's a lifelong pursuit. And this causes people to react in one of two common ways: **(A) Conclude their learning prematurely, simply unaware of how much they don't know or (B) Become obsessed with mastering the craft and put the rest of their personality on hold.** And endless leet code / hacker rank quest begins.

It's unhealthy to put your entire identity into programming. You'll never ""master"" it. Computers are just tools to explore ideas and programming is just a vehicle to manage the specific exploration of these ideas. We'll never stop having new ideas and so our understanding of computers and programming will always change and evolve. 

As someone who worked his way into a \~semi big name DS role, I really thought ""making it"" would complete me. But to be perfectly honest, I just feel exhausted from putting my hobbies and personal relationships on hold. I'm not saying a career in DS/SWE/etc. isn't worth pursuing. But be mindful that these careers are not identities/personalities; they're just specific approaches to programming, which is a specific approach to using computers, which is in itself just a specific usage of a tool. 

This post really wasn't meant to discourage you. Rather, I just want to encourage everyone to take a little more time for themselves; don't forget to cook, exercise/meditate, maintain friendships/relationships, etc. This road might have a beginning but it certainly doesn't have an end. You're simply building familiarity with a tool as long as it suits the problems you want to solve. 

""*Everything in moderation, including moderation*"" - Oscar Wilde",1607959709.0
What do you automate with python at home?,689,k5k1h0,learnpython,https://www.reddit.com/r/learnpython/comments/k5k1h0/what_do_you_automate_with_python_at_home/,377,"I'm learning python but I enjoy knowing I will be able to build a project of interest instead of following continuous tutorials which have no relevance to anything I do in life.

My job unfortunately has no benefit in using python so keen to understand of potential ideas for projects that help around home.",1606948043.0
I've officially started to automate parts of my job today and it feels incredible,688,alt3ge,learnpython,https://www.reddit.com/r/learnpython/comments/alt3ge/ive_officially_started_to_automate_parts_of_my/,58,"I'm a lifelong network engineer, and before November of last year I never coded or scripted a damn thing in my life. I knew python could be used for all kinds of tasks and I had been wanting to learn it since about 2016 but stayed away due to intimidation and time constraints. 

In November I got hooked on codeacademy's python course and subscribed, and supplemented it with CBT nuggets' python course. Bought Automate the Boring Stuff on amazon (which is always open and in front of my face while coding) and just started practicing concepts as laid out in the book. 

Today I successfully built a python script that SSH's in to groups of routers/switches and gets information from them, checks the information for certain values, and outputs me a list of compliant devices in a .txt... Last week i built a script that ingests 2 differen excel documents and compares them and alerts me of discrepancies between them. It took a bit of effort, but the reward has already been enormous, its amazing! 

The best part is i can use all of these little functions I've built in other, larger ways later on. Python has seriously empowered me not only in doing things for me, but in the belief that i too could achieve such knowledge apply it to my daily grind, that i too could achieve greatness!",1548962353.0
"Why ""a is b"" returns True if they both equal 200, but returns False if they equal 300?",682,gdjxm9,learnpython,https://www.reddit.com/r/learnpython/comments/gdjxm9/why_a_is_b_returns_true_if_they_both_equal_200/,69,"The following code would return True:

    a = 200
    b = 200
    a is b
    > True

But the following would return False:

    a = 300
    b = 300
    a is b
    > False

Why is that? What is happening under the hood? I know the switch happens at 256 -> 257 which seems odd at first sight (why not 255 -> 256?).

**EDIT:**

Never mind, I found the answer. For those interested:

>Python caches small integers, which are integers between -5 and 256. These numbers are used so frequently that it’s better for performance to already have these objects available. So these integers will be assigned at startup. Then, each time you refer to one, you’ll be referring to an object that already exists.

[https://realpython.com/lessons/small-integer-caching/](https://realpython.com/lessons/small-integer-caching/)",1588625628.0
I just found out I've been copying lists wrong all along.,676,itx9dn,learnpython,https://www.reddit.com/r/learnpython/comments/itx9dn/i_just_found_out_ive_been_copying_lists_wrong_all/,149,"In order to explain this, assume we have two lists: `some_numbers` and `other_numbers`, where

    >>> some_numbers = [1, 2, 3, 4, 5]
    >>> other_numbers = some_numbers

Many beginners would make a copy of `some_numbers` and store it in `other_numbers`, as I did above. However, what you might not know, is that when you do that you actually tell Python that they are the same list. So if you tried to add an item to `some_numbers` and then `print(other_numbers)`, you'd see that the output will include the item you added to `some_numbers`. i.e.:

    >>> some_numbers.append(10)
    >>> print(other_numbers)
    [1, 2, 3, 4, 5, 10]

If you wish to have two independent lists, where adding an item to one doesn't change the other, use this instead:

    >>> some_numbers = [1, 2, 3, 4, 5]
    >>> other_numbers = some_numbers[:]

Now, you can change the lists independently.

    >>> some_numbers.append(10)
    >>> other_numbers.append(20)
    >>> print(some_numbers)
    >>> print(other_numbers)
    [1, 2, 3, 4, 5, 10]
    [1, 2, 3, 4, 5, 20]

**Edit:** As mentioned in the comments by several people, the more readable option for copying is

    >>> some_numbers = [ 1, 2, 3, 4, 5]
    >>> other_numbers = some_numbers.copy()

&#x200B;",1600268656.0
Automate the boring stuff DOES work,676,en99wc,learnpython,https://www.reddit.com/r/learnpython/comments/en99wc/automate_the_boring_stuff_does_work/,71,"I had been fiddling with the language for a bit until a reorganization recently changed my role.

I went from “jack  of all trades” data engineer/ support guy / DBA to site reliability engineer. My new boss tasked me to automate all the boring stuff I was in charge of so I could focus on my new engineering duties.

In over a month, my code has gotten more succinct and effective. Things “click” now as I see real world applications for it. 

All I want to say is don’t despair. Yeah things can  be tough and confusing but it helped me to apply the language in my job. Automate the boring stuff, people!!

Hang in there. You got this.

PS: I am still a newbie, no doubt.

EDIT: a word.",1578759096.0
Started Learning Python 4 months ago... Developed a lane suggestion program today,669,hotb02,learnpython,https://www.reddit.com/r/learnpython/comments/hotb02/started_learning_python_4_months_ago_developed_a/,107,"I wanted to make this post to motivate those who don't believe in themselves. You can do it, trust me. I started learning programming for the first time about four months ago, when quarantine started. I had no prior knowledge about the subject. In fact, I didn't even start learning how to code as I had some some great interest in it -- rather, I just wanted to do an activity where I could ignore the world around me and just focus on the task at hand. Being a guy who suffered from generalized anxiety disorder and had severe impostor syndrome about math, I would have lost my mind if I didn't find that relaxing hobby.

But I found Python. I started studying each day for at least two hours. And I started falling in love with the art.

Today, 4 months after that day I started, I completed my first ""big"" project: A lane suggestion algorithm named ""Crappy Lane Detection."" My program takes the video of a road and suggests a path for a car to to travel on like [this](https://streamable.com/h7hlpz). I even made a [github](https://github.com/rpathak38/Crappy-Lane-Detection) for it, so that people could check it out and verify that I indeed did it. It really works guys, I actually did something cool. It feels amazing.

Now, to my main point of the post. If I could learn the skills needed to do this in four months, **you can too.** If I, a high school kid with severe anxiety and impostor syndrome, could do it, **you can too.** So go out there, build up your dreams, your crazy ideas; **I know you can do it.**

EDIT: Clarifying the title, I started learning Python 3, four months ago. No, there is no Python 4... yet

EDIT 2: Woah, this blew up pretty significantly. I'm overwhelmed by all the positivity I'm seeing, I'm so glad i was able to help motivate you guys :) And thank you, kind stranger, for the gold!",1594402600.0
"Wrote my first program, fixing a Windows 10 bug, yay!",665,oiu06g,learnpython,https://www.reddit.com/r/learnpython/comments/oiu06g/wrote_my_first_program_fixing_a_windows_10_bug_yay/,62,"Hello everyone,


I did it, reddit.


As a translator I work with three languages, so I constantly need to switch between them. Unfortunatelly, Windows 10 has a bug where the hotkeys for different languages get randomly reset, meaning I had to set these hotkeys up again several times a day, every day for the past half a year. 


I had zero experience in programming and completed one guide on python prior to creating the project in Pycharm on July 7th, and today on July 12th I've compiled a working version of my script. With it I send a command to Powershell to set the desired input language whenever I press the same hotkeys as I'm used to, while the script is running in the background. It's quite an improvement in my quality of life. When I've first launched my program and realised it works, it felt soooo satisfying.


The community here is absolutely great, I feel I can ask a question and it will be answered within 30 min. I believe this has been one of the best parts of my programming experience so far.

Cheers :)

Edit, link to the source code: https://github.com/spc-dg/input_language_switcher/blob/main/source_code.py",1626104992.0
Pro account for Codecademy free for students due to COVID-19,668,fmcp30,learnpython,https://www.reddit.com/r/learnpython/comments/fmcp30/pro_account_for_codecademy_free_for_students_due/,70,"Currently a Pro account on Codecademy is free for anyone with a student email

Edit: As users in the comments have confirmed, you can use any fake email as long as it ends in .edu to sign up. The pro membership lasts 90 days",1584784554.0
"I wrote a script that downloads all your reddit saved items, and can be viewed based on subreddit. I would love feedback.",658,cbzb8e,learnpython,https://www.reddit.com/r/learnpython/comments/cbzb8e/i_wrote_a_script_that_downloads_all_your_reddit/,95,"I'm not very new to programming but, started python this month by doing Automate the boring stuff. (author posted the free course a while ago here).

This script uses PRAW an amazing python wrapper for Reddit API. (kudos for that).

Why did I write this? Reddit is the best thing on the internet (at least for me). I've saved a lot of content but rarely had the time to go through everything. Even when I did it way harder to find posts.

Also, Reddit has a 1000 save limit.

So decided why not give it a go?

**Github:** [link](https://github.com/nooneswarup/export-archive-reddit-saved)

This is how it works:

* Download/Clone the files
* Edit the config file (more info on Github Readme)
* Install pythonv3.x and pip install PRAW
* Run the batch file or open the python file and compile.
* (Make sure to put assets(CSS and JS files) in the folder created, if it doesn't automatically copy them)

feedback/ suggestions/ critique's.

Also: Code is a clutter(Can't help with it)

Known issues can be viewed on Github Readme.

&#x200B;

EDIT: For those who asked me to post a screen recording, r/learnpython does not allow to post links/videos so you can view it [here](https://www.reddit.com/user/freeezer98/comments/ccn8dd/how_to_download_reddit_saved_posts_using_this/)

EDIT 2: CSS, JS file can be edited for much cooler designs. I'm not good at that so bear with me.

Also, it's easy to add options like is\_NSFW, is\_Gilded and many more. Incase you need anything don't hesitate to ask.",1562869857.0
switched over to python after studying javascript and reactjs for months. My god.. . the freedom and beauty of this language.,662,ebpe7u,learnpython,https://www.reddit.com/r/learnpython/comments/ebpe7u/switched_over_to_python_after_studying_javascript/,133,I almost want to cry with happiness. I actually enjoy coding again.,1576549620.0
I made a Tic-Tac-Toe game with 3642 lines of code and I'm sorry.,654,qwasyj,learnpython,https://www.reddit.com/r/learnpython/comments/qwasyj/i_made_a_tictactoe_game_with_3642_lines_of_code/,180,"I posted on this subreddit asking for help on a tic tac toe game that was 3642 lines of code and I got flamed (in a good way).

Thank you.

I had sculped an effigy of inefficiency and I have been ushered into the world with a fresh perspective. I did my best and reduced the code by a factor of 10 to 380 lines of code. It most likely can be cleaned up further but it did the job.

Here's the code. I believe it is impossible to beat. Give it a try, if you win tell me.

Thanks for the help guys.

[https://github.com/M0pps/Tic-Tac-Toe.py.git](https://github.com/M0pps/Tic-Tac-Toe.py.git)",1637188487.0
My ebooks on Python intro and regular expressions are free for a week,650,lgwfcw,learnpython,https://www.reddit.com/r/learnpython/comments/lgwfcw/my_ebooks_on_python_intro_and_regular_expressions/,116,"Hello!

I recently self-published my ebook titled ""**100 Page Python Intro**"". This book is a short, introductory guide for the Python programming language suited *for those who have prior experience with another programming language*. To celebrate, I'm giving away several of my books for free until 17 Feb, 2021.

## Ebook links

* **100 Page Python Intro**: [https://gumroad.com/l/100pagepythonintro](https://gumroad.com/l/100pagepythonintro) or [https://leanpub.com/100pagepythonintro](https://leanpub.com/100pagepythonintro)
* **Python re(gex)?**: [https://gumroad.com/l/py_regex](https://gumroad.com/l/py_regex) or [https://leanpub.com/py_regex](https://leanpub.com/py_regex)
* **Magical one-liners** bundle: [https://gumroad.com/l/oneliners](https://gumroad.com/l/oneliners) or [https://leanpub.com/b/oneliners](https://leanpub.com/b/oneliners)

## Web version and GitHub repo

You can also read the book online here: [https://learnbyexample.github.io/100_page_python_intro/introduction.html](https://learnbyexample.github.io/100_page_python_intro/introduction.html).

The [https://github.com/learnbyexample/100_page_python_intro](https://github.com/learnbyexample/100_page_python_intro) repo has program/example files, markdown source and other details about the book.

## Feedback

Hope you find my books useful and fun to learn from. As always, I'd highly appreciate your feedback. Please do let me know if you spot any error or typo. Happy learning :)",1612972037.0
"NSFW, selenium program I wrote today was the most fun I’ve ever had programming",645,di0w1k,learnpython,https://www.reddit.com/r/learnpython/comments/di0w1k/nsfw_selenium_program_i_wrote_today_was_the_most/,79,"I wrote a program that opened the chrome web browser, went to google.com, typed hentai porn into the search bar, submitted the search, then opened up the first video. I may not get a lot of upvotes for this program, but ive never laughed so hard while programming. If anyone wants the code I will gladly share it.

Ps. The CSS selector has the word “child” in it. If I could change the internet to remove this, I would. No one will go to jail for running this code. This is not loli stuff.


Edit: By popular demand, here is the code



    from selenium import webdriver


    driver = webdriver.Chrome(r'C:\Users\jorda\OneDrive\Desktop\chromedriver.exe')  # Optional argument, if not specified will search 
    path.


    driver.get('https://www.google.com');


     # Let the user actually see something!


    elem = driver.find_element_by_css_selector('#tsf &gt; div:nth-child(2) &gt; div.A8SBwf &gt; div.RNNXgb &gt; div &gt; div.a4bIc &gt; input')


    elem.click()


    elem.send_keys('hentai porn')


    elem.submit()


    elems = driver.find_element_by_css_selector('#rso &gt; div &gt; div &gt; div:nth-child(1) &gt; div &gt; div &gt; div.s &gt; div &gt; div &gt; a:nth- 
    child(1)')


    elems.click()


    elems1= driver.find_element_by_css_selector('body &gt; div:nth-child(8) &gt; div.content &gt; div.block-video &gt; div.video-holder &gt; 
    div.video-info &gt; div &gt; div.info-buttons &gt; div.rating-container &gt; a.rate-like &gt; i')


    elems1.click()",1571104653.0
"I've been coding in Python for 8 months, and I've never used a class. Is that bad?",638,kfmwsx,learnpython,https://www.reddit.com/r/learnpython/comments/kfmwsx/ive_been_coding_in_python_for_8_months_and_ive/,193,"I feel like I've never been in a scenario where I've had to use classes, or maybe I just don't know how to use them / where to use them / when to use them.  


Can anyone give an example of where they would use a class, and why they're using it?

Update: 130 days after I made this post I made my first class. I did not realize how useful they are, like holy moly!!!",1608304471.0
Follow up from I automated my job and now I have to present it to my CTO,639,ok45gi,learnpython,https://www.reddit.com/r/learnpython/comments/ok45gi/follow_up_from_i_automated_my_job_and_now_i_have/,143,"https://www.reddit.com/r/learnpython/comments/gix1qt/i_automated_part_of_my_job_and_i_now_have_to/

&nbsp;

TLDR: Follow-up from my post a year ago asking how to present and automation to my CTO, he shits all over it and me in front of 15 people as he feels I made some big security oversites/attacked/insecure/didn't have time. I decide to move to a tech-start up I get a 27k raise, I asked for 45k and they gave me 50k because in my new company people with my skills i.e Python are typically on 50k! I then drop some key takeaways from my learning.

&nbsp;

**Long version**
&nbsp;

So about a year ago I made this post explaining that I had made a script to automate part of my job potentially saving my business about 360 hours a year. Sorry it took me so long to follow up but here's the story. 

&nbsp;

I presented the script to my CTO from start I got bad vibes the atmosphere was a bit tense there were a lot of people on the call and my CTO is from America along with the rest of the Dev team and I'm the UK meaning I had no relationship with anyone.

&nbsp;


I showed off my script and of course I started having connection issues meaning my screen share was cutting in and out which took up about 15 minutes of the hour I can see my CTO was getting pissed off. Eventually, I got the script running it went well and worked perfectly. 

&nbsp;

The CTO didn't say anything for a while whilst the other devs asked me some basic questions such as what language is this? How long have you been coding? What packages did you use? Whilst also saying that they were impressed that I had built the script in such a short time. Then the CTO finally spoke up and said ""So those files you were uploading the data output looks like real names to me? Why have you got company data on your personal laptop?"" barring in mind I couldn't install Python on my work laptop I had used data from the company and like an idiot hadn't made it into dummy data.

&nbsp;

I quickly apologised and he took the opportunity to go in on me, he completely undressed me in the call in front of everyone taking the time to explain to me why having company data on my laptop was so bad and told me to delete every single piece of company data I had whilst share screened in front of 15+ people. Barring in mind the data was only first name + first initial + email address hardly credit card details. He then asked me if my username and password to access my company website was stored in my script in plain text, I said yes because they were and he could clearly see that. He then spent another 15 minutes raising his voice explaining lamenting how dangerous that was and how my packages could be stealing that data (barring in mind I used Pandas, numpy, selenium, xlsx writer all very known packages).

&nbsp;

By this time the meeting was essentially over and I was massively deflated. My boss who supported me said that she will speak to my CTO as it wasn't right the way he spoke to me in front everyone.

After my boss spoke to the CTO he agreed to review the script, I sent it over to them and ultimately I needed their help hosting the script on the company website. After weeks of not hearing anything I chased them and they simply messaged back ""sorry we don't capacity to work on this project right now""

&nbsp;

I was pissed off I'd spent probably over 100 hours on this script by this point working obsessively, I decided to start searching for a new job.

&nbsp;

I put my Python experience on my cv and a modified version of my script on GitHub and started applying for new jobs in Tech Startups where I felt innovation and automation would be appreciated. I started getting loads of feedback and interviews, interviews I felt were honestly outside of my pay bracket and grade. The Python script gave me confidence, skills and something to talk about, interviewers in some companies really, really value a self-starter who is going to work smarter not harder.

&nbsp;

In the end, I managed to get an Operations analyst role with a tech start-up **getting a massive £27k pay rise.** It's so crazy how it happened to, my manager told me I got the job and asked me how much money I was looking for. I said £45k and she said well actually I want to bring you in on £50k as that's how much people with your skills in this company are paid! Like that is insane and shows how much value the Python skills I had picked up meant and how creating a script means your interviewers really believe that they can invest in you as you will go out of your way to learn new skills to push my role to its limits. 

&nbsp;


**For anyone looking to do automate a task at work here are my key takeaways:**
&nbsp;

1) **DO IT! Even if the company don't implement your automation**, I learnt so much more working on my project than I did watching tutorials or from coding books. You can't beat real-life problems and the motivation to solve the problem is 10x'd when it really matters. Being able to put it on your CV is worth its weight in gold too when it comes to negotiating wages.

&nbsp;

2) **Look to automate something that is completely self-efficient.** Ultimately I had embarrassed my CTO but automating something he and his team should have done years ago, so of course, he wanted to block my script the fact my automation needed to be host on the company website/intranet means he could easily block it by saying his team has too much work to do. Work on things that you control completely, make it hard for them to say no!

&nbsp;

3) **Always use dummy data** don't be stupid like me and put company data on your work laptop and if you do when it comes round to showing your script pls use dummy data and delete the data.

&nbsp;


4) **Don't get your hopes up**, I was so deflated by the rejection and harsh treatment by my CTO but you have to understand that devs and managers often have massive egos and seeing an upstart come in and write code that potentially makes them look bad means that will block your initiative out of spite, jealousy or because they don't trust you. Be prepared for rejection and have adequate responses for reasons why you think they would dismiss the project.

&nbsp;


4) **If your business doesn't value your automation look to move to a tech start-up** tech-startups love automation they will give you the access you need to make a change and enable you rather than block you. Moving to a tech startup is the best move I've ever made and I don't see myself working for a massive corporate entity ever again.

&nbsp;

5) **Don't put your username and password in plain text in your script!** this massively tripped me up and I had no response to my CTO when he called me out on this. Use something like python keyring library to encrypt your login and password so no one can catch you out as they caught me.

&nbsp;

6) **Attach a dollar value to the time saved** this meant that my direct line manager manager couldn't ignore it and could see the value instantly",1626268651.0
Automate your daily tasks with Python,638,iutuq5,learnpython,https://www.reddit.com/r/learnpython/comments/iutuq5/automate_your_daily_tasks_with_python/,287,"Hey.

I recently saw someone advertise that they'd be willing to help some lucky folks with automating their daily tasks.

With 8 years experience under my belt and having worked on numerous projects, I want to give back and help others. After all, that's what makes the world go round.

Please drop below some tasks that you carry out on the daily that could be automated - and, I'll help you.

Edit: there’s a whole bunch of stuff to get through, I’m not ignoring you guys. I’ll get round to you all. I’m working on some stuff now for some people, and even being paid to do it too :D thank you so much for your positive response guys, I’m so glad I can be helping some of you!!",1600381530.0
Going dark,627,147q2ax,learnpython,https://www.reddit.com/r/learnpython/comments/147q2ax/going_dark/,228,"As a developer subreddit, why are we not going dark, and helping support our fellow developers, who get's screwed over by the latest API changes? just asking",1686584472.0
"After 2 months of not getting how things work in python, I just made my first working app! A Morse Code Translator!",629,i2xpkq,learnpython,https://www.reddit.com/r/learnpython/comments/i2xpkq/after_2_months_of_not_getting_how_things_work_in/,51,"Hi, I just want to share my personal project. Lots and lots of referencing I did in here and Tkinter makes me want to pull my hair out. Although it's not my first program, but it's the most stable one I've ever made so far :D.

Github link: https://github.com/bajeebis/Morse-Code-Encoder-Decoder

Please take a look, I've still got a lot to learn so criticisms and feedback are welcome.",1596463866.0
"I wrote a book on Python Regular Expressions, it is FREE through this weekend",617,aevgbi,learnpython,https://www.reddit.com/r/learnpython/comments/aevgbi/i_wrote_a_book_on_python_regular_expressions_it/,94,"Hello!

I've just released my book on Python Regular Expressions and it is free to download till 13-Jan-2019. You can still pay if you wish :)

* e-book link: https://leanpub.com/py_regex/c/P7erPYAm1386
    * you will continue to get free updates in future, you'll need to opt-in to get notification via e-mail
* github repo: https://github.com/learnbyexample/py_regular_expressions

This book would help you learn regular expressions step by step with 200+ examples, from basics to advanced levels. In addition to **re** module that comes with standard library, the 3rd party [regex](https://pypi.org/project/regex/) module is covered as well. Exercises are also included to test your understanding.

**Table of Contents**

1. Preface
2. Why is it needed?
3. Regular Expression modules
4. Anchors
5. Alternation and Grouping
6. Escaping metacharacters
7. Dot metacharacter and Quantifiers
8. Working with matched portions
9. Character class
10. Groupings and backreferences
11. Lookarounds
12. Flags
13. Unicode
14. Miscellaneous
15. Gotchas
16. Further Reading

Hope you find the book useful. I would be grateful for your feedback and suggestions.

Happy learning :)",1547213938.0
"As a beginner, how can I determine if a python module is malicious?",616,i9kwe1,learnpython,https://www.reddit.com/r/learnpython/comments/i9kwe1/as_a_beginner_how_can_i_determine_if_a_python/,72,"I was re-reading an article about two python pip modules actually being malicious and stealing SSH and GPG keys to compromise developer projects. \[[ZDNET Article](https://www.zdnet.com/article/two-malicious-python-libraries-removed-from-pypi/)\]

I also read the [discussion on r/Python](https://www.reddit.com/r/Python/comments/e639nd/two_malicious_python_libraries_caught_stealing/) and the [discussion on r/programming](https://www.reddit.com/r/programming/comments/e5rwit/two_malicious_python_libraries_caught_stealing/). However no one seemed to have asked or explained how to determine if a module is malicious. 

As a beginner, I can't look directly at the raw code of a module and understand everything that is going on but I am always looking at interesting modules from other projects and installing modules suggested by others. So what are some methods to determining if a module is malicious?

Besides monitoring my home network, I'm looking for ways to detect and prevent a malicious module before installing it.

&#x200B;

Also has one of the default libraries in python ever been discovered to be malicious? Every other article talking about malicious Python modules are modules from Pypi.",1597407542.0
"2,000 free sign ups available for the ""Automate the Boring Stuff with Python"" online course.",616,wk4x3w,learnpython,https://www.reddit.com/r/learnpython/comments/wk4x3w/2000_free_sign_ups_available_for_the_automate_the/,74,"**NOTE:** The codes are all used up. [But you can watch the first 15 of the 50 videos for free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW) If you want to buy the rest of the course, the https://inventwithpython.com/automateudemy link redirects to a discount code that lowers the price to $13. The course follows the info in the book, which is for free in full at https://automatetheboringstuff.com/

If you want to learn to code, I've released 2,000 free sign ups for my course following my Automate the Boring Stuff with Python book (each has 1,000 sign ups, use the other one if one is sold out):

Udemy has changed their promo code and severely limited the number of sign ups I can provide each month, so only sign up if you are reasonably certain you can eventually finish the course. [The first 15 of the course's 50 videos are free on YouTube if you want to preview them.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

Instead of having unlimited free sign ups for 6 days per month, Udemy only lets me make 2,000 free sign ups per month. >:(

**NOTE: Be sure to BUY the course for $0, and not sign up for Udemy's subscription plan. The subscription plan is free for the first seven days and then they charge you. It's selected by default. If you are on a laptop and can't click the BUY checkbox, try shrinking the browser window. Some have reported it works in mobile view.**

Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.

Some people in India and South Africa get a **""The coupon has exceeded it's maximum possible redemptions""** error message. [Udemy advises that you contact their support if you have difficulty applying coupon codes, so click here to go to the contact form.](https://support.udemy.com/hc/en-us/requests/new?type=student)

**I'm also working on another Udemy course** that follows my recent book ""Beyond the Basic Stuff with Python"". So far I have [the first 15 of the planned 56 videos done. You can watch them for free on YouTube.](https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&index=1)

Side note: My latest book, [The Big Book of Small Python Projects](https://inventwithpython.com/bigbookpython/), is out. It's a collection of short but complete games, animations, simulations, and other programming projects. They're more than code snippets, but also simple enough for beginners/intermediates to read the source code of to figure out how they work. The book is released under a Creative Commons license, so it's free to read online. (I'll be uploading it this week when I get the time.) The projects come from this [git repo](https://github.com/asweigart/pythonstdiogames).

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",1660055721.0
I wrote my first ever program and I can't stop looking at it.,613,fvxvf5,learnpython,https://www.reddit.com/r/learnpython/comments/fvxvf5/i_wrote_my_first_ever_program_and_i_cant_stop/,90,"I call this one the ""Do you want to see the 99 Bottles of Beer song?"" program.

    bobotw = "" bottles of beer on the wall""
    bob = "" bottles of beer.""
    take = ""Take one down and pass it around, ""
    beer = 99

    def on_wall(beer):
        if beer == 0:
            print(""No more"" + bobotw + "", no more"" + bob)
            print(""Go to the store and buy some more, 99"" + bobotw + ""."")
        elif beer == 1:
            print(str(beer) + "" bottle of beer on the wall, "" + str(beer) + "" bottle of beer."")
            beer -= 1
            print(take + ""no more"" + bobotw + ""."")
            on_wall(beer)
        elif beer == 2:
            print(str(beer) + bobotw + "", "" + str(beer) + bob)
            beer -= 1
            print(take + ""only one bottle of beer on the wall."")
            on_wall(beer)
        else:
            print(str(beer) + bobotw + "", "" + str(beer) + bob)
            beer -= 1
            print(take + str(beer) + bobotw + ""."")
            on_wall(beer)

    answer = input(""Do you want to see the Bottles of Beer song? (y/n) : "")

    if answer.lower() == ""y"":
        on_wall(beer)
    elif answer.lower() == ""n"":
        print(""Bollocks to ya then."")
    else:
        print(""It's y for yes, n for no."")



There may be more elegant solutions, but this one is mine.",1586176152.0
I didn’t know anything about programming three months ago and I just released my first official Python tool at my job,613,bhccr1,learnpython,https://www.reddit.com/r/learnpython/comments/bhccr1/i_didnt_know_anything_about_programming_three/,100,"I came into a great job doing tech support and didn’t know anything about programming. A month in, I saw they were doing some things manually like reading through “logs” for debugging and saw an opportunity. I told my boss of one month maybe we can automate some of this process. I didn’t give him any hard promises but said something to the effect of “let me see what I can do.”  I taught myself python for two and a half months and released a tool at work which does in 20 seconds, what used to take us sometimes up to an hour. 

Aside from everyone being super impressed and cutting down our work load by huge margins(this freeing up time for more important things), I believe it sets me apart from our other workers and shows they made a good choice bringing in new blood. A new realization has also now set in, I LOVE programming in Python. While I don’t get to program every single day due to having a family, I do dedicate a few hours a week to it and am exploring becoming a developer. 

Cheers everyone and don’t give up!

Edit

There seems to be a lot of interest in how I learned. 

I started out doing the two Microsoft classes on EdX. Every time I learned something new I immediately saw a function for it in my program. Slowly I implemented it into my program. It’s the program by the bald guy, I forget his name. He’s very boring unfortunately, but I’m very grateful to him for the information. I’m still very much a beginner programmer, but the biggest thing I have seen that helps is actually building something which solves a problem and you see how it functions by controlling the input and output. I also minimally looked at Automate the Boring Stuff, but I find that book also super useful. Another huge resource is actually reading the manuals and examples from Programiz. For example if the manual says A+B should equal C but I’m getting D then sit down and examine where I went awry. Sometimes I was stuck on a problem for a week or in one extreme case two weeks but I always figured it out and didn’t move on until I understood why I was wrong. 

Also Reddit was a huge resource.",1556218374.0
Some Lessons from 16+ Years of Development,611,aqa74u,learnpython,https://www.reddit.com/r/learnpython/comments/aqa74u/some_lessons_from_16_years_of_development/,124,"Inspired by /u/ skiutoss 's post, I thought I'd add my own lessons.

Some other people probably got more from their years than I did - I started young(12-14) and I'm stubborn. But I somehow managed to bootstrap a 25+ person company, and have avoided working for anyone but myself and a few clients since I was 15. The only office I've really set foot in is the one I ran. Here are some things I've learned.

Most of this is related to SAAS services written in python.

* Your best programs and projects will be solving problems that you yourself have. If you're lucky, other people will have that problem too. If you're really lucky, they'll pay for your solution.
     * Your best libraries will be solving problems you have while programming. Write them, learn them, love them.

* Your past work is your best resource.

   * Because of how you code, you're likely to encounter similar issues. Standing examples of ""how I did this"" are tremendous resources.

   * Especially if you're a contract worker, developing your own helper libraries that each contract explicitly gives you the rights to (I offer a transferable license to my prior work, and myself ownership) is worth it's weight in gold. It grows and grows and grows.

* Don't re-invent the wheel, but don't use a dumptruck to move a toothpick just because it exists.

* Coding structure (classes, inheritance, etc) are not for your software as-is, it's for what it will become.
   * You will always be hung from your largest monolithic function.
   * When one function is made to do X and you already have a worse function to do X, the old function is to be deleted immediately.
* Misleading variable names are to be exterminated on sight.

* Consistent variable names will save you huge amounts of time, reduce bugs, and save time for coders you onboard.
     * Example: product_title in the function that determines the title, product_title in the dict it writes to a queue, product_title in the database, product_title in the json from the ajax call from the website, product_title as the javascript variable storing it on the site.

* Every piece of code should be written with a thought to how hard it will be to replace some day.

    * This is where well defined objects, microservices, and redis queues of tasks/objects shine.

* If you can't code to scale(because time constraints), code to buy yourself time to do so in the future.
    * As an example: If you are directly writing to a SQL database and it has the potential to be slow in the future, write the needed data to a redis queue and have workers execute it. When it starts to get hairy you can tick up the number of threads while you figure out how to speed up the DB or migrate to a new one.


* ""Clever"" code should be readable. If it's not, it's a detriment not a benefit. Coding is not your opportunity to show how much smarter you are than everyone else(who will have to maintain your shit)

* No, you won't remember. TODO lists and comments are vital.


* It is rare that you have a legitimate reason to be handwriting SQL queries.

* You will always need a dev environment. Develop scripts for setting them up.

* One of the greatest skills a programmer can have(especially one who works on early stage start-ups) is figuring out which corners *can* and *can't* be cut, and setting up the project to be easily fixed in the future.


* The less billing code you are writing, the better.
    * Significant issues in billing and backups are unforgivable tier errors. Clients and users will forgive downtime, they will not forgive their card being billed at random.

    * There are companies who handle things like subscriptions. Use them. Do not write your own.

* Don't just *have* backups, have an environment for testing those backups. Know how you're going to pause new incoming data when they're applied. Have a system that blows your phone the fuck up if they fail.
    * In many cases, a failed backup is a company-ender. It's that serious.

    * A master/slave configuration is not a backup. It will save you from hard drives roasting, not a sloppy ""UPDATE"" query.

    * Come to terms with the mortality of your hardware.

* Do not trust user input. Not their cookie, not their form input, and *never* their uploads. Javascript validation is for telling the user their input is wrong, not for keeping your data clean. That is done server side.",1550085093.0
"A beginner's take on Codewars, and why you should be using it.",613,q7hgm8,learnpython,https://www.reddit.com/r/learnpython/comments/q7hgm8/a_beginners_take_on_codewars_and_why_you_should/,68,"I'm a beginner -  I've only gone through the first eight chapters of Automate The Boring Stuff.

I've often seen Codewars mentioned on here, but I was far too intimidated to even think of solving problems with the little knowledge I had. But I also didn't feel like diving into the next chapter of ATBS so gave it a shot.

I've learned an amazing amount in the past week I've been solving these problems (or katas, as they're called there).

So if you're a beginner, here is my advice from a fellow n00b:

\- Don't be intimidated! The katas start off fairly easy; if you've been able to solve the practice projects from ATBS then the easiest katas shouldn't pose too much of a challenge

\-  It feels really good to apply your knowledge and solve real problems. It's a great middle step between learning syntax and starting to create your own programs.

\- You'll learn a lot. I know not everyone follows ATBS, but you'll learn a lot of really interesting , easier, and more intuitive ways to rework your code that go beyond that book. I'm pretty sure the same can be said for most introductory courses as well.  Once you've completed your kata, you can view solutions from other users.

\- Don't be put off by the answers performed in one line. At first it annoyed me and made me think I'm doing an absolutely terrible job if my 50 lines of code can be condensed into one, but apparently it's just something called code golfing, where brevity is prioritized over readability.  I find it often better to sort answers by ""Best Practice"" instead of ""Clever"" to get more helpful answers. Granted, you should look for ways to make your code more efficient, but don't think you have to strive to condense it into a single, hard to understand line.

\- After you've completed a kata, look through the solutions and strive to improve at least one aspect of your own answer, even if it's something small. For example, instead of writing out \[1,2,3,4,5,6,7,8,9,10\], I recently learned this can be also done with *list(range(1,11)).*

\- Unless you love to make your eyeballs scream in pain like a vampire exposed to sunlight,  don't press the crescent moon icon at the top.",1634149858.0
PSA: Kite is a viral plugin that kills your system,613,pnbogm,learnpython,https://www.reddit.com/r/learnpython/comments/pnbogm/psa_kite_is_a_viral_plugin_that_kills_your_system/,31,"x-posting from r/python:

I am doing a PSA:

Please be extra careful when you see Kite (the program auto-completor app). This app is atrociously bad for performance, it spreads to all of your system (and I mean ALL of your system), and the developers intentionally made it hard for you to remove it. I made the mistake of installing it when I was trying out Spyder IDE. I didn't realize this app installed itself across all of my editors, including neovim. I started noticing that my neovim would get several seconds of hiccup when I was running python REPL, which had never happened before. Soon my Linux system started experiencing severe hiccup as well. Then I did some profiling and found out that Kite was making background process calls without my consent. The worst part yet is they made it nearly impossible for you uninstall it, not unless you download their shady app manager or make a curl call to a completely unknown api server just to uninstall apps on your computer. I don't even want to know what kind of personal information / data that they were stealing from my computer. I fail to see how Kite is different from a virus. Please use extra caution when going through IDE setup as something like Kite can easily creep in and contaminate your whole system just like that. To the developers of Spyder and VSCode and other IDEs, please take active step in banning an app like Kite that severely infringes upon the privacy and right of their users. By promoting this app as an extension, you are potentially endangering millions of your users!",1631523410.0
Have you ever had this feeling where you feel like you forgot everything in programming?,612,l3md9b,learnpython,https://www.reddit.com/r/learnpython/comments/l3md9b/have_you_ever_had_this_feeling_where_you_feel/,81,"I just want to know because when I was doing programming exercises for functions in Python, I literally felt like I forgot everything.",1611441706.0
"Is there anyone else on here who doesn’t have a degree in anything CS related (or that doesn’t have any college degree) and started learning Python later than their 20s, and is enjoying it as much as I am?",617,n2668d,learnpython,https://www.reddit.com/r/learnpython/comments/n2668d/is_there_anyone_else_on_here_who_doesnt_have_a/,183,"Let me know. I’d like to join forces, maybe.

EDIT: OK wow so this exploded. I really wasn’t expecting this many people to be in such a similar position, but I guess I figured that if I’m here then that makes it just as likely for anyone else to be, and one of us just had to raise our hand.

I love programming. I’ve been a musician most of my life and I thought that was the most fulfilling thing at one point, but creating things in Python feels like the perfect combination of art and science, and it’s a challenge I keep coming back to.

It has made me smarter and it forces me to see problems in a new light. Thank you all for your stories. I’m going to try to reply to each of you, but if I don’t say something direct then please know it’s not out of disrespect.

Thank you all again. Keep moving forward, always.

EDIT: A little about me. I’m a recruiter for technology (no, I’m not doing this to recruit you) and I started learning Python because I wanted to get better at my job. Historically, the way I’ve done that is by learning the language of my people. Literally, at one point I was a recruiter for a company that required me to learn Spanish, so I did. Working in Tech, I didn’t want to be one of those recruiters who had no idea what they were talking about, so I looked into the languages and Python stood out right away. I liked the fact that it was open source and that you can do so much complex stuff with it (and it seems to be one of the top go-to languages for security, data science, machine learning and finance), so I watched a ton of videos and latched on right away.

I’m 34 and I’m about 1.5 years in. I love it. I’ve been married for 7 years and we now have an 8-month old daughter. The more Python I learn, the more successful I’ve become as a recruiter, and I think it’s because I stand out as someone who actually understands what devs do and I respect them for it, and I fight for my people. Cut to what I’m working on in my feee time and I’m always learning but I’m building something real: a crypto trading bot. I’m connecting to an API and parsing JSON data and utilizing class methods... I’ve never felt this sharp before and I don’t know if I’ll ever make any money with this but I know I never want to give it up.

Thank you all. I encourage each of you to connect with me on here. Maybe we can start a Python After 30 chat or something.",1619825403.0
PSA: There are free online university courses on Python,605,on8v8k,learnpython,https://www.reddit.com/r/learnpython/comments/on8v8k/psa_there_are_free_online_university_courses_on/,58,"Found a really interesting organization called **edX** and it aims to provide online courses from universities like Harvard, MIT, etc. I'm currently enrolled in the course ""Python for Data Science""and it covers the structure and processes of using Python to gather data from sources, clean up the data (like remove duplicate entries and assign close enough values to null entries), create a machine model and test for accuracy, then analyze data and present an appropriate visual chart with results. I really enjoyed automate boring stuff but if anyone wants some extra free quality lessons try [edX](https://www.edx.org/) and search for Python",1626678112.0
I wrote my first program by myself.,605,hm48uo,learnpython,https://www.reddit.com/r/learnpython/comments/hm48uo/i_wrote_my_first_program_by_myself/,88,"I've been learning python for about 2 days, and this is my first independent program.

It's a *very very* simple short survey, that only took about 10 minutes, but I am still kinda proud of it

    print('PERSONAL SURVEY:')
    
    name = input('What is your name? ')
    
    if len(name) < 3:
     print('ERROR: Name too short; must exceed 3 characters')
    elif len(name) > 50:
     print('ERROR: Name too long; must not exceed 50 characters')
    else:
     print('Nice name')
    
    favcolor = input(""What's your favorite color? "")
    
    if len(favcolor) <= 2:
     print('ERROR: Word too short; must exceed 2 characters')
    elif len(favcolor) > 50:
     print('ERROR: Word too long; must not exceed 50 characters')
    else:
     print('That is a nice color!')
    
    age = input('How old are you? ')
    
    if int(age) < 10:
     print(""Wow, you're quite young!"")
    elif int(age) > 60 and int(age) <= 122:
     print(""Wow, you're quite old!"")
    elif int(age) > 122:
     print('Amazing! You are the oldest person in history! Congrats!')
    elif int(age) >= 14 and int(age) <= 18:
     print('Really? You look like a college student!')
    elif int(age) >= 10 and int(age) <= 13:
     print('Really? You look like a 10th grader!')
    else:
     print('Really? No way! You look younger than that, could have fooled me!')
    
    print(f'''Your name is {name}, your favorite color is {favcolor}, and you are {age} years old.
    
    *THIS CONCLUDES THE PERSONAL SURVEY. HAVE A NICE DAY*''')

Let me know of any critiques you have or any corrections you could suggest. Tysm <3",1594026402.0
90% Python in 90 minutes,605,661o5a,learnpython,https://www.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/,43,"Came across [this link](https://www.slideshare.net/mobile/MattHarrison4/learn-90).

Though you may like it.",1492505617.0
What I Wish I Knew Before Picking Up Python,602,ieul5l,learnpython,https://www.reddit.com/r/learnpython/comments/ieul5l/what_i_wish_i_knew_before_picking_up_python/,99," 

Programming skills are important. Functions, data structures, etc...With so many free resources, the number of learning options can be overwhelming. Worse yet, I think there can be a lot of uncertainty going from learning to nabbing a job where you code.

As I've considered my own career, I remember struggling a lot with what to do as I was learning programming concepts like classes, functions, or recursion. For me, the big goal was always a job. Early on, I didn't feel like I had enough to offer a company. But I overcame that lack of experience and landed a technical role with zero years of experience. Here are a few recommendations based on what I did:

* Solve real world problems outside of your learning context. So many courses and tutorials are meant to make you feel accomplished. But the way you'll continue to learn is by solving real world problems outside of your learning environment.
* Talk the talk. Okay, you need to be able to follow your talk with results. But a lot of getting a job involves being able to talk about your skills in a format the company is looking for. Otherwise, they won't recognize you possess the skills they're looking for.
* Get creative by showcasing your projects. Even if your projects were apart of a tutorial, showcase it. I saw a great way of doing this on a guy's LinkedIn profile the other day. He was enrolled in a coding boot camp, but listed his projects as separate experiences on LinkedIn. Some recruiters will be rigid with only reaching out to people with full-time work experience, but some recruiters just want someone with the skills their company is looking for.

What are your thoughts? Agree/Disagree?",1598145886.0
Can we get a pinned post for Python learning resources?,606,hus0n0,learnpython,https://www.reddit.com/r/learnpython/comments/hus0n0/can_we_get_a_pinned_post_for_python_learning/,28,"Hello everyone,

I see around 20 posts a day minimum (and I'm only on for a few hours) regarding resources for learning python, for learning machine learning, etc.

I think one of the reasons for this may be, there are just sooo many posts regarding this, it is difficult to pin one down as ""a good resource/good answer"".

These posts however clutter the page, and the answers are always repititious (it's the same books/courses over and over again). I'm not an admin, but I was thinking we could get maybe a poll going for the ""best/most useful resources for learning python"" or for machine learning as well, have it pinned, and then refer everyone who asks the question ""I'm a beginner/newbie in python, what books should I read/where should I start, etc."" to said pinned post.

I think this will not only help those looking for a clear answer (rather than scouring the web through thousands of similar questions, they now have 1 nice compiled list), and help reduce the clutter/repitition of the posts on this subreddit.  


To address the points below:   
1) Yes, the wiki sidebar does exist, although most people don't look at that (otherwise they wouldn't ask all the time)

2) That contains a lot of info. I'm thinking we need a consolidated list, only a handful of items, sorted by the users (for further reading, they can look there). There are so many books, how does one sort by most useful/best .

3) This still would not eliminate the problem of frequent posts. I'm thinking at the end of the day, we could outright just eliminate these questions altogether (i.e. have a bot either prune/prevent these types of posts). Having it pinned would mean everyone sees it (versus the rules which I doubt anyone looks at)",1595273722.0
"Been using Python for 3 years, never used a Class.",601,11sebbg,learnpython,https://www.reddit.com/r/learnpython/comments/11sebbg/been_using_python_for_3_years_never_used_a_class/,206,"This is not a brag, this is a call for help. I've never been able to get my head around what a Class is. People tell me it's a container for functions, then why can't you just use the functions without a class? I just don't understand the concept of a class and why I would use one. Could someone please help? I've watched numerous videos that just make Classes seem like glorified variables to me.",1678925978.0
Learning Python for the 5th time in 10 years,598,l558rn,learnpython,https://www.reddit.com/r/learnpython/comments/l558rn/learning_python_for_the_5th_time_in_10_years/,56,"Each time I learn, I progress further than the last time. Then I create the program(s) that I need, which was why I started to learn Python in the first place. Once I have the program, I have no further use for Python, and forget everything. This is a repeating cycle.

Now I need another program (highly customized, so there is nothing out there that I can use), so the learning starts again.

I wonder where I would be now, Python-wise, if I had persisted with it the first time. Anyway, feel free to join me re-learning Python for the n-th time. :)

EDIT:

Thanks for all the replies. :)

I've been using the very excellent 'Automate The Boring Stuff"" book (free online). I've been using this book, in addition to the author's other book (Cracking Codes with Python) for the past 10 years as a starting point.

[https://automatetheboringstuff.com/2e/](https://automatetheboringstuff.com/2e/)

The project that I am working on has to do with logistics. My friend wants to start a small logistics company in Asia (some countries in asia have very fragmented logistics ecosystems).

He wants to know the best route (in terms of cost/speed) to send parcels from one asian city/town to another asian city/town. The parcels will travel by train, plane, boat, courier etc.  For example, to send a parcel from Hanoi in Vietnam to Manilla in the Philippines.

He will use different companies for each stage of the journey of the parcel. Each company will have price/route/distance info on their website, in excel spreadsheets, word documents, can send him the info via email and text message etc.

So basically, he has to pull all the information (by scraping websites, scanning emails/text messages/spreadsheets/text documents etc. And give him the cheapeast/quickest route at every stage of the journey. There are other things that my program needs to do, but I don't have the time or inclination to type it all out.

Previously, I've been able to use python to scrape websites and parse excel spreadsheets/word documents and email. I don't think parsing text message will be difficult because Python has a Twilio library, and setting up a Twilio account seems simple (and cheap).

My Python editor of choice has always been Microsoft Visual Studio (not Visual Studio Code). I am currently using Microsoft Visual Studio Community 2019.

That's all from me.  Thanks for the awards badges. :)

&#x200B;",1611632135.0
Python programming made me better at and more interested in math,599,fu5f8d,learnpython,https://www.reddit.com/r/learnpython/comments/fu5f8d/python_programming_made_me_better_at_and_more/,62,"I was never really good at math, in fact i hate math. Ironically, I really love computers, and most people always say programming computers requires loads of math skills, and tbh i think thats kind of a yes and no type of thing. 

I dropped out of high school and always failed math classes but after getting my GED and just wanting to find a career and being obsessed with computers, I decided i might as well get good at that, but learning to code was so hard, it made no since to me at all, than i just kept trying to learn python. 

ive been trying to learn python for literally years, i work fulltime and am a full time college student and im just now becoming mediocre at python, but im pretty proud lol. 

what I noticed though is as i learned how python works, how the step by step instructions work, how the logic works, it actually helped me become better at doing math, and in turn doing the math helped me get better at python, im just talking college algebra though, but thats pretty amazing thinking i went from failing high school math, and than passing college level math courses, I didnt really even understand what variables were, like in algebra, assigning values to letters and symbols? wtf

Than i learned how python works and something just clicked, I was actually INTERESTED, in computer code, so learning concepts for it, no matter how hard (because i am kinda dumb) was worth it to me because i wanted to be good with computers lol. The programming concepts and math concepts for school went hand in hand, I mean I even program simple scripts to do math equations for me, because what is a mathematical formula? Its (to me, a simple guy really) a step by step instruction on how to solve an equation. This is really prevalent in algebra, im not familiar with other types of mathematics though, but think of the formula step by step, how you do the arithmetic, its easy to make python do exactly how your brain does it, step by step, line by line. 

what im trying to figure out though, is what mathematical concepts should i study more of to be a better coder? In college i was forced to start out at a basic algebra level cause i was so bad at math, but as i learned to code i went from basic algebra, to a technical math class that im actually passing, and I have one remaining math class that im required to take to get my dual degrees, what kind of math should i study for my last class? I actually have a broad choice, but i thought of taking college level algebra,

I assumed college algebra would probably help me the best as a programmer, I also plan to take python courses as my programming language of choice for my cyber security degree! (we have a choice of like 20 programming languages, after you take computational thinking first.) 

what mathematical concepts really helped you understand python or code in general?",1585906739.0
Will coding endlessly actually make you better and better at Python?,599,eim1x4,learnpython,https://www.reddit.com/r/learnpython/comments/eim1x4/will_coding_endlessly_actually_make_you_better/,159,"By now I know pretty much all the basics and things like generators, list comps, object oriented programming, magic methods and etc. But I see people on github writing extremely compilcated code and stuff that just goes right over my head, and I wonder how they got so good. When I look in this subreddit, most of the people just say code, code, code. I completely agree that helps in the beginning stages when you try to grasp the basics of python, it helped me alot too. But I don't see how you can continue to improve by only coding. Cause coding only reinforces and implements what you already know. Is just coding the projects you want to do, gonna get you up to the level that the professionals are at? How did they get so good? I kinda feel like I’ve hit a dead end and don’t even know what to do anymore. I'd like to know people's opinion on this, and what it really takes to become a professional python developer, or even a good programmer as a whole whether it be python or not.",1577905034.0
Python 201 Book is Free for 48 hours,597,5814lw,learnpython,https://www.reddit.com/r/learnpython/comments/5814lw/python_201_book_is_free_for_48_hours/,135,"I decided it would be fun to give my latest book away for free for 48 hours. So starting today, you can get **Python 201: Intermediate Python** free through [Gumroad](https://gumroad.com/l/py201#) or [Leanpub](http://leanpub.com/python201/c/201free). 

If you go with Gumroad, then you will need to use the following offer code: **201free**. Note that if you want to receive updates to the book, you will want to create an account and add the book to your library. 

I currently support the following digital formats: PDF, epub and mobi

Note: Repost from [/r/Python!](https://www.reddit.com/r/Python/comments/57xaud/python_201_book_is_free_for_48_hours/)

You might also want to check out my blog which has lots of fun Python tutorials and links to my other books: http://www.blog.pythonlibrary.org/",1476753521.0
"From a Beginner to Beginners: Dealing with ""First Job Imposter Syndrome"", ""What project should I make?"", and an OOP Epiphany.",592,mez5jk,learnpython,https://www.reddit.com/r/learnpython/comments/mez5jk/from_a_beginner_to_beginners_dealing_with_first/,69,"Hello all,

Continuation of the ""From a Beginner to Beginners"" series where I document my learning journey through Python.  Skip to ""Actual Content"" if you want to skip the boring background stuff.

**Background**

I'm a, experienced traditional scientist (Chemistry, specifically synthesis on all scales) who went from zero coding experience to a full time programming position in 6-8 months via self taught material.  I taught myself Python, SQL, HTML, and CSS with Python being my main language.  I am in my 30's.

In total, I spent less than £100 on courses.  Here's a list:

* Automate the Boring Stuff with Python Programming (~£20, the creator often gives out free codes for his Udemy course on this subreddit)

* Complete Python Developer in 2021: Zero to Mastery (~£20)

* Complete Machine Learning & Data Science Bootcamp 2021 (~£20)

* Datacamp: Introduction to SQL (Free)

* Codewars SQL problems (Free)

I spent time building my own projects such as a program which automates mining cryptocurrency when my electricity is cheaper, email spam bots specifically targetting scammers, job application bot for LinkedIn (less than successful), a password manager, and my own website.

After that, I went into freelancing where I exclusively took on webscraping jobs.

**What I do now**

I work full time as a Data Engineer in the financial services sector in the UK.  My job involves turning data collection jobs which were manually carried out every day/month/other time period into automated pipelines using Python and cloud architecture.

**Note**

There were quite a lot of contributing factors into getting a job with the two most prominent being Data Engineeering is an absolutely booming industry right now and, of course, being in the right place at the right time aka lucky.  This is by no means a blueprint on how to get employed, this is my personal experience and yours may differ.

**Overview**

In this post we're going to deal the topics mentioned in the title.  Perhaps you're somebody who is asking yourself ""Am I really good enough?"" and a little nervous to enter the industry or you're just starting out and want to know what it's like taking on a career transition.  Either way, I hope this post has some value to you.

For those interested, here are the previous entries from the series in chronological order:

* [Going from print('Hello World)' to tutorial hell to building my own ""data pipeline""](https://www.reddit.com/r/learnpython/comments/jwgatc/going_from_printhello_world_to_tutorial_hell_to/)

* [From a Beginner to Beginners: From building my own data pipeline to my first technical interview.](https://www.reddit.com/r/learnpython/comments/l7drly/from_a_beginner_to_beginners_from_building_my_own/)

* [From print('Hello World!') to Tutorial Hell to Getting my First Job!](https://www.reddit.com/r/learnprogramming/comments/lmi0zp/from_a_beginner_to_beginners_from_printhello/)

**Actual Content**

**""But how do I know I'm good enough...?""**

This is all too common as self taught programmers as we often lack the foundation of a lot of computer science principles which CS grads typically have.  The answer to the question is ""You won't know until you try"" which sounds like a cop out, but it's true.  If you are experienced and feeling a little unsure about if you're a good enough applicant, I would invite you to be brave at this moment and throw out a few applications.

It was 4 weeks until I start my new job.  The first week of being offered it, I was on an adrenaline high.  I couldn't sleep and just wanted to get working.  Week two, I was getting a little nervous as I began overthinking with thoughts such as ""What if they got me confused with somebody else? Maybe they overestimated my skill level? I don't really even get OOP! WTF AM I DOING??"".  

By the third week, I was figuratively shitting myself going into this job.  

Although after I began, it really wasn't that bad.  There was a bit of a learning curve to learn serverless architecture although the principles are really the same as doing your own projects - version control via github, comment where necessary, and make sure your code is robust and easy to read i.e. no one letter variables, functions where necessary, and just make it so somebody who can at least read Python code can understand your logic.

**Project Based Learning is King**

If you can make your own projects, you're off to a good start.  If you make your own projects and publish them to github, even better because you'd be then writing code under the assumption other people are going to be able to see it so if you churn out something which works but is completely illegible, it can speak volumes to a potential employer.  I honestly think I'd be struggling in this job if I hadn't made any of my own projects or took any of the very underpaid jobs during freelancing.

From my personal experience in industry, a lot of isn't knowing the documentation in and out.  All of it is being able to justify why you're doing what you're doing and being able to get results.  This is where project based learning comes in - doing course after course will not teach you these abilities and exactly why if you've been learning for a bit and you're asking yourself, ""But what project should I do?"" or ""How do I make projects?"" you should make something.  Anything.  Challenge yourself to make *something* without copying an entire tutorial from start to finish.  It will suck, it will be hard, but you won't become a better programmer without feeling failure, and ultimately, success.

**When to OOP**

This is a fairly short bit about OOP because it's one of Python's biggest strengths although, like many others, I found myself wanting to use OOP for the sake of using OOP rather than really getting the point of it.

Long story short, OOP, like all coding paradigms, is situational.  Sometimes, procedural code is totally fine because that's all you need.  Don't feel bad if you're building something simple for your own use and it doesn't use OOP.

If you need something which is scalable and can be reused, use OOP.

As always, questions are welcome and thank you for reading.  Hope you enjoy!",1616928452.0
"2,000 free sign ups available for the ""Automate the Boring Stuff with Python"" online course. (Oct 2022)",595,xtxy8j,learnpython,https://www.reddit.com/r/learnpython/comments/xtxy8j/2000_free_sign_ups_available_for_the_automate_the/,48,"**UPDATE:** The sign ups have run out. You can still find the [first 15 videos of the 50 video course on YouTube for free.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW) Also, check out my new book with programming exercises for beginners [for free](https://inventwithpython.com/pythongently/) or as a [99 cent ebook](https://www.amazon.com/Python-Programming-Exercises-Gently-Explained-ebook/dp/B0BGYJ7G6T/).

If you want to learn to code, I've released 2,000 free sign ups for my course following my Automate the Boring Stuff with Python book (each has 1,000 sign ups, use the other one if one is sold out): 

~~https:// udemy. com/course/automate/?couponCode=OCT2022FREE~~

~~https:// udemy. com/course/automate/?couponCode=OCT2022FREE2~~

Udemy has changed their promo code and severely limited the number of sign ups I can provide each month, so only sign up if you are reasonably certain you can eventually finish the course. [The first 15 of the course's 50 videos are free on YouTube if you want to preview them.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

Instead of having unlimited free sign ups for 6 days per month, Udemy only lets me make 2,000 free sign ups per month. >:(

**NOTE: Be sure to BUY the course for $0, and not sign up for Udemy's subscription plan. The subscription plan is free for the first seven days and then they charge you. It's selected by default. If you are on a laptop and can't click the BUY checkbox, try shrinking the browser window. Some have reported it works in mobile view.**

Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.

Some people in India and South Africa get a **""The coupon has exceeded it's maximum possible redemptions""** error message. [Udemy advises that you contact their support if you have difficulty applying coupon codes, so click here to go to the contact form.](https://support.udemy.com/hc/en-us/requests/new?type=student)

**I'm also working on another Udemy course** that follows my recent book ""Beyond the Basic Stuff with Python"". So far I have [the first 15 of the planned 56 videos done. You can watch them for free on YouTube.](https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&index=1)

Side note: My latest book, [The Big Book of Small Python Projects](https://inventwithpython.com/bigbookpython/), is out. It's a collection of short but complete games, animations, simulations, and other programming projects. They're more than code snippets, but also simple enough for beginners/intermediates to read the source code of to figure out how they work. The book is released under a Creative Commons license, so it's free to read online. (I'll be uploading it this week when I get the time.) The projects come from this [git repo](https://github.com/asweigart/pythonstdiogames).

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",1664740113.0
I know the basics of Python. What to learn next to be employable in 2 years?,592,ne4w3l,learnpython,https://www.reddit.com/r/learnpython/comments/ne4w3l/i_know_the_basics_of_python_what_to_learn_next_to/,167,"I've completed freecodecamp's 5 hr video on Basics of Python. I didn't binge through it. I completed it in 20 days doing problems on what topic was being covered. Now I have a fairly decent understanding of Python even though I still don't understand what's being said in this subreddit sometimes.

Now I want to pursue a particular stream in Python and be employable in 2 years right when I graduate. I thought of going into data science and Machine Learning but browsing through those subs I realised that they are very vague on where to start learning them. They also seem very math intensive and boring.

I am willing to spend very long hours learning something but I want it to be relevant enough to the techscape so that I can be employable with a good salary.",1621220035.0
"2,000 free sign ups available for the ""Automate the Boring Stuff with Python"" online course. (Dec 2022)",591,zi059m,learnpython,https://www.reddit.com/r/learnpython/comments/zi059m/2000_free_sign_ups_available_for_the_automate_the/,53,"If you want to learn to code, I've released 2,000 free sign ups for my course following my Automate the Boring Stuff with Python book (each has 1,000 sign ups, use the other one if one is sold out): 

https://udemy.com/course/automate/?couponCode=DEC2022FREE

https://udemy.com/course/automate/?couponCode=DEC2022FREE2

Udemy has changed their promo code and severely limited the number of sign ups I can provide each month, so only sign up if you are reasonably certain you can eventually finish the course. [The first 15 of the course's 50 videos are free on YouTube if you want to preview them.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

YOU CAN ALSO WATCH THE VIDEOS WITHOUT SIGNING UP FOR THE COURSE. All of the videos on the course webpage have ""preview"" turned on. Scroll down to find and click ""Expand All Sections"" and then click the preview link. You won't have access to the forums and other materials, but you can watch the videos.

**NOTE: Be sure to BUY the course for $0, and not sign up for Udemy's subscription plan. The subscription plan is free for the first seven days and then they charge you. It's selected by default. If you are on a laptop and can't click the BUY checkbox, try shrinking the browser window. Some have reported it works in mobile view.**

Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.

Some people in India and South Africa get a **""The coupon has exceeded it's maximum possible redemptions""** error message. [Udemy advises that you contact their support if you have difficulty applying coupon codes, so click here to go to the contact form.](https://support.udemy.com/hc/en-us/requests/new?type=student) If you have a VPN service, try to sign up from a North American or European proxy.

**I'm also working on another Udemy course** that follows my recent book ""Beyond the Basic Stuff with Python"". So far I have [the first 15 of the planned 56 videos done. You can watch them for free on YouTube.](https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&index=1)

Side note: My latest book, Python Programming Exercises Gently Explained is a set of 42 programming exercises for beginners [for free](https://inventwithpython.com/pythongently/) or as a [99 cent ebook](https://www.amazon.com/Python-Programming-Exercises-Gently-Explained-ebook/dp/B0BGYJ7G6T/).


**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",1670698160.0
"FINALLY Deployed a Model to production, it only took 11 Months!!!!!",589,lez7lg,learnpython,https://www.reddit.com/r/learnpython/comments/lez7lg/finally_deployed_a_model_to_production_it_only/,34,"I've been programming in python for about 2 years now, and I wanted to learn how to deploy a machine learning model in a production system. I thought how hard could it be???? It should only take me about 3 weeks, at the most, to learn how to do it, and boy was I wrong!!!!!! I didn't just want to take a course, I wanted to do something from scratch, and learn it myself since that's the advice the sub often preaches. 

The project that I decided to focus on using a machine to live stream audio from the web browser and generate predictions. Specifically wanted to generate predictions on gender, age, and country of origin. 

When I started this project I had no idea how to do it, along the way I ended up learning about:

&#x200B;

* Machine Learning Pipeline, and experimentations
* Containerization and deployment using Docker, and Kubernetes
* Continuous deployment and integration with Circle CI
* Web Design
* Javascript, HTML, and CSS
* Socket programming and API
* Flask
* DNS and Cloudflare
* NGINX
* Bash scripting
* Google Cloud
* Digital Ocean
* Heroku
* Unit Testing, Integration testing
* Linux 

Who knew there was so much involved in a deployment. I'm not going to lie, it was very painful, and it took me a full 11 months to get it to work. I was stuck on 1 problem: how to stream audio in real-time and pass it through a socket API in real-time, for 5 months. I did feel like giving up, especially since it wasn't a requirement for my job, but my ego wouldn't let me. I'm so glad that I persevered, I spent so many nights researching and reading about how to complete this project. 

I gained a lot of hard skills in this project but the most important one was how to google error messages, and I learned the importance of thinking through the architecture before you begin the project, I changed the architecture, at least 4 times, and if I had spent time on it before I would have finished earlier. 

I couldn't have done it without a Reddit, specifically: r/learnprogramming, r/docker, r/learnpython, r/flask, r/learnmachinelearning, r/googlecloud, r/devops I asked so many questions on here, and thank you to all the people that took the time to help a brother out. I really appreciate it. 

If you are curious about the site it's called [commvoice](https://commvoice.me/) I know that the HTML isn't the best right now, I still need to do some work on the CSS component.  

I'm so glad it works. My next steps:

* Make the home page more pretty
* Add more metadata about the model, and remove the model from GitHub
* Create the model for age and Let me know your thoughts. 

[Github](https://github.com/dachosen1/Common-Voice)",1612742509.0
Python 101 Book FREE for 48 hours!,588,5bmaz0,learnpython,https://www.reddit.com/r/learnpython/comments/5bmaz0/python_101_book_free_for_48_hours/,122,"Today I am releasing my first book, **Python 101**, for free for 48 hours. Python 101 was written as an introduction to the Python programming language. While it is intended for beginners, some have claimed that they needed more hand-holding than this book provided for them. So I currently recommend it as an **introductory** and **intermediate** book for developers that are looking to learn Python.

When I originally wrote the book, I noticed that there were few or no books available that described how to create executables of your code or distribute your code via Python’s Package Index (PyPI). Python 101 covers these topics as well as introducing the reader to Python’s standard library, how to install 3rd party packages and an introduction to some of the most popular 3rd party packages for Python, such as SQLAlchemy, requests and virtualenv.

Python 101 has **5 sections, 44 chapters and 295 pages**.

You can get Python 101 for free on Leanpub using the following link: http://leanpub.com/python_101/c/48hours

If you happen to have a [Gumroad](https://gum.co/bppWr) account, then you’ll be able to get the book free there as well by using the following offer code: **48hours**

You will get the **PDF**, **epub** and **mobi** versions of the book. You can see a full table of contents on the Leanpub site

If you like my first book, you can get its sequel, Python 201: Intermediate Python for **50%** off here: http://leanpub.com/python201/c/50percent

I also write a fun [Python blog](http://www.blog.pythonlibrary.org/) that has many other tutorials on it.",1478527571.0
Just a quick thank you,580,fl8wxf,learnpython,https://www.reddit.com/r/learnpython/comments/fl8wxf/just_a_quick_thank_you/,20,I've never asked a question here but I've learnt so much from reading and lurking so thank you to everyone.,1584619388.0
"2,000 free sign ups available for the ""Automate the Boring Stuff with Python"" online course. (April 2023)",576,12cn4uh,learnpython,https://www.reddit.com/r/learnpython/comments/12cn4uh/2000_free_sign_ups_available_for_the_automate_the/,80,"**EDIT: The sign ups are all used up. Remember that  the Free Preview is enabled for all videos, so you can still watch them all on the course home page. [And the first 15 videos are also on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)**

If you want to learn to code, I've released 2,000 free sign ups for my course following my Automate the Boring Stuff with Python book (each has 1,000 sign ups, use the other one if one is sold out): 

~~https ://udemy .com/course/automate/?couponCode=APR2023FREE~~

~~https ://udemy .com/course/automate/?couponCode=APR2023FREE2~~

Udemy has changed their promo code and severely limited the number of sign ups I can provide each month, so only sign up if you are reasonably certain you can eventually finish the course. [The first 15 of the course's 50 videos are free on YouTube if you want to preview them.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

YOU CAN ALSO WATCH THE VIDEOS WITHOUT SIGNING UP FOR THE COURSE. All of the videos on the course webpage have ""preview"" turned on. Scroll down to find and click ""Expand All Sections"" and then click the preview link. You won't have access to the forums and other materials, but you can watch the videos.

**NOTE: Be sure to BUY the course for $0, and not sign up for Udemy's subscription plan. The subscription plan is free for the first seven days and then they charge you. It's selected by default. If you are on a laptop and can't click the BUY checkbox, try shrinking the browser window. Some have reported it works in mobile view.**

Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.

Some people in India and South Africa get a **""The coupon has exceeded it's maximum possible redemptions""** error message. [Udemy advises that you contact their support if you have difficulty applying coupon codes, so click here to go to the contact form.](https://support.udemy.com/hc/en-us/requests/new?type=student) If you have a VPN service, try to sign up from a North American or European proxy.

**I'm also working on another Udemy course** that follows my recent book ""Beyond the Basic Stuff with Python"". So far I have [the first 15 of the planned 56 videos done. You can watch them for free on YouTube.](https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&index=1)

Side note: My latest book, Python Programming Exercises Gently Explained is a set of 42 programming exercises for beginners [for free](https://inventwithpython.com/pythongently/) or as a [99 cent ebook](https://www.amazon.com/Python-Programming-Exercises-Gently-Explained-ebook/dp/B0BGYJ7G6T/).


**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",1680706831.0
"I’m so excited, and most of the people in my life “Don’t get it.”",575,10m04el,learnpython,https://www.reddit.com/r/learnpython/comments/10m04el/im_so_excited_and_most_of_the_people_in_my_life/,69,"Sorry if this doesn’t belong here, but…

I’ve been an IT professional for 11 years. I’ve taught myself how to do many *many*  things. 

Today, I was able to finally make the pieces click to understand how to write, organize, and understand Python. I am *so* excited to begin my journey through this language and begin using it to make things start working better for me, my company, my family etc. 

I had to share with some people who understood. 

Thanks, that’s all.",1674761172.0
"I just want to say thanks, man.",570,k1679r,learnpython,https://www.reddit.com/r/learnpython/comments/k1679r/i_just_want_to_say_thanks_man/,22,"This is by far the best community ive ever seen on reddit and ive been a long time lurker of reddit before i ever made an account. Im a photographer on the side and I thought that was the best subreddit but nope, you guys take the virtual cake. Thank you for all you do!

Sincerely, 

a noob in the programming world. 

P.s. your kindness goes a LONG way and it makes me hopeful that together we can create something amazing. Keep being you Kings and Queens. You dont get enough credit.",1606356420.0
Just completed my first job on Upwork!,568,jrwi6d,learnpython,https://www.reddit.com/r/learnpython/comments/jrwi6d/just_completed_my_first_job_on_upwork/,123,"Holy shit, that was a wild ride.

So, I've just completed my first job on upwork and, jesus god, was it harder than I thought.  The actual job wasn't very difficult although I totally suck at programming so it took way longer than it should have.  I learn an absolute ton from it and wanted to share it with all you guys as a way of paying back for all the good advice I've been given.

**The job**

The job was to scrape financial data from a bunch of websites which the client had already compiled.  The data was structured as an excel spreadsheet with hyperlinks embedded in text.

**Initial thought process**

* Cycle through the spreadsheet, parse all hyperlinks into a list for later.

* As all the data is from the same website, I'm going to scrape one page and get all the relevant data, then loop over it for the rest.

* I'm going to add these values as I go along into excel through Python.

* This will be fairly easy.

**What actually happened**

* I spent about 30 minutes trying this in vscode, setting up a virtual environment and after running my program a few times, I realise I couldn't see shit.  At this point, I got annoyed and transitioned into a Jupyter Notebook.  This made seeing what I was doing a lot easier and I'd recommend any data-centric projects to be done in Juypter.

* I spent about an hour having trouble with list comprehension and loops.  Turns out if you run a loop within a loop, you're going to get it running twice and I wanted to run two loops parallel to each other.  I solved this by using `for x,y in zip(list1, list2):`

* I've always said I hated parsing text because everything seems so complex.  Today, I overcame my fear using `' '.join`, `split()`, and `strip()`.  This probably isn't much to a lot of people, although it all came together for me today and it's something I'm really happy with.

* When it came to webscraping, I got really lazy and paid the price for it.  I used list slicing on elements incorrectly and ended up having it so it worked for my sample size (first two websites in list), although when it got to the latter ones, it started to do funky stuff so I had to start all over again.

* Before that, I deleted all my code to start again because I thought I was parsing data incorrectly.  Turns out it was just the unicode symbols for Euro signs :( Check it's actually wrong before rage-quitting.

* Sometimes, plans don't go the way you want.  I was originally hoping to fire off a load of numbers from juypter into excel in this beautiful streamlined vision.  After spending so much time parsing text from beautifulsoup, I decided to give up on that dream for today and, instead, think outside the box.  I ended up printing data to a text file, importing it via excel, cleaning it in excel (EDIT: I say ""clean"", it was deleting some punctuation marks and unwanted letters from the numbers), and then copy and pasting it.  I think it's also only fair for me to mention this took about 40 minutes - I spent so long printing formatted output in Jupyter and really enjoying it that I forgot about the task.  I spent a while getting the data to save horizontally with the right delimiter so I could copy and paste it into the clients spreadsheet.

* There's a lot of stop-start, especially as a non-professional, self taught person which feels fairly natural.  I think if you know what you want to do, you can Google through it with some persistence but if you can't say how you'd approach the problem it's infinitely harder (like when I wanted to make my streamline dream) so you might have to just give up on a fancy idea and stick to what you know sometimes.

Hope you enjoyed reading!

EDIT: Thank you for all the awards! Really kind of you.",1605051567.0
Just a story about sharing python with my 10yo son and his math homework,568,g2a731,learnpython,https://www.reddit.com/r/learnpython/comments/g2a731/just_a_story_about_sharing_python_with_my_10yo/,83,"Hope this is a relevant place to share.  Small lesson for my 10yo son on solving problems with computers.

My son was assigned the following [simple math worksheet.](https://imgur.com/gallery/6WFl3DD)

I was really impressed that after completing the first addition, he realised that it was going to be a very menial and repetitive task.  (I'm always encouraging him to learn python and have done a little pygame with him).  He approached me and said, ""Dad is there an easier way to do this?""

So I threw together and talked him through this horrible quick and dirty script before allowing him to use it to complete his work:

    shop = [ [ 'soccer ball' , 16.50 ],
             [ 'pencil' , 0.50 ],
             [ 'toy car' , 3.50 ],
             [ 'ice cream' , 4.80 ],
             [ 'yo-yo' , 5.20 ],
             [ 'book' , 17.35 ],
             [ 'piece of cake' , 5.40 ],
             [ 'apple' , 0.75 ] ]
    
    
    items = []
    
    while True:
        print('Welcome to shop')
        print('Press A to add an item.  Press R to restart.')
        action = input()
        if action.upper() == 'R':
            print('starting over')
            items.clear()
        elif action.upper() == 'A':
            count = 0
            for item in shop:
                count += 1
                print(count, item[0], item[1])
            selection = input()
            print('how many', shop[int(selection)-1], 'do you want?')
            quantity = input()
            for i in range(int(quantity)):
                items.append(shop[int(selection)-1])
            print('you have the following in your cart')
            total = 0
            for item in items:
                total += item[1]
                print(item)
            print('total: $' + str(round(total,2))) 
        else:
            print('you said nothing useful')

Obviously it's lacking any technical merit.  But I was just feeling very positive that I was able not just to brag about, but to actually \*show\* him what a computer can do for him.  My daughter's struggling with algebra and I realise that our kids really need to understand WHY they should learn something and HOW it can actually help them in the real world.

Anyway, just want to encourage any parents, uncles, aunts, carers out there to persist with sharing your joy.

EDIT: Wow! I appreciate all the feedback and discussion.  I am highly honored to have received a Relevant XKCD!  Takes me back to my slashdotting days.

ATTENTION NEW / LEARNING PROGRAMMERS: This is throwaway code.  I would \*never\* put this code into a production environment.  Some of the great discussion below (incl. the XKCD) raises the highly pertinent issue of value/time.  You would only write and use code like this when you know 100% it's a one off task and as I mentioned in another post, you control the data input.

There's a value proposition where you have to decide if the time saved on the repetitive task is worth the investment in the code.  Obviously, 1 hour coding to solve 10 minutes of math homework would have been a total waste of time  (with the slight exception that this coding had educational value for a child).  That's why the code is so RUBBISH.  Because I only spent 10 minutes writing it.  As I wrote it, I was aware that there were \*better\* ways to do this.  I know how to use enumerate and dictionaries and validate data types, but this was totally off the cuff.  My only concern was getting the output I wanted with minimum investment, and being able to describe the control flow steps to my son.

Also, for those concerned about him learning math:  I volunteer in his class as a parent helper, specifically working with a small group of advanced math kids, of which my son is one.  I actually told his teacher what we did here and he was really happy about it.",1587021414.0
For everyone who's wondering what they're getting into with programming,566,l3xdve,learnpython,https://www.reddit.com/r/learnpython/comments/l3xdve/for_everyone_whos_wondering_what_theyre_getting/,68,"I've been lurking here for a while and haven't really posted much, but I've seen a few themes and I thought I'd leave something maybe some would find useful. I've been a developer professionally for a long time and I've been writing code for as long as I could see code doing something interesting for me, from 8 years old on my Commodore 64 to my 40s. If you're just getting started or you're losing direction or getting stuck in the weeds, read on and maybe I'll be interesting.

First, at every level of my growth I've run into walls and doubted whether I should be doing this for a living. Definitely in the last year. I get frustrated and angry. But I've learned (as a few folks have echoed here) that it's part of the game. That doesn't automatically make my frustration go away, but it helps to understand that the sheer volume of information in this field is staggering. You're not ever going to learn 10% of it. Start with computer architecture and work your way up and out and it never ends. Programming touches every aspect of it - networking, firewalls, filesystems, memory, processes and threads, UX, security, it goes on and on. You might be thinking that once you get syntax and some patterns memorized you're good to go, but trust me, the longer you stick with it, the more you see.  I felt golden maybe five years ago, and then my job at the time got me into containerization and now I'm all in Kubernetes and AWS and I was completely lost for a bit there. The only skill that really matters is persistence. And confidence. I would include humility in the list but that's really not a requirement. (You can be a jerk programmer and totally get away with it, but don't)

The other post I see here a lot is asking what to do with Python or what to learn. For what to learn, see above. Learn enough to get a job. Maybe I'll do another post on that sometime. But the what to do is interesting. In my experience there are two kinds of programmers - nine-to-fivers and tinkerers. I am personally a tinkerer. I have a dozen projects sitting around in various stages of progress and a few raspberry pis running halfway broken code. The project that's been getting the most attention lately is a media player of sorts. I originally wanted a way to have my music collection be more accessible and portable. I'm not very friendly with these cloud music services, I wanted my own thing. So it started as an interface to check in and out music files to my phone, library book style. Then I started adding things on, like a friendly search page for when I'm at the record shop and I want to flag an album I'm looking for or to see what I already own. Other projects are an invoice generation add-on for a popular bug tracker that I was using at one time for side gigs. Then there's the one that sorts old digital pictures by file timestamp or tagged date into month/year folders. If you look around you'll find support for whatever you want to get into. I was curious if I could serve up my library of home videos via Roku, and bam, they have a developer portal. IMDb has a developer portal. Wikipedia has an API. The sky is the limit. Basically, put your head in the clouds and wonder what would be super cool and fun to write and you'll find a project with built-in support on the internet. If it sounds too advanced, here's another skill: breaking big problems down into little problems. Have no idea how to get started calling some third party API? Look it up, find some samples, make them work. You'll see that ""how to call an API"" is really just ""what's the difference between GET and POST"" plus ""best logging practices"" plus ""how to do exponential backoff"". Every problem leads to a bunch of questions that are themselves smaller problems, each filled with questions that lead to more problems.

So if problems and questions aren't your jam, I hate to say it, you may be getting into the wrong hobby/career. It's fun though, serious fun. So stick with it and see where it takes you for a while.

update: u/baubleglue correctly notes that there's more to getting into programming than persistence and confidence, and I promote their take on it. In my context I meant this as what's important when you're in the game and you hit a wall.",1611485810.0
"PSA: To all beginners, learn how to use unit tests early in the learning process",565,cl0qpx,learnpython,https://www.reddit.com/r/learnpython/comments/cl0qpx/psa_to_all_beginners_learn_how_to_use_unit_tests/,50,"I'm the last person who ever wants to write unit tests but, when you know you have to write unit tests you become a better engineer. You write smaller functions, you have less bugs and realizing how difficult it is to write a high coverage unit test the better you design your functions and ultimately your program.

edit: [How to test hello world!](https://www.reddit.com/r/learnpython/comments/cl0qpx/psa_to_all_beginners_learn_how_to_use_unit_tests/evu5vwm/)",1564729688.0
What is the point of __name__ == '__main__' in Python programs?,555,eb57p0,learnpython,https://www.reddit.com/r/learnpython/comments/eb57p0/what_is_the_point_of_name_main_in_python_programs/,52,"When I look at other peoples code, I frequently see

    if __name__ == '__main__':

What exactly does this do and mean?",1576446251.0
2000+ free programming books on github,563,8ycc5j,learnpython,https://www.reddit.com/r/learnpython/comments/8ycc5j/2000_free_programming_books_on_github/,20,"I just stumbled upon this gargantuan collection of 2000+ programming books. Many of them are Python, too: [link](https://github.com/EbookFoundation/free-programming-books/blob/master/free-programming-books.md#python). I guess filtering out the relevant information is more important than ever...",1531419937.0
6 months in and my 1st Python App is up and Running!,557,mmuwk4,learnpython,https://www.reddit.com/r/learnpython/comments/mmuwk4/6_months_in_and_my_1st_python_app_is_up_and/,38,"I know there are a lot of people on here like me who recently took up coding in one form or another. COVID flattened my industry and as I looked around for other directions to turn, studying python eventually seemed like the most open-ended and feasible choice.

After many months of studying I was watching a coding interview on youtube where a prospect was asked to construct a number to roman numeral converter function. I stopped the video and decided I would try to build my own. It took longer than it should have, and I'm sure it's not the best way to do it but I got it working in python and eventually (like 5 minutes ago) online as a Flask app.

I just want to shout out beginner programmers young and old. I'm a 43 year old composer/musician and while no one is really in need of a new number to roman numeral converter, the process helped solidify what I have learned in 6 months and then some.

There were many obstacles along the way, a lot of head scratching and error handling, but man, even if this is the lowest fruit... It is wildly satisfying to have a program I wrote from scratch up and running.

A year ago I couldn't print ""Hello World"" if my life depended on it. Stick with it!

My thanks to the community as well!

&#x200B;

\-- UPDATE April 9 2021--

People's interest and encouragement has gotten me to get my act together on Github, thanks guys!

For anyone interested:

[https://github.com/AviGranite/NumToRoman](https://github.com/AviGranite/NumToRoman)

Here's a working Flask app I made out of it:

[https://avigranite.pythonanywhere.com/](https://avigranite.pythonanywhere.com/)

Like I said, it's nothing fancy but it works. I originally had it working both ways, roman to integer, integer to roman but I found a bug so I'm working to add that functionality. ",1617897588.0
"What does it mean ""int' object is not callable""?",554,w0mvqe,learnpython,https://www.reddit.com/r/learnpython/comments/w0mvqe/what_does_it_mean_int_object_is_not_callable/,51,"I'm trying to do a function but every time I get a ""*Type Error*"". 

The code is:

10\*((1)\*\*3)-35\*((1)\*\*2)+50(1)-24

&#x200B;

Thanks so much!",1657995519.0
"Where do people get data to ""play"" with?",553,g3qhlq,learnpython,https://www.reddit.com/r/learnpython/comments/g3qhlq/where_do_people_get_data_to_play_with/,61,"I see a lot of projects online, sometimes even on /r/Python that use data they parsed to make cool graphs, statistics, etc.

Where do people get that data? Is there a website for most  subjects in life? What do I search for to find the average price of a car, for salaries, for the best TVs of 2019, Laptop prices for the past few years and plenty other subjects? I just threw a bunch of random stuff that popped into my head, but you get the idea.

Thanks in advance :)",1587227960.0
"""Automate the Boring Stuff"" author is live streaming Python programming on Monday evening 5/27, 6pm Pacific",555,btfqr3,learnpython,https://www.reddit.com/r/learnpython/comments/btfqr3/automate_the_boring_stuff_author_is_live/,27,"Hi Reddit! I'll be live streaming myself working on a few different text-based games in Python on Monday, 5/27 at 6pm Pacific:

https://www.twitch.tv/alsweigart/

I'm creating a collection of short, complete, text-based Python games. The idea is to create several examples for beginner/intermediate programmers to look at to see how programming concepts come together into a complete program (while still being small enough to understand). The current collection is on GitHub at: https://github.com/asweigart/PythonStdioGames/tree/master/src/",1558919029.0
"When I'm coding, I don't feel stupid anymore",556,989qx7,learnpython,https://www.reddit.com/r/learnpython/comments/989qx7/when_im_coding_i_dont_feel_stupid_anymore/,76,"I was diagnosed with Asperger syndrome when I was little (so i'm literally autistic), and while i don't 100% accept this diagnosis, I'm not completely convinced it's not correct either. I'm able to manage the worst of my depression and anxiety through routine and lifestyle, and have memorized enough do's and don'ts to navigate most but not all social interactions without upsetting people, but I have trouble focusing, remembering to do things, not offending people, and occasional bouts of crippling depression with self loathing and suicidal thoughts. At 27 years of age, I have dozens of moments per day where I think or even say out loud ""being retarded sucks"". When i'm coding though, I don't feel autistic anymore. 

When i'm coding, I get into a flow state and I don't feel anxious, don't think about suicide, and don't feel the need to drink. Even when I get frustrated, as all people who code do, I'm excited to find a solution. There is always a logical reason that the computer does what it does (not always the case with people), even if I haven't yet figured out what that reason is, and it is possible to find a rational solution by breaking down the problem into smaller and smaller components. Unlike the rules that dictate social interaction, which seem to update frequently, without warning and everyone but me understands these rules and I get penalized for breaking them, the  'rules' that dictate a computer's behavior stay the same even if software updates make it sometimes seem like they don't. Most importantly though, when I am learning something new with Python and it 'clicks', or when I figure out how to do something better than I was doing it before, I feel like a f\*\*\*ing genius. I feel like ""Even though you are a complete (fornicating imbecile) in every other area of life, it looks like you have finally found something you are good at, Douchabag\_Dan!""

I am so grateful to live in an age where this exists. I'm so grateful that Python has such a helpful community that makes it easy to learn and get started. Just wanted to share my gratitude. Thanks for reading. ",1534574666.0
I finally built something!,547,mzvzlg,learnpython,https://www.reddit.com/r/learnpython/comments/mzvzlg/i_finally_built_something/,42,"I am so freaking pumped right now. I finally built something that I did not copy directly from a video tutorial and it feels freaking amazing!

This is just a simple program that pulls data from the International Space Station API [Where the ISS at?](https://wheretheiss.at/w/developer) and it tells you the Altitude, Longitude, Latitude and Velocity (mph) of ISS in 3 second intervals.

There is a bit more I would like to do like add a timestamp but this is my first real program I've put together myself.

Any thoughts on what/where to improve?

    import requests
    import time
    
    
    def get_iss_data():
        iss_api = 'https://api.wheretheiss.at/v1/satellites/25544'
        request = requests.get(iss_api).json()
        iss_latitude = request['latitude']
        iss_longitude = request['longitude']
        iss_altitude = request['altitude']
        iss_velocity = request['velocity']
    
        print(f'''
    ---------------------------
    Real-time ISS Location:
    ---------------------------
    Altitude: {iss_altitude}
    Latitude: {iss_latitude}
    Longitude: {iss_longitude}
    Velocity MPH: {iss_velocity}
    ---------------------------
        ''')
    
    
    def iss_current_data():
        i = 1
        while i <= 5:
            get_iss_data()
            time.sleep(3)
            i += 1
    
    
    iss_current_data()",1619550416.0
Beginner's Python cheat sheets,547,4atn5f,learnpython,https://www.reddit.com/r/learnpython/comments/4atn5f/beginners_python_cheat_sheets/,57,"I recently made a set of cheat sheets aimed at beginners, and thought they might be useful to some people here.

The [first sheet](https://github.com/ehmatthes/pcc/raw/master/cheat_sheets/beginners_python_cheat_sheet_pcc.pdf) provides an overview of many basic concepts in Python. Individual sheets cover lists, dictionaries, if statements and while loops, functions, and classes. You can download [individual sheets](https://ehmatthes.github.io/pcc/cheatsheets/README.html), or download a pdf that includes all the sheets in [one document](https://github.com/ehmatthes/pcc/raw/master/cheat_sheets/beginners_python_cheat_sheet_pcc_all.pdf).

Cheat sheets have been really helpful to me at times when learning a new language or framework, and I hope these are useful to some people as well.",1458229151.0
How Do I Actually Build Something With Python?,545,idta8g,learnpython,https://www.reddit.com/r/learnpython/comments/idta8g/how_do_i_actually_build_something_with_python/,93,"I've been programming in Python for a while now. I'm familiar with all the basic functionalities and have been working on algorithms for a while as well. My question is, how do I actually build something solid with Python (say, an application, or a program that automatically replies to all my emails with a pre-written message)? I simply have no clue how to do that. I'm only familiar with the ""logic"" of Python, but I can't ""build"" anything with it. Where do I start? What do I learn?",1598000410.0
"Ok so I'm committed to 1 year of coding in Python and I'm 1 month in, what kind of goals/benchmarks can I set for myself along the way?",542,g7rpwu,learnpython,https://www.reddit.com/r/learnpython/comments/g7rpwu/ok_so_im_committed_to_1_year_of_coding_in_python/,115,"I think it would be awesome to set some sort of tangible goals that I can work toward. SMART goals are ideal (specific, measurable, attainable, relevant, time-based). Please let me know if you can point in a good direction!",1587812439.0
PSA: To new programmers or to those new to posting code to reddit please learn how to use backticks and codeblocks when posting code.,539,eyvg46,learnpython,https://www.reddit.com/r/learnpython/comments/eyvg46/psa_to_new_programmers_or_to_those_new_to_posting/,69,"I've had some spare time to parse this subreddit to help those in need. It is very apparent that not many know how to use code blocks or how to use backticks when making a post.

You can use a a single or triple backtick on the front AND back of the word
which is [this guy](https://imgur.com/a/1ZuYv8j) on your keyboard (not the tilde ~)
to get formatting like `this`. In your editor it should look like \`this\`.

As for code, use FOUR spaces at the start of each new line to indicate code.

    for i in [1,2,3]:
        print(i)

This helps others read your code and encourages other to help. No one wants to read spaghetti code on top of it being unformatted.

Thanks in advanced!

Edit:

From /u/SoNotRedditingAtWork:

> New reddit's text editor also has these cool buttons called **Inline Code** and **Code Block** that ya'll can use to properly format your code snippets. The** Code Block** option is real nice because your code will keep its whitespace when you copypasta it into an open block in the editor.

From /u/lanemik:

>Also, if you're using the new Reddit, you can type cmd-j on mac to

     enter a code block

> You can also do cmd-k [create a link](https://www.google.com/). Or do cmd-i to get into or out of italics. Obvs **cmd-b gets you into or** out of bold. I'm not too sure about all the others. I don't know if there is a key combo that gets you to inline code or blockquotes or super/subscript.

From /u/TSPhoenix:

> Btw you can use escape characters on reddit (but not in code blocks). Type \`test\` and it will display `test` in the text of your post so you can more cleanly explain how to get test.",1580844321.0
How I became the most powerful padawan,545,rfbqhh,learnpython,https://www.reddit.com/r/learnpython/comments/rfbqhh/how_i_became_the_most_powerful_padawan/,54,"This is a 101 example of an automated task I wrote yesterday and I wanted to share it as an example for those who are thinking whether learning Python is worth it or not.

I purchased ""StarWars The Fallen Order"" this weekend. In the game, the main character is a padawan and you need to unlock the different powers by leveling up. Well, I wanted them all as soon as possible.

1 hour into the game I found [a meditation point](https://i.ibb.co/YW5zpHx/Initial-position.png) (where [you can rest, save and enemies respawn](https://i.ibb.co/VvFVjVF/Meditation.png))  close to an entrance where a  Stormtrooper with a machine gun appears. You can kill him easily by just [reflecting the laser blasts](https://i.ibb.co/hx074Lm/Fight.png).

So I thought: ""hey, I could meditate, go to the entrance, kill him, and go back to the meditation point again and again until I reach level 50"". Problem is, you need to do that 4000 times.

Python has a very easy to use library to control your keyboard and mouse named pyautogui. It takes 5 minutes to read [how to use the keyboard](https://pyautogui.readthedocs.io/en/latest/keyboard.html) and 5 more [how to use the mouse](https://pyautogui.readthedocs.io/en/latest/mouse.html).

So, each iteration should do this:

1. Walk from the meditation point to the entrance
2. Reflect the blasts
3. Walk back to the meditation point
4. Meditate and exit the menu

Points 1 and 3 are the same except for the direction. I just need to hold 'w' and 's' for the same amount of time (**hold, not just press**). Here is the code:

    walk_time = 2.5
    
    def walk_to_the_enemy():
        pyautogui.keyDown('w') 
        time.sleep(walk_time)
        pyautogui.keyUp('w') 
    
    
    def walk_back():
        pyautogui.keyDown('s') 
        time.sleep(walk_time)
        pyautogui.keyUp('s') 

For point 2, reflect the blasts, I just need to click the right button of the mouse very fast. This is easy because you can define how many clicks and the interval between them:

    def attack(interval=.05, duration=6):
        clicks = int(duration / interval)
        pyautogui.click(button='right', clicks=clicks, interval=interval)

Finally, the menu. You need to click 'E' to enter the menu, 'R' to actually meditate and 'ESC' to exit. Keep in mind that between these actions you need to wait some seconds until the action is performed:

    def meditate(time_menu_transition=4):
        pyautogui.press('e')
        time.sleep(time_menu_transition)
        pyautogui.press('r', presses=5, interval=.2)
        time.sleep(time_menu_transition)
        pyautogui.press('esc', presses=3, interval=.5)
        time.sleep(time_menu_transition)
    

As a note for this last function, I pressed several times each button because the time each step needed was not consistent. Maybe sometimes 2.5 seconds, and others 3.5 seconds.

Once I had all this, I put them together:

    def levelup_iteration():
        walk_to_the_enemy()
        attack()
        walk_back()
        meditate()

And the main function, with an offset time and a counter. The offset time was 5 seconds so I had time to switch windows (from the terminal to the actual game):

    def main():
        time.sleep(5)
        count = 0
        while True:
            levelup_iteration()
            count += 1
            str_count = f""       {count}""[-5:]
            print(f""Count: {str_count}"")

12 hours and 4000 troopers later I'm level 50 in the beginning of the game.

I like this example because is one of the most simple ones with a real wide application many people will like to use in other games, but it doesn't end there. I used autogui to automate some tasks I had to do with Photoshop and 700 pictures to remove some errors... and that's just a library to control the keyboard and mouse. I use Python everyday at work even when the task is not necessarily software related. It will increase your efficiency dramatically.

Hope you enjoyed it.",1639386971.0
"I really enjoy automating processes with python, is there a job opportunity for that?",542,jurjmr,learnpython,https://www.reddit.com/r/learnpython/comments/jurjmr/i_really_enjoy_automating_processes_with_python/,138,"I’ve struggled for a long time with what I actually enjoy doing. I started learning python a couple months ago and started writing scripts to automate some processes at my job and I really enjoy It! I want to continue doing this to help companies scale as they grow. Is there a job title that handles this? Or are there other skills/languages I should learn to be able to continue to do this?

I’m new to this industry so that may be a dumb question but I have no one to really ask except this community.",1605467915.0
"Created my first ""useful"" script with Python for my wife! Feedback always appreciated.",543,izz18n,learnpython,https://www.reddit.com/r/learnpython/comments/izz18n/created_my_first_useful_script_with_python_for_my/,45,"I have successfully completed my first ever simple/useful script with python.

**A little backstory:**

I have been *\*slowly\** learning python more and more over the years, and initially used it  for small projects during my physics undergrad. I only ever used it for Monte Carlo Simulations and to solve problem sets. So my experience with python is definitely beginner, I can do things with python but my overall knowledge of python is pretty limited. Anyway fast forward to this year, my wife was diagnosed with cancer so I went on Family Caregiver EI (Canadian thing) to care for her.  Than COVID happened, and my job used it as an excuse not to bring me back (bad trouble for them). Since diagnosis she has had an enormous amount of appointments to keep track off (and found it overwhelming), since I have all the time in the world I decided to dust off my fingers and get them to good use and write a script that will take her appointment information from Google Sheets and send her reminders via email of what is coming up.

Could I just remind her verbally? Probably. But this is easier, and killed some hours of the day :D

It took me a few hours, I had to do some minor reading on gspread and smtp packages. **Very basic/simple** but I wanted to share because I browse this subreddit daily and I am always reading so much helpful information. Also I am quite happy I actually made something somewhat useful. I find myself always falling into tutorial hell when it comes to learning python mainly because I can never think of something to program but this came up with my wife and I thought: ""Hey, I can do this in python!""

**Anyway here is the code** *(I am always open to criticism)***:**

    import gspread
    import pandas as pd
    from datetime import datetime, timedelta
    import smtplib
    import email.message
    
    #return a DataFrame consisting of appointments that are within a certain time period
    def reminder(df, date_now, t):
        df_reminder = df.loc[((df['Date'] - date_now) < timedelta(days=t)) &
                             ((df['Date'] - date_now) >= timedelta(days=0))]
        df_days_remaining = df_reminder['Date'] - date_now #series of days remaining until appointment 
        return df_reminder, df_days_remaining
    
    
    def send_message(df, days_remaining):
        message = email.message.Message()
        message['Subject'] = f'APPOINTMENT REMINDER - {days_remaining}'
        message['From'] = 'MY EMAIL HERE'
        message.add_header('Content-Type', 'text/html')
        message.set_payload(f'''<b>You have an Appointment coming up! See the details below:</b> <br><br>
        <b>APPOINTMENT:</b> <u>{df['Appointment']}</u><br>
        <b>Doctor:</b> {df['Doctor Name']}<br>
        <b>Location:</b> {df['Location']}<br>
        <b>Date: {df['Date']} at {df['Time']}</b><br><br>
        <b>Notes:</b><br>
        <p>{df['Notes']}</p>
        ''')
        smtp_obj = smtplib.SMTP('smtp.gmail.com', 587)
        smtp_obj.ehlo()
        smtp_obj.starttls()
        smtp_obj.login('MY EMAIL HERE', 'MY PASSWORD HERE')
        smtp_obj.sendmail(message['From'], ['MY EMAIL',
                                        'WIFE EMAIL'], message.as_string()) #Send me a copy because I forget
        smtp_obj.quit()
    
    
    gs = gspread.service_account(
        filename='PATH TO JSON FILE'
    )
    
    # open sheet
    sheet = gs.open(""SHEET NAME"").sheet1
    date_now = datetime.today()
    
    
    # make dataframe in pandas of excel data and
    # converts date col into Datetime object
    df = pd.DataFrame(sheet.get_all_records())
    df['Date'] = pd.to_datetime(df['Date'], dayfirst=True)
    
    #return DF with appointments coming up in 7 days or less
    df, df_days_remaining = reminder(df, date_now, 7)
    for i in range(0, df.shape[0]):
        send_message(df.iloc[i], df_days_remaining.iloc[i])
    

I set it up as a windows task and she is running like a champ :P

&#x200B;

Thank you for the great community and thanks for reading!",1601093510.0
Python Crash Course is a FANTASTIC book,540,13a5xj2,learnpython,https://www.reddit.com/r/learnpython/comments/13a5xj2/python_crash_course_is_a_fantastic_book/,99,"I've got to say, this is hands down the most awesome book ever. Before deciding to pick up this book, I was stuck in a tutorial hell for 2 years!! I would watch videos, give up, come back, give up again without any practice whatsoever and just watch those tutorials like a movie without learning anything from them. 

As I progressed with this book, I made notes of the concepts I'd learn from the book in Jupyter notebook and wrote code alongside. Then I started playing around with it and that is when things finally started clicking for me. The book does an excellent job at explaining all the essential concepts. It's super simple and the examples are amazing as well as relevant from a practical standpoint. If you are also struggling to start and/or stuck in a tutorial hell, I would cent percent recommend picking up this book as your very first reference. Trust me, you'll thank me later.  The key to learning how to code is to actually write code and play with it and the book makes you do exactly that.

I have read the book until the File I/O section so basically I've completed the basics but I feel it's not enough and I should pick up another reference to further strengthen my basics and some more. I am studying python to be a data scientist and was thinking of moving to the book 'Python for Data Analysis ' by W. McKinney but I'm kinda unsure.

So, should I start reading Python for Data Analysis or should I read another book on Python after PCC to be thorough with the basics and be familiar with more advanced stuff? If yes, then what is the best book to read after PCC? Thanks in advance :)",1683415973.0
Wanna to learn python? Don't read books. Do the side project!,533,c5o70z,learnpython,https://www.reddit.com/r/learnpython/comments/c5o70z/wanna_to_learn_python_dont_read_books_do_the_side/,141,"I'm lurking the sub for some time already. I believe managed to help some of you already so you may know me.

&#x200B;

Now I want to help some more...

&#x200B;

One thing I noticed is that the great part of you just read books, do courses, read more books, watch youtube videos etc. And you're struggling with using the concepts you've learned (not really learned actually) in a real life. Here is what I propose.

## Don't read books. Do the opposite.

Yes, the opposite! Get an idea for a little more than a simple project and do it!

The project cannot be too simple, because you would be lying to yourself that you're proficient. What you need is a project that **you are not sure you can make**. That's a challenge. But there's something more to make it work.

## Pick the topic you're passionate about

To achieve what suppose to be ""impossible"" at the beginning, you need something the scientists call ""the flow"".

If you play video games, you know what I'm talking about. It is a state of hyper-productivity, hyper-focus - it's when the magic happens.

Prepare a distraction-free environment. No kids running around. No TV. No Facebook. No smartphone. **Just you, your laptop, headphones, and instrumental music.** Once you get into the flow, stay there as long as you can. Ask your spouse to not interrupt.

What can help you is to pick the topic for the project that you're passionate about. It is gonna be a little bit easier for you to start, and maintain the excitement.

# ""I don't have the motivation. I don't have time.""

Motivation's garbage. Don't count on you being motivated. Just don't. It's another excuse to not produce any results. Ass in the chair. Headphones on the head, no distractions. Just you and the project. Everyday. No excuses. If you can't do it, resign right now, don't waste your time. You can't be great without the pain of forcing yourself.

## ""I just can't into programming yet...""

Do the project first, and learn as you go. Do you need loops? Learn, and use them immediately. Need functions? Learn and use, and use them immediately. Do you need classes? You know what to do. Trust me it works. Especially with python.

## ""How the f*** you know it works?""

I am an example. I'm now the Technical Lead for Atlanta based startup. I did in 3 years after university. **I have never read a book about python in my entire life**.

All I did was picking up the project, developing it, learning as I go, showing to the people and fighting with fire on production. Get the feedback ASAP.

Last 2 jobs I did get without even showing my résumé to the HR. I just showed them my side projects.

At the beginning I started with a 2D game based on \`pygame\` library in python 2.7. Do you think I knew how to do it? Nope. I spend 1 week on something that today could take me 1 or 2 hours. [Check this out.](https://www.youtube.com/watch?v=t7cDpiCqZwY)

Then I've created my first Django projects. I learned how to design a REST API. After that I've met android developer and we've made 3 mobile apps, one of them having 500 users simultaneously. I had to make it work to not let the users down. That's the pressure you want to get! **You know the best practices because you just had used them. You didn't have any other choice**, but a massive failiure.

# Show your project, get the feedback, feel the pressure.

In this very moment, I mentor 2 people - 20-year-old student and 27-year-old firefighter who wants to change his current job.

They picked up the projects, I do the code reviews for them. We have a knowledge learning session once per 2 weeks. They get the feedback, they learn and they leveraging my experience. I advised them to not read ""Learning Python"" book, but just start working on a project, and open this book only when it's necessary to move forward.

&#x200B;

Pick the project, good luck, have fun.

&#x200B;

# ** Edit

After reading the comments I think I went a little bit too ""click-baity"". I'm sorry for that. Clarification: Of course, read the books **to solve the problems you encounter during the side project**. Like the book I mentioned ""Learning Python"" - it's a great book for beginners but as a reference book (like I used it) not as a cover-to-cover novel to read. Without putting the things you read into action in a real project, you will forget soon.",1561545066.0
Thank you 🙏 r/learnpython members,532,fa3pl9,learnpython,https://www.reddit.com/r/learnpython/comments/fa3pl9/thank_you_rlearnpython_members/,40,"I just wanted to say a big thank you to everyone on here that takes the time to teach newbies like me how to code properly.

My journey into programming has been eye opening, especially when I need help understanding how to complete my course assignments.

This has been my experience so far:

StackOverflow - don’t ever ask questions until you are an expert or you’ll get verbally slapped. It’s like you are not worth their time.

Python Discord - people on the help channels seem like they know what they are talking about but don’t help much. Sometimes just like those on SO. In the recent past I asked the same question about 4 separate times and got nothing but dead air.

I’ve tried getting a tutor from Kijiji but all they want to do is complete your assignment for you and charge you $hundreds. I’m not going to learn that way. 

This subreddit seems to be the only place I have found that gives me respect as a beginner and the help I need by providing suggestions.  I don’t think I’ve ever felt degraded or dismissed.

So again, thank you to everyone who takes the time to help new programmers. 🍻",1582764742.0
"Just signed up for 100 days of Python, due to this group",527,xldmez,learnpython,https://www.reddit.com/r/learnpython/comments/xldmez/just_signed_up_for_100_days_of_python_due_to_this/,102,"I am a beginner with Python, and have been struggling to learn, yes, I'm 60 years old. I came across one posting about ""read the book, but do every exercise and note as well.  Then I saw how many people are commenting about how good the Udemy course is, so I signed up today and will start day 1 tomorrow, thanks for the info everyone!  Looking forward to learning something new!",1663881400.0
Corey Schafer is Coming back!,528,z3sbwm,learnpython,https://www.reddit.com/r/learnpython/comments/z3sbwm/corey_schafer_is_coming_back/,67,"The best person (IMO) to learn basic python from - Corey Schafer is back on YouTube after 2 years. His channel was my entry into python, before I only knew C++. It helped me become a Python Developer and his tutorial on Django is unparalleled. 

So excited that he is going to continue to make python content again after 2 years.

  
Just saw his month old Post.

> Hey everyone. Wanted to give y’all an update on me getting back to making educational videos and the channel in general. First, the channel will be hitting 1 million subscribers today and I can’t thank you all enough. When I first started making educational videos, it was actually just something I thought I would use for myself that I could revisit or send around to coworkers to explain certain concepts. To see that so many others have found the videos helpful was unexpected, but I couldn’t be happier hearing from people around the world who have said it helped them understand certain concepts. So thank you all so much for that.  In terms of future videos, I have several videos and series’ I’ve been working on. I have to admit, after taking a break from teaching for an extended period, it’s been difficult to get back into the swing of script writing and video editing, but that should only be temporary. I’m currently working on a personal project that I will turn into a video video where we use a headless browser to consolidate some monthly billing information and text the information on a monthly basis… all using Python. I’m also going to put together some stuff on Computer Science algorithms, as well as looking at other languages, like JavaScript.  I think that’s all for now. Thank you all so much for you patience, and thank you so much for your support. And lastly, thanks for the 1 million subs! Still hard to believe. Enjoy your weekends everyone!!!3.2K",1669317636.0
Does/did anyone else have a hard time understanding classes and how to use them?,532,nyjvzp,learnpython,https://www.reddit.com/r/learnpython/comments/nyjvzp/doesdid_anyone_else_have_a_hard_time/,123,"I am having such a difficult time understanding and trying to implement classes. I have been watching tutorial after tutorial trying to understand how to use the functionality of classes but these guys talk way too fast and move to quickly. I just can't get a clear understanding on a lot of it. Like I understand classes are meant to prevent spaghetti code by assigning attributes to objects you're creating, but I don't understand the methods under the \_\_init\_\_ method in the class. What are all of these methods? And why aren't they being defined outside of the class? Ugh I'm so confused, something isn't clicking for some reason. 

&#x200B;

I don't really know what this post is. I guess I'm just ranting about my frustrations. Thanks for listening lol.",1623541532.0
I wrote a script that grabs the hottest post on /r/wallpapers and sets it as your background.,527,eq6co8,learnpython,https://www.reddit.com/r/learnpython/comments/eq6co8/i_wrote_a_script_that_grabs_the_hottest_post_on/,48,"Inspired by /u/glof2 's [post](https://www.reddit.com/r/learnpython/comments/emdvop/i_wrote_an_application_that_sets_your_background/), I created a script that uses PRAW to scrape /r/wallpapers and sets it as your desktop wallpaper. It only works for windows, but I might work with some friends in my classes and develop a linux/macOS version. Otherwise, if ya wanna try and make it yourself feel free! If you like it, use it with task scheduler to set a new wallpaper every day.


[Link](https://github.com/nguyenevan42/reddit2desktop) 

This was a fun project because I learned a lot about PRAW, different packages, and how to use GitHub. 
Feedback appreciated!",1579294603.0
I feel very dumb trying to learn python. And it kicks my anxiety into overdrive.,526,hmg1lo,learnpython,https://www.reddit.com/r/learnpython/comments/hmg1lo/i_feel_very_dumb_trying_to_learn_python_and_it/,257," I am 28 years old and at a crossroads in my life. I have left my ""career"" of 10+ years to pursue programming. 

I am by no means a ""computer wiz"" or even ""tech savvy"". I never even learned to touch type. (I still look at the keyboard when I type.) 

However,  I've always been interested in programming. My parents are programmers with 30 years of experience, and still to this day generally enjoy it. I thought I could start learning the basics and over time build an understanding of computer language.

I am about a week into youtube ""python for absolute beginners"" videos. It started off pretty strong and I'm still very interested, its just so many terms and rules just being thrown at me and I cant retain any of it. I understand with repetition it gets easier to understand. But right now I can barely think and comprehend whats being taught.

The overbearing feeling that I am just too dumb to learn something like this is holding me back. It's gotten to the point where I can only take about 30 of trying to learn before the anxiety kicks in and I have to stop.

I really want to do this, I think of all the possibilities of what I can do and create with this language and it keeps me going. I've just been hitting a brick wall recently.

I mostly just need to get this off my chest, but any advice is greatly appreciated. Thanks for hearing me out.

TL:DR - I'm very interested in learning python, but its proving to be more difficult than I imagined.


Edit: Thank you to everyone for all the kind words and responding so quickly. It's good to know that alot of people are in my shoes dealing with the same issues. All professionals start as beginners.",1594068045.0
I made an online Python interpreter that doesn't suck,523,gqre86,learnpython,https://www.reddit.com/r/learnpython/comments/gqre86/i_made_an_online_python_interpreter_that_doesnt/,147,"Most online python interpreters suck because they try to be complete IDEs with bloated designs and none of them work on mobile.

I spent the coronavirus lockdown time building a simple python interpreter that doesn't suck, has a simple design and works on mobile. It also has a nifty dark mode feature.

I would appreciate any feedback on the tool - in terms of UI/UX, security, packages, feature requests and I would be happy to answer any questions regarding how I built it.

[https://www.programiz.com/python-programming/online-compiler/](https://www.programiz.com/python-programming/online-compiler/)",1590472797.0
I recommend the official Python tutorial for certain learners,525,df265b,learnpython,https://www.reddit.com/r/learnpython/comments/df265b/i_recommend_the_official_python_tutorial_for/,59,"I've been learning python for a while and feel like I know it on an intermediate level. Yesterday, I decided to take a look at the official  [Python Tutorial](https://docs.python.org/3/tutorial/index.html) because I never had before. I ended up staying up until 2am reading it because I'm a fucking nerd.

I'm going to be honest, for a total programming beginner, I believe this ""tutorial"" might scare them off. It's pretty technical and doesn't hold back on jargon and details that would confuse an absolute newbie.

But for someone who is either:

1. Already comfortable with the basics of python and programming concepts
2. Coming from another language

the tutorial is great! It gives a level of detail into the language that you don't get in most regular tutorials.

It can be dry if you're not really passionate about programming, but the information you'll pick up and the deeper understanding you'll gain will be worth the time to read the entire thing.

If you're looking for the next step to deepen your understanding, check it out. It's definitely not just another oversimplified ""basics"" tutorial.",1570551190.0
Exercises to learn Pandas,528,k7b25d,learnpython,https://www.reddit.com/r/learnpython/comments/k7b25d/exercises_to_learn_pandas/,58,"Hello!

I created a site with exercises tailored for learning Pandas. Going through the exercises teaches you how to use the library and introduces you to the breadth of functionality available.

[https://pandaspractice.com/](https://pandaspractice.com/)

I want to make this site and these exercises as good as possible. If you have any suggestions, thoughts or feedback please let me know so I can incorporate it! 

Hope you find this site helpful to your learning!",1607187632.0
I'm so happy!... I've just written a program for the first time that didn't come from a book or an exercise!,524,d3tjiv,learnpython,https://www.reddit.com/r/learnpython/comments/d3tjiv/im_so_happy_ive_just_written_a_program_for_the/,34,"It's so, so basic and probably incredibly inefficient - but I don't care! I'm ecstatic :D 

I want to look at my spending habits with Amazon, I thought they would just provide me with a CSV of my historic order, and they do - but only for the US site (I'm British).

So I thought I would make web scraper that made a CSV file for me. I haven't learned how to make a web scraper yet - as I'm not familiar with BeautifulSoup. 

However, I did realise that part of the process would be flicking through Amazon Order pages so I thought I should create something that spits out a URL to a page.

At some point, I intend to make this automated so that it cycles through all of the pages of a given year. As of right now, the user inputs a year and what page they would like to view and the program opens that URL in a new tab :).

Thanks very much to everyone here :)

[Here is the code!! (GitHub Gist Link)](https://gist.github.com/TheAlmightyDada/1b63537acad1d7c90160e8b6ecec9473)",1568399743.0
"2,000 free sign ups available for the ""Automate the Boring Stuff with Python"" online course. (Nov 2022)",524,yn1389,learnpython,https://www.reddit.com/r/learnpython/comments/yn1389/2000_free_sign_ups_available_for_the_automate_the/,47,"UPDATE: The codes are used up. You can still watch [the first 15 videos on YouTube]((https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)). You can also go to the course page and click ""Expand All Sections"" and click the ""Preview"" link for each video to watch them on the site.

If you want to learn to code, I've released 2,000 free sign ups for my course following my Automate the Boring Stuff with Python book (each has 1,000 sign ups, use the other one if one is sold out): 

~~https:// udemy. com/course/automate/?couponCode=NOV2022FREE~~

~~https:// udemy. com/course/automate/?couponCode=NOV2022FREE2~~

Udemy has changed their promo code and severely limited the number of sign ups I can provide each month, so only sign up if you are reasonably certain you can eventually finish the course. [The first 15 of the course's 50 videos are free on YouTube if you want to preview them.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

YOU CAN ALSO WATCH THE VIDEOS WITHOUT SIGNING UP FOR THE COURSE. All of the videos on the course webpage have ""preview"" turned on. Scroll down to find and click ""Expand All Sections"" and then click the preview link. You won't have access to the forums and other materials, but you can watch the videos.

Instead of having unlimited free sign ups for 6 days per month, Udemy only lets me make 2,000 free sign ups per month. >:(

**NOTE: Be sure to BUY the course for $0, and not sign up for Udemy's subscription plan. The subscription plan is free for the first seven days and then they charge you. It's selected by default. If you are on a laptop and can't click the BUY checkbox, try shrinking the browser window. Some have reported it works in mobile view.**

Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.

Some people in India and South Africa get a **""The coupon has exceeded it's maximum possible redemptions""** error message. [Udemy advises that you contact their support if you have difficulty applying coupon codes, so click here to go to the contact form.](https://support.udemy.com/hc/en-us/requests/new?type=student)

**I'm also working on another Udemy course** that follows my recent book ""Beyond the Basic Stuff with Python"". So far I have [the first 15 of the planned 56 videos done. You can watch them for free on YouTube.](https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&index=1)

Side note: My latest book, Python Programming Exercises Gently Explained is a set of 42 programming exercises for beginners [for free](https://inventwithpython.com/pythongently/) or as a [99 cent ebook](https://www.amazon.com/Python-Programming-Exercises-Gently-Explained-ebook/dp/B0BGYJ7G6T/).


**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",1667670707.0
"2,000 free sign ups available for the ""Automate the Boring Stuff with Python"" online course. (May 2023)",517,134qyul,learnpython,https://www.reddit.com/r/learnpython/comments/134qyul/2000_free_sign_ups_available_for_the_automate_the/,69,"UPDATE: The codes are all used. But you can still watch [the first 15 videos on YouTube](https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&index=1) and also watch the rest on the course page on Udemy. Scroll down to find and click ""Expand All Sections"" and then click the preview link for each video.

If you want to learn to code, I've released 2,000 free sign ups for my course following my Automate the Boring Stuff with Python book (each has 1,000 sign ups, use the other one if one is sold out): 

~~https:// udemy. com/course/automate/?couponCode=MAY2023FREE~~

~~https:// udemy. com/course/automate/?couponCode=MAY2023FREE2~~

Udemy has changed their promo code and severely limited the number of sign ups I can provide each month, so only sign up if you are reasonably certain you can eventually finish the course. [The first 15 of the course's 50 videos are free on YouTube if you want to preview them.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

YOU CAN ALSO WATCH THE VIDEOS WITHOUT SIGNING UP FOR THE COURSE. All of the videos on the course webpage have ""preview"" turned on. Scroll down to find and click ""Expand All Sections"" and then click the preview link. You won't have access to the forums and other materials, but you can watch the videos.

**NOTE: Be sure to BUY the course for $0, and not sign up for Udemy's subscription plan. The subscription plan is free for the first seven days and then they charge you. It's selected by default. If you are on a laptop and can't click the BUY checkbox, try shrinking the browser window. Some have reported it works in mobile view.**

Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.

Some people in India and South Africa get a **""The coupon has exceeded it's maximum possible redemptions""** error message. [Udemy advises that you contact their support if you have difficulty applying coupon codes, so click here to go to the contact form.](https://support.udemy.com/hc/en-us/requests/new?type=student) If you have a VPN service, try to sign up from a North American or European proxy.

**I'm also working on another Udemy course** that follows my recent book ""Beyond the Basic Stuff with Python"". So far I have [the first 15 of the planned 56 videos done. You can watch them for free on YouTube.](https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&index=1)

Side note: My latest book, Python Programming Exercises Gently Explained is a set of 42 programming exercises for beginners [for free](https://inventwithpython.com/pythongently/) or as a [99 cent ebook](https://www.amazon.com/Python-Programming-Exercises-Gently-Explained-ebook/dp/B0BGYJ7G6T/).


**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",1682957960.0
Created my first major project with python 🎉,516,nh8klg,learnpython,https://www.reddit.com/r/learnpython/comments/nh8klg/created_my_first_major_project_with_python/,64,"Hey everyone! I've been learning python for about a year and a half now and I finally have something to show for it! I decided to create a website using Django and bootstrap. It's made for students in the pandemic where you could search or create a study group! If you would like to check it out and leave some feedback that would be amazing!

github: [https://github.com/Vortes/Study-Buddies-Open](https://github.com/Vortes/Study-Buddies-Open)

site: [https://studybudds.com/](https://studybudds.com/home/)",1621537375.0
Is python a good programming language for a freelancer,507,hc3scu,learnpython,https://www.reddit.com/r/learnpython/comments/hc3scu/is_python_a_good_programming_language_for_a/,150,"Hello everyone, I am 13 years old and I have already been programming python for almost 1.5 years.
I really like to do it and I hope to make my job out of this eventually.
I also really like traveling and so I started thinking of what I could do in the future.

I have been searching and the closest I could find was a freelancer.
My ideal job is to be independent so that I can finish the programs I am supposed to finish no matter where I am.

Is there in this subreddit anyone who has does this kind of job and who could tell me their experience and how they started?

Edit: Thank you all very much,
I really appreciate all your positive and motivating comments.
I will keep on learning programming in order to reach my goal.
Which is to combine programming with traveling.",1592584089.0
The basics so basic they don't even teach it,508,e0s4fw,learnpython,https://www.reddit.com/r/learnpython/comments/e0s4fw/the_basics_so_basic_they_dont_even_teach_it/,92,"What is an environment, whats a configuration?

&#x200B;

I keep seeing terms like these and a bunch of other stuff in Python courses I take, but no one takes the time to explain how Python even works on my computer. Are there any videos you can suggest that talk about not how to program with Python but what an environment is and why I have both a terminal and IDLE. Explaining Python even functions on my Mac.

&#x200B;

thanks!",1574561378.0
Looking for a student to help with Python basics,516,jrjt03,learnpython,https://www.reddit.com/r/learnpython/comments/jrjt03/looking_for_a_student_to_help_with_python_basics/,60,"Hello. I want to mentor someone who is struggling as a beginner.

I have graduated as a software engineer, now working in gamedev. I've taught for a few years in my local university (SQL + database design) and enjoyed working with freshmen.

I want to guide someone who already can write few lines of code, but struggle with more. It is much easier to learn when you can just ask a tutor, or when your code is frequently reviewed. I can help with Python fundamentals - data types, functions, loops, classes, basic program structure, etc. We'll do voice call with screen sharing as well.

It's free, no strings attached. Downside: English is not my native language, my speech is clumsy, my grammar can be weird. If it is ok with you, PM me your background, needs and goals (including some of your recent code will help).

*UPD:* Please give me some time to answer and sorry for delays, there are a lot of messages already! I might not be able to answer everyone.",1605009839.0
I made my first website using Python!,516,i0k9s8,learnpython,https://www.reddit.com/r/learnpython/comments/i0k9s8/i_made_my_first_website_using_python/,129,"# Ocean Personality Visualization

----------

**Website Link**: https://ocean-pv.herokuapp.com/

**Repo Link**: https://github.com/IgnisDa/ocean-pv/

EDIT: u/_fimin had this idea, here's an account if you don't want to login but still check it out:

**Username**: Kcliix

**Password**: notacommonpassword 

However, it'd make my day if you made your own account. 

-------

After about three (or was it four?) months, I proudly present to you,
my first major python project, a website called **Ocean Personality
Visualiztion**. Before this, I made a small Hangman game as my first
project and then a cli based login system. 

I used Django as my web framework, and a free HTML template I grabbed
off the internet (I have no frontend experience). That might be a
reason why the website still looks kinda sloppy.



Though I have made a thorough README explaining what the website 
does, I will explain it a bit here.

> A website to visualize your personality using graphs and compare it 
> with others. It asks you a series of questions and analyzes your 
> inputs to create an easy to understand graph. It also provides you 
> an easy way to share these results with your peers and compare your 
> personalities. It is based on the OCEAN personality model which is 
> the most acceptable model to measure personality used by researchers.

What all did I learn from this major (to me) project?

* The actual website development and how different components go 
  together to make a functioning website.
* I need to learn Javascript.
* Deployment is hard- I tried to go the hard way at first by not
  choosing Heroku (it streamlined the process a lot) but I had to scramble back to it because how hard it is to deploy a dynamic website.
* How awesome and Python is as a programming language. I absolutely
  adore it.
* Documentation sucks
* Testing sucks

Anyways, I am still mighty proud of what I have done and I invite you
all to checkout the website and provide some feedback. If you'd like
to make any pull requests, the repo link is above.

***PS***: If anyone can help me fix my tests, I will be forever
grateful to you.",1596107853.0
Struggling With Masters Due To Depression,515,ll40a9,learnpython,https://www.reddit.com/r/learnpython/comments/ll40a9/struggling_with_masters_due_to_depression/,136,"Hi Guys, I’m not sure if this is the right place to post this. If not then I apologise and the mods can delete this. I just don’t know where to go or who to ask. 

For some background information, I’m a 27 year old student who is currently studying for her masters in artificial intelligence. Now to give some context, my background is entirely in education and philosophy. I applied for AI because I realised that teaching wasn’t what I wanted to do and I didn’t want to be stuck in retail for the rest of my life. 

Before I started this course, the only Python I knew was the snake kind. Some background info on my mental health is that I have severe depression and anxiety that I am taking sertraline for and I’m on a waiting list to start therapy. 

My question is that since I’ve started my masters, I’ve struggled. One of the things that I’ve struggled with the most is programming. Python is the language that my course has used for the AI course and I feel as though my command over it isn’t great. I know this is because of a lack of practice and it scares me because the coding is the most basic part of this entire course. I feel so overwhelmed when I even try to attempt to code. It’s gotten to the point where I don’t know how I can find the discipline or motivation to make an effort and not completely fail my masters. 

When I started this course, I believed that this was my chance at a do over and to finally maybe have a career where I’m not treated like some disposable trash. 

I’m sorry if this sounds as though I’m rambling on, I’m just struggling and any help or suggestions will be appreciated.",1613482889.0
I wrote my first program today!,513,hqfo7m,learnpython,https://www.reddit.com/r/learnpython/comments/hqfo7m/i_wrote_my_first_program_today/,75,"I'm a couple of days into learning Python and today I wrote my very first program for an idea I came up with myself, not because the book told me to!

It's a program to determine the value of the discriminant and x in an equation that follows ""ax² + bx + c = 0"", anyway here's the code:

    # This is for calculating the discriminant when trying to find x in ""ax² + bx + c = 0""
    import math
    try:
        print(""a?"")
        a = int(input())
        print(""b?"")
        b = int(input())
        print(""c?"")
        c = int(input())
        def discr(a,b,c):
            discriminant = b ** 2 - 4 * a * c
            if discriminant < 0:
                print(""Discriminant ="")
                print(discriminant)
                print(""No value for x possible"")
            elif discriminant == 0:
                print(""Discriminant ="")
                print(discriminant)
                print('x =')
                print((-b)/(2*a))
            elif discriminant > 0:
                print(""Discriminant ="")
                print(discriminant)
                print('x = ')
                print((-b + math.sqrt(discriminant))/(2*a))
                print('x = ')
                print((-b - math.sqrt(discriminant))/(2*a))
        discr(a,b,c)
    except ValueError:
        print(""That's not a number"")

&#x200B;",1594648510.0
Ain't much but I MADE MY OWN GAME USING PYTHON AND I JUST LEARNED PROGRAMMING FOR THE FIRST TIME 4 WEEKS AGO.,507,10po3v9,learnpython,https://www.reddit.com/r/learnpython/comments/10po3v9/aint_much_but_i_made_my_own_game_using_python_and/,89,Ain't got got many people to share it with. I Appreciate you guy's help.,1675138463.0
Is Corey Schafer good?,507,i41iob,learnpython,https://www.reddit.com/r/learnpython/comments/i41iob/is_corey_schafer_good/,168,"Is Corey Schafer a good youtuber to watch to learn python? Im new and im deciding whether or not to watch Corey Schafer's python playlist or this video https://youtu.be/4F2m91eKmts 
Pls let me know whether to watch that video or corey scafer's python playlist",1596615921.0
Where can I learn how to structure a Python project?,506,gzf3b4,learnpython,https://www.reddit.com/r/learnpython/comments/gzf3b4/where_can_i_learn_how_to_structure_a_python/,45,As of now every project on my github is just 1 or 2 Python files. I’ve looked at many different projects on github and the majority of them have many different folders and files and I have no clue what their purpose is. Where can I read about properly structuring a Python project?,1591673680.0
"PSA: If you have a library card, you probably have access to Lynda.com, which has tons of Python courses",508,6rrsdu,learnpython,https://www.reddit.com/r/learnpython/comments/6rrsdu/psa_if_you_have_a_library_card_you_probably_have/,33,"Lynda.com is one of those training/education websites like Coursera & Udemy. An account is usually around $30 per month, but a lot of libraries have an account you can use to access all the courses for free! So if you have a library card, you can log on to Lynda with it! 

I'd recommend going to your libraries website and searching for their link to Lynda. Log in through that link. Once you're logged in, just search for Python and tons of stuff comes up.

Wanted to let the sub know because if you're library has an account it's a valuable source of training available to you!",1501940282.0
what stuff could i write in python that would be useful in everyday life?,508,nkr1t9,learnpython,https://www.reddit.com/r/learnpython/comments/nkr1t9/what_stuff_could_i_write_in_python_that_would_be/,114,"ive been learning python for a few days now, and im enjoying it. very interesting stuff.
what stuff could i make when I'm bored? or something useful that i would use quite often?",1621952896.0
Can someone tell me why many posters delete their original post once they receive their solution?,505,fztytm,learnpython,https://www.reddit.com/r/learnpython/comments/fztytm/can_someone_tell_me_why_many_posters_delete_their/,100,"I have been on this group for awhile now and have (can say frequently) posted suggested solutions when I see people struggle with their coding problems or need some advice, but what I don't understand is **""WHY ARE THEY DELETING THE ORIGINAL POST ONCE THEY HAVE GOT THEIR SOLUTIONS?""** I see this ""symptom"" happened pretty often, especially with newcomers. Not trying to be rude or anything, but when we helped someone with a problem, I thought it is because we want our solution to be seen by others so other members can learn from other people's mistakes and problems.

Can someone explaining the reason behind this ""I am deleting my post since I have got my answer now"" symptom.?",1586684923.0
MIT's Introduction to Computer Science and Programming Using Python starts today.,500,6x3tjg,learnpython,https://www.reddit.com/r/learnpython/comments/6x3tjg/mits_introduction_to_computer_science_and/,86,"I'm going to be taking this to help me learn python. 

If anyone else is interested the link is below and there is a [slack support group](https://join.slack.com/t/redditmitedxpython/shared_invite/MjMyNDc3ODk0MTEzLTE1MDM5NzY4OTMtY2E3ZDYzMDQ1Yg) running for all those who want to take it. 

[Course Link](https://www.edx.org/course/introduction-computer-science-mitx-6-00-1x-11)",1504142911.0
Do programmers save chunks of code for repeated use?,499,g8rvag,learnpython,https://www.reddit.com/r/learnpython/comments/g8rvag/do_programmers_save_chunks_of_code_for_repeated/,142,For example if I had an amazing figure template on matplotlib that I might want to use again is there a repository where you should put these things ?,1587954486.0
Just a random story for anyone who cares or needs inspiration.,496,nss766,learnpython,https://www.reddit.com/r/learnpython/comments/nss766/just_a_random_story_for_anyone_who_cares_or_needs/,39,"I recently started my first job as a programmer with a Web design company. I'm not super interested in Web design specifically but I've been able to talk my way into coding with python for the purpose of webscraping.

I've never considered myself great at python, I still have to Google basic stuff every now and then, but the pride I now feel is overwhelming as I'm actually building something useful.

I'm making a tool that activates every hour to check each of our sites for any console, font, and many other kinds of errors. 

The point is, imposter syndrome never goes away. But if I can do it, I know you can!",1622886335.0
A small collection of things to learn and do that might be more useful than OOP,500,hgua1s,learnpython,https://www.reddit.com/r/learnpython/comments/hgua1s/a_small_collection_of_things_to_learn_and_do_that/,65,"Object oriented programming is just one of many schools of thought, yet many beginners get the impression that OOP is the pinnacle of Python programming. Then they go to this sub and ask ""how to learn/practice classes/OOP"", which is like ""give me a nail for my hammer"".  They ask that because they have not yet run into any situation where using classes OOP style is actually a solution to their problem. In fact, in my daily work, while I write lots of classes, very rarely has the reason for doing so anything to do with OOP!

That's why I propose a small, non-exhaustive list of things for beginner Python devs to learn and do that will pay off long before learning OOP will.

Note that in the course of learning these things, classes will organically come up several times where they are actually useful, not just because of the moral imperative that one ought to use classes.

**Typing**

[Typing](https://docs.python.org/3/library/typing.html) in concert with a static [type checker](http://mypy-lang.org/) will allow you to catch certain errors before even running the program. They also make your code easier to reason about for other people. You can also autogenerate docstrings for typed functions and methods.

Typing really becomes useful when you start making use of [dataclasses](https://docs.python.org/3/library/dataclasses.html). Instead of mindlessly passing dictionaries around, you can now express that you want data with certain fields of certain types. With libraries like [Pydantic](https://pydantic-docs.helpmanual.io/) or  [Dacite](https://github.com/konradhalas/dacite) you can now also validate your data at runtime which is huge if you get data from an external source. The framework [FastAPI](https://fastapi.tiangolo.com/) will even automatically generate API documentation from your types.

**Testing**

Learn to write automated tests and develop the discipline to actually write them.  [Learn Test Driven Development](https://www.obeythetestinggoat.com/pages/book.html#toc). It forces you to write testable code and it's a lot harder to write bad code under the constraint of it being testable.

**Use linters and formatters**

This is really low hanging fruit. I suggest [Black](https://github.com/psf/black) for formatting and [https://flake8.pycqa.org/en/latest/](https://flake8.pycqa.org/en/latest/)  for linting. Run both regularly on your code and fix the things flake8 complains about. Your code will be better in quality and easier for others (and yourself in 3 months) to read.

**Read a styleguide**

Like [the Google Python Styleguide](http://google.github.io/styleguide/pyguide.html) and read all of it.

**Read the official Python documentation. Practice reading documentation as opposed to watching tutorials**

At some point in time, you should have read all of this [https://docs.python.org/3/tutorial/index.html](https://docs.python.org/3/tutorial/index.html)

Once per week  read up on one of the [built-in functions](https://docs.python.org/3/library/functions.html).

Occasionally, pick a random part of the  [standard library](https://docs.python.org/3/library/index.html) and try to find something useful in there. You'd be surprised!

**Read about application-level software architecture**

I recommend  [Architecture Patterns with Python](http://www.cosmicpython.com/book/preface.html).

**Expose yourself to a well-balanced mix of schools of thought about programming**

That includes but is not limited to OOP, functional programming, domain driven design, looking at different type systems and a lot more.

Edit: typo",1593267440.0
5 Common Python Mistakes and How to Fix Them,495,bg58gt,learnpython,https://www.reddit.com/r/learnpython/comments/bg58gt/5_common_python_mistakes_and_how_to_fix_them/,46,"I make Python videos on YouTube and get a lot of questions every day. I found these 5 mistakes to be common problems, especially for those who are learning Python. Hope some of you find this helpful. Video [here](https://youtu.be/zdJEYhA2AZQ):

 [https://youtu.be/zdJEYhA2AZQ](https://youtu.be/zdJEYhA2AZQ)  


Cheers",1555956175.0
TIL Python 3.9 is the end of Python 2 compatibility. Time to upgrade any old code to Python 3,494,nvch4m,learnpython,https://www.reddit.com/r/learnpython/comments/nvch4m/til_python_39_is_the_end_of_python_2/,47,"Python's been great about supporting Python 2 code in Python 3. But it looks like that's about to be over.

[What’s New In Python 3.9 — Python 3.9.5 documentation](https://docs.python.org/3/whatsnew/3.9.html) says:

>Python 3.9 is the last version providing those Python 2 backward compatibility layers

To check your code, run python3 with '-W error'.

    python3 -W error myprogram.py

This will only check the code that runs. So it's best to run a good test suite.

The python devs have done a great job of managing compatibility.",1623181255.0
The best moment ever. The moment when it finally clicks.,493,hhu0zj,learnpython,https://www.reddit.com/r/learnpython/comments/hhu0zj/the_best_moment_ever_the_moment_when_it_finally/,74,"I feel good and I just wanna talk about it.

I'm teaching my self python using the Python Crash Course book, and it has been a blast. Today, I finished a small portion of the Alien Invasion project. At first, nothing made sense (even though I had a really good understanding of classes and functions), it looked like a huge mess. 

Everytime the author would try to simplify/refactor code and stuff like that, it would look even more complicated. After every line of code that I copied I would just think ""this is not for me."" After I decided I was done copying for the day, I let out a fat fart, which motivated me to understand the code no matter what. All this work wasn't gonna go for nothing. 

So I sat down (I was already sitting down) and pushed myself to understand what every line of code meant and what it did. I went over the code a few times and suddenly, it all clicked. Man my brain had an orgasm or something cuz that was the smartest I've ever felt in a minute.

I love Python. I love programming. To all of you out there that are struggling with a concept, don't give up, because if my sleep-deprived ass can understand something, you can too.",1593408370.0
For those of you struggling to think of a project,493,wc9i15,learnpython,https://www.reddit.com/r/learnpython/comments/wc9i15/for_those_of_you_struggling_to_think_of_a_project/,37,"I'm not sure if this has been posted on here before, but if you are new and struggling to find a project to work on, go on Upwork/Fiverr and look at what people are trying to find freelancers for. Some of those listings will be for things you aren't capable of, but it will help you develop your skills.",1659220894.0
"""Do I need to know math to be a programmer?""",496,d6upsu,learnpython,https://www.reddit.com/r/learnpython/comments/d6upsu/do_i_need_to_know_math_to_be_a_programmer/,160,"We see this question pop up from time to time.  I had an experience at work today that I think exemplifies the answer to this question. I work as an IT tutor for a local college and thus I handle the intro to programming classes. So I had an appointment today.

The student was having trouble with their assignment. 

Okay, no biggie. Everyone has trouble with something. So we get to work. 

 The assignment is to build a program that prompts the user for the  measurement of the radius of a circle, performs the calculation to  determine the area of a circle with that radius, and display said area.  the instructions even include code to import the python math library,  assign a value from the Pi function of said library, and the formula  Pi(r)\^2.

I look at their program.

They have imported Math.  
They have Pi assigned to a variable.  
They have a variable asking the user for a number  
They have a variable named ""area"" currently set to '100'.  
They have a print statement to cast the value of area to a string, and then print said value.

Notice what they don't have? Yeah, any point where the area is  calculated. Now if this was just a case of they hadn't worked with basic  geometry in 5 years I could just let it go. Sometimes people just need a  reminder of what ""Pi(r)\^2"" does, or what Pi is and it's relevance to  circles. But no, not this individual. 

When I was working with them to understand this, they asked why they needed to know it when the computer should do all that work.

So as far as the 'Do I need to know math to be a programmer?' question, I think this is a perfect example of  while you don't need to know advanced mathematics to be a programmer,  you do need to be able to deconstruct a problem and understand what  needs to be done to solve it. That is the foundational concept of  mathematics.",1568985137.0
"Today I wrote a program that 2x/day records the subscriber count of my favorite subs I mod, prints to the terminal, appends a document, and then emails me an update. You all have been invaluable to my learning, and I can't tell you how much appreciate everything...",489,cmdy86,learnpython,https://www.reddit.com/r/learnpython/comments/cmdy86/today_i_wrote_a_program_that_2xday_records_the/,46,"I left a career in psychiatry after a car accident caused by a texting driving put me out of commission for several months. I decided to move into a new career in programming. We moved crosscountry to a new state where we knew no one a few months after the accident, and I was trying to figure this all out on my own while dealing with a lot of stuff that was making it harder than it had to be. Hours spent googling, trying, and failing when I couldn't even type for very long in the first place from breaking the stereo with my hand  took a toll on me. Then I find you guys. I wasn't alone trying to figure this out anymore.

I seriously can't tell you how much I appreciate you all for helping us noobs. I can't wait to reciprocate.

&#x200B;

tl;dr: Life can suck, you all rock. Thanks!

As requested, here is the GitHub repo for [subcounter\_public](https://github.com/GrizzledLabs/subcounter-public)!

&#x200B;

Also as requested here are links to my [Trinket.io](https://Trinket.io) projects you can interact with and review the code. Some of these are better than others as they were written and never updated, but I enjoyed them!

[Rock Paper Scissors game that keeps score](https://trinket.io/library/trinkets/fce2f04579)

[DnD Character Roller that I will eventually add more to choose an ideal class based on the stats rolled](https://trinket.io/library/trinkets/3aab09c0e1)

[Roll & Flip a custom dice roller  and coin flipper](https://trinket.io/library/trinkets/633238df3b)

[Password Generator that can do 3 levels of security](https://trinket.io/library/trinkets/7e9ee94b28)

[Wookiee Name Generator](https://trinket.io/library/trinkets/6ab03eaf6f)

[Snarky number guesser game](https://trinket.io/library/trinkets/c69cdc6822)

[Four letter word game generator](https://trinket.io/library/trinkets/d8628c4903)

[Shakespeare Insult Generator](https://trinket.io/library/trinkets/384afd0809)

[Pin generator](https://trinket.io/library/trinkets/00754ec904)",1565025829.0
Wrote my first program to be used in our company!,487,snuyj3,learnpython,https://www.reddit.com/r/learnpython/comments/snuyj3/wrote_my_first_program_to_be_used_in_our_company/,68,"I can't believe it! I have wrote a simple program and will be implemented by our company!I've always been fascinated by technology in general. However, I took the accounting path and profession.

I have no prior coding knowledge but Python is so easy to understand even for an accountant ;)

Although I've been watching Python tutorials and videos for so long, I've never used it in practice.Last week, I was given an opportunity to use it in my job. The task was to automate formatting and vlookup of 2 excel sheets.

I know that this could have been done using excel itself but they've been using another program written in python as well by a former employee. It was written back in 2015 and a lot has changed since then in the company process.

I'm just so happy that it worked out!

I used pandas, numpy, and tkinter to accomplish this project.Converted it to .exe using autopytoexe.

I hope that more projects will be given my way as I truly enjoy coding.I'm looking into making a new application with database and propose it to my manager so that we can move away from using an excel sheet with about 3,000 lines just for record keeping.

&#x200B;

Here's the premise of the problem:  
[What the problem looks like and the look of output.](https://www.reddit.com/r/learnpython/comments/snuyj3/wrote_my_first_program_to_be_used_in_our_company/hw6q3rp/?context=3)

&#x200B;

Sorry! I still don't know if I can share the code.",1644354616.0
I want to teach my 13 year old programming. He has the mind for it as he is very logical like his dad. Is Python a good choice? Or is there something else that would be better?,488,mv69n5,learnpython,https://www.reddit.com/r/learnpython/comments/mv69n5/i_want_to_teach_my_13_year_old_programming_he_has/,189,"I want to teach my 13 year old son programming. What is the best language with the easiest with fastest results today?  Is Python a good choice?

I learned programming in BASIC on the Atari then AMIGA Basic and Q-Basic (Gorilla etc) back in the 1980's and 1990's.  It was a lot of fun, but these days BASIC isn't really around anymore, and there are probably much better choices to begin with.  Over the decades I've done C/C++/ObjC/x86asm/Java/Go-lang/Ruby and a few others, but I'm fairly new to Python however it is easy for me to pick up. 

1) Is Python is a good choice to teach him?  What gaming framework or libraries should we use?  It seems like Python has very good readablity and syntax for a young mind to grasp.  

2) If not Python, what do you guys think instead?  

3) I learned by modifying existing games in BASIC instead of writing things from scratch.  I would change a few variables, numbers, etc and see how that changed the game.  Is there an existing Python game we should modify?  Or should we start with the basics, e.g. Hello World. ... Ask for the player name or age, do some basic math... then load up some sprites on the screen and move them around?

He wants to make Minecraft Mods at some point but I believe from my experience, that it is too tall of an order to begin with.  So looking for a much simpler platform to create some basic 2D games with.

Finally, I want to add we are not in the same physical location.  So we will be using Discord for voice chat and likely Teamviewer for screen sharing.  If you have any suggestions around this, e.g. something better than teamviewer, please let me know.

Thank you for all your ideas!",1618971762.0
Advent of Code,486,k44u8o,learnpython,https://www.reddit.com/r/learnpython/comments/k44u8o/advent_of_code/,54,"[Advent of Code](https://adventofcode.com/) starts tomorrow. If you don't know, it's 25 programming puzzles released daily from the 1st-25th of December. It's a good way to practice Python if that's something you're interested in (or any other language, for that matter).",1606769209.0
Python is kicking my butt,487,lvcqlf,learnpython,https://www.reddit.com/r/learnpython/comments/lvcqlf/python_is_kicking_my_butt/,120,"I’ve been learning python since early December now.. I seemed to become comfortable with the syntax and was gaining confidence quickly! 

Then I moved on to Django and was quickly sent a reality check as the difficulty level increased really fast... I went back to python and started learning classes... this also is extremely hard to grasp.. 

While learning classes I realized I didn’t know for loops.. dictionaries.. len/range() nearly as much as I thought I did... the  confidence I so quickly built is now gone.

I know the journey to web dev isn’t going to be easy at all.. I’m not giving up.. just wanted to get this off my chest.. I’m going back to the basics this week. Wish me luck. Have a nice week!",1614614375.0
Project ideas for those interested in doing something cool while learning Python,482,jmwwhe,learnpython,https://www.reddit.com/r/learnpython/comments/jmwwhe/project_ideas_for_those_interested_in_doing/,48,"Hey everyone, we all are always asking about some good projects to get into while we learn to write Python (myself included). So, I figured I would share my latest idea (haven't started yet), as well as some others that I've done in the past. Let's have a discussion about some of the other things you've each done!

My latest idea is as follows. Backblaze, a cloud backup solution company (no affiliation), for about 7 years has been publishing data on hard drive failure rates from their datacenter ([here](https://www.backblaze.com/b2/hard-drive-test-data.html)). What's interesting is that in addition to a blog post about the data, they also provide the raw data, in CSV format that their software generates. You can read more at the link, but basically they have a row for each hard drive every day, along with the drvie details, whether the drive has failed or not, and SMART stats for each drive. I'm thinking it would be cool to practice pandas and take this data and do some plotting and such, and maaaybe try some machine learning stuff to see if we can predict if certain SMART attributes are better predictors of failure than others. There have been studies on this kind of thing before, but it could be an opportunity to learn more about some nerdy stuff like hard drive failure rates, pandas, matplotlib, and SMART stats.

Some of the other projects I've done are:

\- [a very small program to search the graphics card prices on newegg](https://github.com/mokrunka/neweggparsing/blob/master/practice.py)

\- [another small program to plot data from the federal election commission on donations per candidate per state (need to download your own raw data)](https://github.com/mokrunka/electiondata/blob/master/newelectiondonations.py#L5)

\- [a fun little tool to extract the temperature data reported by my raspberry pi running pi-hole (network level ad blocker)](https://github.com/mokrunka/FileMgmt/blob/master/temp_tracking.py)

\- [a friend of mine has a problem where he had a directory filled with millions of small files. this will delete them (use at own risk of course, always backup your data, etc.)](https://github.com/mokrunka/FileMgmt/blob/master/FileMgmt.py)

\- [if you're interested in data, here's another github link of a bunch of big datasets](https://github.com/awesomedata/awesome-public-datasets)

E: wow friends! This got a lot more traction than I thought. Thanks for all the awards and let’s keep the suggestions coming!",1604353285.0
Noob rant: Am I really supposed to just know how to create TicTacToe from scratch?,482,ggd2lz,learnpython,https://www.reddit.com/r/learnpython/comments/ggd2lz/noob_rant_am_i_really_supposed_to_just_know_how/,145,"I realized this is why I never get anywhere with programming. I learn and learn and maybe do some simple things, but once it comes down to ""do a fibonacci function"" or ""create TicTacToe"", ""create a calculator""... I just CANT. I don't have that kind of thinking. And then I get depressed and angry at myself and give up for another year. It might be that time again. What's the point of going through all of Corey Schafers videos when I can't apply the simplest things once it comes down to creating something. 

Am I really that stupid and everyone is able to do these thing from scratch?

I actually gave up exactly on TicTacToe last time too.

Idk where I'm going with this, I guess I just want to know if people are really able to do this just like that, without googling the solution.

Makes me feel incredibly stupid and defeated once I Google it and its a 2 minute thing

**EDIT**: Thanks everyone for so many helpful comments! Im reading them all and will take the advice to heart",1589019672.0
"I am a self taught programmer developed my very own Jarvis, called Stephanie, an open source virtual assistant built to control and automate any task and so can you!",479,6ghxgg,learnpython,https://www.reddit.com/r/learnpython/comments/6ghxgg/i_am_a_self_taught_programmer_developed_my_very/,27,"[Stephanie](https://slapbot.github.io) is an open-source platform built specifically for voice-controlled applications as well as to automate daily tasks and hence imitating much of an virtual/personal assistant's job. It is written in python and I call it more as a framework than an application.

There are lots of amazing things about Stephanie, and I'd be listing few of them.

- **Beginner Friendly** - The Ultimate goal of this project is to create a general awareness among all sorts of people irrespective of their career background to get them interested in 'building something cool', that's why installation is made quite simpler but not the simplest to help general public learn programming in a very different way where they could feel they are making something cool while learning the essence of programming.
- **Minimal Hardware Requirements**, seriously, you got a machine? windows or linux? a speaker of any sort? headphone, headset and a mic which could be anything like inbuilt, bluetooth or just connect a freaking phone.

- **Privacy**, Stephanie offers lots of engines to adjust your privacy as needed, in contrast to other commercial based applications which tracks all of your data (listening everything)

- **Difference**,  Now you must okay dude, but how is it different from siri, cortana or echo and other commercial softwares?  Well first of all Stephanie is completely open source, even the algorithm which is used to predict the intent (I've written a paper on it which I would highly recommend to anyone interested in this link :  https://slapbot.github.io/documentation/resources/algorithm ) is open-sourced so basically you are using a software which is community driven.

- **Modules**,  So since Stephanie is completely open-source, you can integrate it with lots of public/private API's to take the application to new level, don't believe me, check out some of it's functionality.

Let's take a brief look at social networks, shall we? How about twitter eh?

***You***: Hey Stephanie, Do I have any twitter Notifications?

***Stephanie***: Your latest tweet has been favorited by 20 people, whereas @rayhudon mentioned you stop swooning over real madrid, they ain't gonna win 3 CLs consecutively, that's nuts.

(You can tweet something with the help of stephanie too, similarly I won't be talking about each one, since there are too many functionalities but you are welcome to check it for yourself.)

Okay so How about facebook? Do you ever forget your friends birthdays? well fear not, Now Stephanie got your back.

***You***: Hey Stephanie, Do I have any birthday reminders?

***Stephanie***: Oh Yes! your friend Karan Sachdeva has a birthday today.

Wanna write something in facebook as a wall post to show off among your friends? Cmon be humble dude.

***You***: Hey Stephanie, I wanna do a status update on facebook.

***Stephanie***: So, What's on your mind?

***You***: How can mirrors be real if our eyes aren't real.

***Stephanie***: 'How can mirrors be real if our eyes aren't real.' has been put up as wall post.

Now again this is just social networks, there are many more modules to work with, for instance: Ever wanna note something on fly? no worries mate, your **Evernote** Account got your back with it's integration, or maybe you want your unread emails? **gmail** is there for you, **weather updates**? forecast? *latest news** information, forget to wish your mom on mother's day? sync your **google calendar** man. Are you a movie-freak? Jesus, **imdb** got you, **Restaurants suggestions**? **Wikipedia**? **Quick Answers** to general IQ questions? And My personal favorite **Football** Module which has alone more than 30 functions to let you daydream your favorite football team or league.

**DEVELOPER FRIENDLY**,  Now this is the real deal right here, The reason I call it Jarvis v2.0 is because  I believe Stephanie more as a framework than an application and with it's extensive documentation  and a really cool interface you can built one of the most complex and intricate programs with it, Honestly, I feel a person can even create an  enterprise based application from it. The Developer guide written is basically for programmers to guide them on the process of how to write their own modules and extend the functionality of Stephanie, wanna sync up your Quora account? Reddit? Some obscure internet forum? Control your Air Conditioner? Door handles? Wifi Routers? Cool just write your own module and integrate with  Stephanie using a really nice interface which gives you all the functionality needed to built it out of the box.
-

Or maybe you just wanna integrate some other guy's written module? Awesome with a community and easy integrate methods, do whatever with Stephanie, change it's name to Munni or stick with the current one, It's 100% customizable and the decision is in your hands.


Finally, this is a video where I kind of explain about Stephanie, with few demonstrations if anyone is interested and doesn't wanna read up this post.

https://youtu.be/Pp5dXbWZsrU?t=1m40s

And at the last, the link to main website to know more about it :-
https://slapbot.github.io/
As well as the link to algorithmic paper : https://slapbot.github.io/documentation/resources/algorithm/

Github repo of Stephanie: https://github.com/slapbot/stephanie-va
Github repo of Sounde: https://github.com/SlapBot/sounder",1497132535.0
My mom offered to pay for a python/programming course - should i take it or try to learn myself?,483,maqihc,learnpython,https://www.reddit.com/r/learnpython/comments/maqihc/my_mom_offered_to_pay_for_a_pythonprogramming/,157,"This morning my mom called me and told me that her friend's son took part in (not a cheap one) a python course and now he has a well-paid job. I wanted to learn python myself but i kind of don't have time right now( bachelor thesis).

So I wanted to ask, is this a waste of money? Or more like - should I accept my mom's offer or it's not worth it and try to learn python myself?

I study finance so I have probability and statistics and I'm gonna have c++ and python in the next semester if that matters

EDIT: Okay that was my bad i shouldn't have said that i have bachelor thesis: the offer still stands after i finish writing it.",1616427581.0
I'm learning Python without any education in Computer Science — what books should I read to gain a greater understanding of CS?,483,i6v4es,learnpython,https://www.reddit.com/r/learnpython/comments/i6v4es/im_learning_python_without_any_education_in/,95,"I'm a few weeks into my journey learning Python. It's my first programming language, and I'm excited. Well... excited and terrified. 

Excited by the adventure. But terrified by the amount of work that awaits. 

It feels like I'm setting out to climb Mount Everest. And with every day of climbing, I get slightly further on the journey. But I also get a clearer view of the mountain ahead, and a better awareness of just how much I don't know.

Anyway, I suspect that since I don't have a background in CS, it may help to step back from ""the mountain climb"" of Python for a bit. To learn some fundamentals of Computer Science or ""computational thinking"". 

I recently read and enjoyed ""Understanding the Digital World"" by Brian W. Kernighan. It's an overview of computers and the internet for someone without a background in CS.

Can anyone recommend other books like this, which may be of assistance on my climb? Thanks!",1597021361.0
How does one learn to make well-structured programs? Mine are dumpster-fires.,473,join1y,learnpython,https://www.reddit.com/r/learnpython/comments/join1y/how_does_one_learn_to_make_wellstructured/,98,"So I just (kind-of) finished reading Automate The Boring Stuff With Python, and for the past month I've felt like a big-brained super-hero automating myself out of a job (Data Analyst). 

The problem is, I feel I missing something along the way. I don't understand the proper way to use functions, what a class is, why people have multiple files in a program, how/why people use GitHub...probably some other things I haven't discovered yet.

They all seem to be related to organization? Is there a ""How To Structure Your Python Stuff With Python"" book?",1604582472.0
6 Months of Python Grinding Pays Off (thanks to this sub),479,78js5u,learnpython,https://www.reddit.com/r/learnpython/comments/78js5u/6_months_of_python_grinding_pays_off_thanks_to/,53,"I’m in a customer support leadership position and I’ve been at Python for roughly a half year after learning SQL the first half of the year. It wasn’t in my job description, but all the free time I had I spend working on relevant python scripts and I’d sometimes spend 15+ hours/week outside of the job getting scripts to work.

Our business intelligence officer let me know the plan is to pull me out of support and into an official data analyst role in Q1. 

I feel incredibly proud and wanted to share and thank this subreddit for always giving thoughtful answers, and for people not being afraid to ask what they might think are stupid questions. So many good resources are references and a plethora of general programming tips are shared. 

For anyone who’s just starting out, keep at it! If you have the opportunity work on scripts practical to your job you’ll eventually you’ll impress someone. I really can’t wait for the opportunity to focus on this stuff full time and really begin to grow. 

Thanks!",1508888028.0
What are some programming tools that every beginner programmer should know about?,479,n5v69b,learnpython,https://www.reddit.com/r/learnpython/comments/n5v69b/what_are_some_programming_tools_that_every/,193,"Example, today I learned about Git and GitHub and it felt incredible.",1620261904.0
How to get better at programming - 'fast'!,476,n171lw,learnpython,https://www.reddit.com/r/learnpython/comments/n171lw/how_to_get_better_at_programming_fast/,65,"I stumbled across this subreddit 1-2 months ago by chance. Since then I have been pretty active here, posting almost daily, trying (and mostly succeeding I hope) to help people solve their python related problems. Now, I'm by no means an expert, programming is only a hobby to me and I work in an unrelated field. I just want to share some of my experiences in the hope someone may find it useful.

Anyway, during this time I noticed a few reoccurring questions that get posted a few times a week:

1. Is [xyz] book/course a good way to learn python?
  
2. I know the basics, how do I get better?
  
3. What projects can I do?
  

Personally I think, and from what I've seen many people agree, the probably 'most efficient / fastest' way of learning python (just my opinion) is to get the basics down and then find yourself a project. Problem based learning. I think, what specific course/book you use to learn the basic building blocks of python isn't even all that important (though there are certainly better and worse options to choose from).

While this method has a solid support base, the question of what project to work on seems to throw off many aspiring and even intermediate programmers. The best choice is obviously to find a project of personal relevance to apply one's skills; It's always more motivating to work on something that is useful to oneself. However, those projects are actually not always readily available or maybe too large/complex to be suitable as a first project for a complete novice. On the other hand, writing a program just for the heck of it without anyone ever using it, is far from motivating.

What I find curious though, is that these people looking for projects are actually sitting on a treasure trove of real world programming problems waiting to be solved and they don't seem to even notice. Namely this sub.

Since I found this sub I've been doing nothing else but opening posts and trying to solve the problems of other people. Oftentimes I only have a vague or no clear idea how to solve these problems. However, I think of different approaches and possible solutions, googling and researching and once I find a solution I post it. The idea is similar to rubber duck debugging. When you want to learn something, try to explain it to someone else, if you can't explain it you don't actually understand it fully yourself. This way in the past 1-2 months I've learned more (also more diverse things) than in the whole last year combined.

It's a win-win situation, the person asking the question gets help and I get free real world exercises and more programming experience. As a plus, there are many people on this sub who, different from me, actually are experts, so you get various creative approaches you can refer and compare your approaches to. And, what's equally important: you get feedback on your solutions. If you are lucky in the form of comments telling you what is good/bad about your approach. Sadly though down votes without an actual explanation are more prevalent (still better than nothing.) If you lack confidence in your skills, solve the problem for yourself first and then wait for other people to reply. Compare the approaches and see if you can improve your answer.

On a side note, I really wish people would give more feedback on posted solutions. Like any field, programming is not a skill you ever master completely, you get more proficient, but there is always more to learn. And in order to learn you need to know what and where to improve. Feedback is essential in learning anything. A down vote is fine, but please say what's wrong with the answer. Thanks!

Now, before I wrap this up (this is already longer than planned), I want to give a short example of my learning curve that might encourage / motivate some people.

I recently posted a solution to a pandas related problem which garnered a bit of attention. Mostly, because I got lucky and implemented a useful method which many people up until then apparently didn't know about. People called me smart or an expert, which I found rather funny and actually embarrassing because it's so far from the truth. After all, one month ago my knowledge of pandas was limited to reading in a csv file. It's just that after trying to solve other people's pandas problems on a regular basis for a month, I rather naturally learned my way around the library. And this super useful method I used? Well, I found it an hour prior in the pandas docs while I was looking to solve this very problem. By putting in the effort to learn, I didn't just help myself but apparently also many others.

My point is, solving all these problems made me learn way faster (and more relevant things) than any tutorial, book or course ever could. While calling me a pandas expert is certainly very much over-exaggerated, my proficiency still rose exponentially. I made similar progress in many different areas over the last 1-2 months (eg. I took a deep dive into python's standard library - a real treasure trove), just by helping other people. Thus, I can only encourage everyone to take part, work on problems even though you may not know the answer initially. Take it as an opportunity to become a better programmer while getting karma as a bonus.

I hope someone found my ramblings useful.

Have a nice day everyone and kudos to this awesome community!

---

Since I highly doubt that people will actually read this wall of text:

**TL;DR** - Fastest way to learn programming is doing projects. If you don't have a project try solving the problems on this subreddit as exercises: Free real world problems, feedback, and the possibility to compare your approaches to those of people who know their stuff. Also, you're a good person by helping people, plus you get karma. To sum it up: Help yourself by helping others - everybody wins!",1619710625.0
Please explain __init__ like ive never heard of programming before. Its just not making sense.,475,llztz3,learnpython,https://www.reddit.com/r/learnpython/comments/llztz3/please_explain_init_like_ive_never_heard_of/,68,"'''

class Student:

    def __init__(self, name, major, gpa)

        self.name = name

        self.major = major

        self.gpa = gpa

student1 = Student(""Bob"", ""Art"", 3.0)

'''


Why do i need to use the __init__ and self function? Do i have to make a new __init__ for every single class?

Why cant i just make a regular function like

def Student(name, major, gpa) ??",1613583122.0
To all passionate programmers out there: What is the best process in getting systematically better in learning Python?(up to Level Mastery?) My target is to be a Python Developer in a Startup here in Berlin.,473,il9dt3,learnpython,https://www.reddit.com/r/learnpython/comments/il9dt3/to_all_passionate_programmers_out_there_what_is/,118,"I currently work on Automate the Boring Stuff (Fantastic Book). It has plenty of Practical Projects. Well I solve one by one. Simultaneously I build up a GitHub Pages Website where I document my projects. 

Is this the best process of getting a job? Solving more and more projects? Making them more and more complex? Does this process lead to Real-World Results? 

Thanks guys. Have an incredible day. All the best from Berlin",1599061992.0
My cousin asked me where I would go if I wanted to learn programming all over again. This was my response.,473,3p5z6o,learnpython,https://www.reddit.com/r/learnpython/comments/3p5z6o/my_cousin_asked_me_where_i_would_go_if_i_wanted/,68,"1.	Learn python: 
 1.	https://www.codecademy.com/en/tracks/python
 2.	https://www.coursera.org/learn/python 
 3.	https://www.coursera.org/learn/python-data
2.	Solve challenges with Python
 1.	https://www.hackerrank.com/domains
 2.	Note: You should be able to the ""Algorithms"" and ""Python"" domains. ""AI"" is fun too.
3.	Learn skills with Python
 1.	https://www.coursera.org/learn/python-databases
 2.	https://www.coursera.org/learn/python-network-data
4.	Get ready to build something
 1.	Get a Github account - 
 1.	If you have an edu email: https://education.github.com/pack
 2.	Star interesting projects! Search, discover, read!
 2.	www.reddit.com/r/Python
 3.	StackOverflow.com
5.	Build something!!! Ideas:
 1.	I know you're in the financial world. Why not Computational Investing?
      1.	https://www.coursera.org/learn/computational-investing
 2.	Python webapps are popular. Learn DJANGO (a python framework).
      1.	http://gettingstartedwithdjango.com/ 
 3.	Raspberry Pi's are hackable little computers that can be scripted with python. Buy a Pi 2 and hack away! Build a robot
 4.	Visit Hackathons!
     1.	https://mlh.io/seasons/s2015/events
 5.	Do TOPCODER challenges. These are some of the questions that come up in technical interviews
 1.	https://www.topcoder.com/challenges/?pageIndex=1
 6.	Something else! The possibilities are endless. Find something you want to do and do it!
6.	Next steps
 1.	Data Science is huuuuge and it's only getting bigger. Seek out online courses for DS and do the TopCoder DS challenges. 
 3.	Practice more on Django or Python on Pylons. Search for webdev openings. 
",1445122780.0
Best way to learn python?,474,11kcko1,learnpython,https://www.reddit.com/r/learnpython/comments/11kcko1/best_way_to_learn_python/,222,What is the best way to learn python for free? I have next to zero knowledge of coding (played around with scratch and that stuff but that prob doesnt even really count).,1678133791.0
"When you automate something in python, you'd obviously have to run the script forever. Where can we run the script?",476,ivn7d9,learnpython,https://www.reddit.com/r/learnpython/comments/ivn7d9/when_you_automate_something_in_python_youd/,115,"I want to automate something, and whenever that event occurs, I get an email
But I was thinking I can't use my laptop for this as it's not on forever and when I run another script, the previous one stops and I don't get emails
How do you approach your automations? Like, do you put it on some server that can run 24 7 or something?",1600496231.0
Is it too late for a 40 years old uncle to learn Python from no basics?,473,edq0wd,learnpython,https://www.reddit.com/r/learnpython/comments/edq0wd/is_it_too_late_for_a_40_years_old_uncle_to_learn/,160,"I just took my venture in Python learning.

Maybe I am too old. Maybe I have nothing in Mathematics or computer knowledge.

I just wanna try, and see how far and how long I can last.

Hello my new friends here! Hope us growing better!",1576935603.0
I took my first Python project to the next level: from first ever GitHub repository to published package.,472,c6yhqq,learnpython,https://www.reddit.com/r/learnpython/comments/c6yhqq/i_took_my_first_python_project_to_the_next_level/,38,"Around a month ago I posted [here](https://www.reddit.com/r/learnpython/comments/bv5etg/my_first_python_project_command_line_application/) my first GitHub repository ever with simple command line application for selective file copying.

Couple of days ago I finally created the first release on [GitHub](https://github.com/pltnk/selective_copy/releases/tag/v0.1.0) and published it on [PyPI](https://pypi.org/project/slcp/0.1.0/)!

&#x200B;

[This is how my code looked like a month ago.](https://github.com/pltnk/selective_copy/commit/15ea88663f97b00fc83b82639e5793b89ae30f69) 

[And here it is now.](https://github.com/pltnk/selective_copy/blob/6ca00871de8f8c84d8f7b0bbc00337702202e969/slcp.py)

You can check changes comparison between initial upload on GitHub and current version [here](https://github.com/pltnk/selective_copy/compare/master@%7B05-30-2019%7D...cc99368fe1c88e2b5d0c6d526147626f878a4f93?diff=split) by clicking 'Files changed' tab.

[Commit history.](https://github.com/pltnk/selective_copy/commits/dfd5a9e5ecc2bf3e2614a72388de2fdc8bf68f1e)

And now you can install my application via `pip install slcp`

&#x200B;

As you can see my code went through significant changes. Firstly I implemented more effective logging system using logging module. Initially I used just a list where log was stored and saved to the file at the end of the program. But this way a log could be lost if the program crashes. Then I changed my error checking system and made it more precise. At first it checked only one case and moreover it did it wrong :) The most challenging task was to redesign the main functions for files copying. Since I have a progress bar I needed to know total number of files copied before actually copying them. This way os.walk function was called two times: when counting total and copying files. Also there were two copy functions one of them allowed to preserve source folder structure and the other doesn't. Thanks to /u/fernly from the comments of the previous thread I made one function that calls os.walk and make a to-do list for copying adding a sublist for each file with source and destiation paths. The len of this to-do list is the total number of files to copy that can be used in progress bar printing. Then I left only one copy function instead of two which takes that to-do list as an argument. Also I added some small features like adaptive progress bar that takes into account width of the terminal and couple of new arguments for command line parser. All of significant changes in the code can be seen as merged pull requests in the commit history. 

Last time I received very valuable feedback regarding architecture of the program that really helped me to make my code better, so I want to thank this community and all the people who spend their own time to answer questions. 

While working on this project I've learned how to use argparse, logging, os.path, os.walk and poetry. I made myself familiar with git and learned a lot about packaging, versioning, licensing and using markdown for readme files formatting.

Of course there is always a room for improvement so all feedback will be highly appreciated. As a next step I intend to finally write some tests, if somebody knows the best way to do it for such a program please let me know.

Working on your own project is the best way to learn indeed, good luck with your learning, have fun and don't ever hesitate to ask questions!",1561812023.0
I created this free tool for learning Python and would love some feedback form /r/learnpython,472,8etktr,learnpython,https://www.reddit.com/r/learnpython/comments/8etktr/i_created_this_free_tool_for_learning_python_and/,35,"# [Practice Python](https://edabit.com/challenges/python3)

I posted in this sub over a year ago asking for help with translations but figured it's probably worth posting again now that there's LOTS of quality Python challenges (113 as of this post).

**EDIT: Thanks for the gold stranger!**",1524663158.0
"Thank you for helping me reach one million sign ups: Use code OCT2021FREE to sign up for the ""Automate the Boring Stuff with Python"" online course.",475,pzcx8e,learnpython,https://www.reddit.com/r/learnpython/comments/pzcx8e/thank_you_for_helping_me_reach_one_million_sign/,51,"Whoa.

I'd like to thank everyone on Reddit and all the folks who have taken my course or read my programming books. I'm completely floored by the response I've gotten to this course. It's incredible and I feel so fortunate for being able to have such a large impact. As I write this, there are 999,866 folks who have signed up for my beginner programming course, so it looks like today, October 1st, 2021, will the day when I reach 1,000,000 sign ups. The vast majority of these are free sign ups. According to my metrics, only about 8% or so of students finish the course (about average for online courses).

But knowing that I've been able to teach roughly tens of thousands of folks to program really... gives me a satisfied sense that I'm useful. As Muhammad Ali put it, ""Service to others is the rent you pay for the room here on earth."" It's something I worry about a lot, but the number of people telling me they find my stuff useful is a great reassurance.

Thank you.

Anywhere, here's the usual info:

https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: OCT2021FREE

https://www.udemy.com/course/automate/?couponCode=OCT2021FREE

**EDIT: Be sure to BUY the course for $0, and not sign up for Udemy's subscription plan. The subscription plan is free for the first seven days and then they charge you. It's selected by default.**

**EDIT: If you are on a laptop and can't click the BUY checkbox, try shrinking the browser window. Some have reported it works in mobile view.**

This promo code works for 3 days (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to OCT2021FREE2 in 3 days, and that code will work for another 3 days.

Some people in India and South Africa get a **""The coupon has exceeded it's maximum possible redemptions""** error message. [Udemy advises that you contact their support if you have difficulty applying coupon codes, so click here to go to the contact form.](https://support.udemy.com/hc/en-us/requests/new?type=student)

**I'm also working on another Udemy course** that follows my recent book ""Beyond the Basic Stuff with Python"". So far I have [the first 15 of the planned 56 videos done. You can watch them for free on YouTube.](https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&index=1)

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

Side note: My latest book, [The Big Book of Small Python Projects](https://inventwithpython.com/bigbookpython/), is out. It's a collection of short but complete games, animations, simulations, and other programming projects. They're more than code snippets, but also simple enough for beginners/intermediates to read the source code of to figure out how they work. The book is released under a Creative Commons license, so it's free to read online. (I'll be uploading it this week when I get the time.) The projects come from this [git repo](https://github.com/asweigart/pythonstdiogames).

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",1633109594.0
Entry level Python developer interview,471,r5r71l,learnpython,https://www.reddit.com/r/learnpython/comments/r5r71l/entry_level_python_developer_interview/,118,"Hi All! 
Just had an exhausting 90 min technical interview for the position of Python developer - fresher at a startup. To give a bit of a background, I am an engineer and have been learning python for 1 year. I practice mostly on hackerearth. I have done no python projects whatsoever and although I have mentioned my github profile in my resume, it's just empty.
There were 3 sections in the interview-1) Python theory 2) Coding round 3) Logical Reasoning

In the theory round, I was asked about OOPS, unit testing, difference between arrays and lists, static keyword, difference between lists and tuples, list slicing, the concept of 'self' parameter, .py vs .pyc file, public and private keywords, pointers (from c++), and a lot of other stuff that I don't remember. Overall, I started feeling dejected towards the end of this round. 

I was most petrified of the coding round as I felt that my coding skills were nowhere close to being a python developer. The first program that I was asked to write was a simple one - find mean and median of an integer list. The catch however is that I wasn't allowed to use the built-in functions to sort the list, so I had to write a separate function using nested 'for loops' to sort the list. 
Second program was to find the vowels from a given string. It was a bit easy for me as I have been practicing regex for a while now. I finished it in no time. 
Third program was to reverse a string using tail recursive function. This is where I botched it. I had the idea of what I was supposed to do, but I couldn't get it to work. They appreciated my approach and asked me to mail the solution to them after the interview. 
At this point I had lost all the hopes of getting through as this was supposed to be a fairly simple program. I would have been able to write it easily any other day, but just when it mattered, I couldn't. 

The third round had logical reasoning problems. They asked three problems, first one was the shortest path problem for an ant on a unit cube from one point to the diagonally opposite point. 
The second problem was three bucket problem, in which we have 2 buckets of capacity 3L and 5L full of water, and a third bucket of 8L capacity empty. The task is to fill 4L water in 8L bucket without any measurement tools by just using the 3 buckets. 
The third problem, and the toughest one IMHO, was a geometry problem. They drew a rectangle with unknown sides and area, and then marked a point (say 'O') inside it arbitrarily. Then they connected the four vertices of the rectangle with the point ('O') marked inside the rectangle. They specified that the lengths of three of the drawn lines are 4, 5, and 6. I was supposed to find the length of the last remaining line. I guessed the answer to be 3 but apparently it's sqrt(5). 

Pretty tired overall, I am not expecting any offer but I learnt a lot of things from this interview. I would like to thank this sub for all the support; the critical stuff that I learned from here was super helpful. To anyone appearing for any Python interviews, Good Luck!

Edit:

I am attaching some of my solutions here. 

For regex problem - print(''.join(re.findall(r'[aeiou]',string)))

For the string reversal problem - https://imgur.com/a/l0j9QRQ

For the geometry logic problem - https://imgur.com/a/MMweGoi

For the ant problem- There are 4 equally short routes",1638290090.0
"Just turned 5 lines of simple code into 1 unnecessarily convoluted one. FANG, please IM me your offers.",468,kjfsb0,learnpython,https://www.reddit.com/r/learnpython/comments/kjfsb0/just_turned_5_lines_of_simple_code_into_1/,72,"Been at this coding thing since April. Felt things really click more since tackling algo/data structures the past 2 months.

But today I became a man. For the first time in my life, I turned 5 lines of clean, readable code into a single spaghetti expression that I'll have to stare at one day to ever understand where I was going with it. 

I think I've earned a Bud Lite shandy.

**5 lines**

    minVal = m.inf
    for k, v in self.weight.items():
        if k in self.unvisited and v < minVal:
            minVal = v
            u = k

**Never slipped a dict comprehension in my lambda before -- but I liked it**

    u = min({k: self.weight[k] for k in self.unvisited}.items(), key = lambda item: item[1])[0]",1608817985.0
"If you are employed as a python programmer, tell me the stuff you do on a day in the office",470,oi1qrv,learnpython,https://www.reddit.com/r/learnpython/comments/oi1qrv/if_you_are_employed_as_a_python_programmer_tell/,122,I want to be employed not python in particular but its my favorite language so I wanted to know what level of knowledge a job requires like what the people in offices actually do? I've seen videos but its just them typing on a computer,1625997572.0
Got a job offer today after doing the coding challenge and their technical interview with pythob,465,atbczv,learnpython,https://www.reddit.com/r/learnpython/comments/atbczv/got_a_job_offer_today_after_doing_the_coding/,108,"I got offered a new job today and took it. I did the coding challenge in flask and the simple interview question in python. I’m just really happy and just wanted to share somewhere. Thanks for all the help guys.


Edit: just realized my title misspelled python. I’m a disgrace.

Edit2: a lot of people have asked about the challenge and the interview question. I can’t really give out details about the challenge due to signing an nda, but i hopes of keeping it somewhat obscure it was to code a website/api that allowed users to register, login, and then save and manipulate some data.

The interview question was checking two strings to see if they were anagrams.

Update: I was originally going to do some stuff in salesforce but my first few tasks are automating browser testing. I’m using python with splinter. I’m soooooooo happy.",1550799260.0
"[Giveaway] Announcing Practice Python Projects ebook, free for a week",470,owctf3,learnpython,https://www.reddit.com/r/learnpython/comments/owctf3/giveaway_announcing_practice_python_projects/,30,"Hello!

I'm excited to announce my latest book titled **Practice Python Projects**. This book presents five beginner to intermediate level projects inspired by real world use cases:

* Enhance your CLI experience with a custom Python calculator
* Analyzing poll data from a Reddit comment thread
* Finding typos in plain text and Markdown files
* Creating a GUI for evaluating multiple choice questions
* Square Tic Tac Toe — creating a GUI game with AI

To test your understanding and to make it more interesting, you'll also be presented with exercises at the end of each project. Resources for further exploration are also mentioned throughout the book. Visit https://github.com/learnbyexample/practice_python_projects for programs and related example files presented in this book.

To celebrate the release, all my Python books are free for a week. To get the projects book alone:

* https://learnbyexample.gumroad.com/l/py_projects
* https://leanpub.com/py_projects

The bundle also includes **100 Page Python Intro** and **Python re(gex)?**:

* https://learnbyexample.gumroad.com/l/python-bundle
* https://leanpub.com/b/python-bundle

If you prefer web version, visit https://learnbyexample.github.io/practice_python_projects/

Hope you find these books helpful in your Python programming journey. I'd highly appreciate your feedback.

Happy learning :)",1627904846.0
Possibly the proudest day of my life,463,fm3qc5,learnpython,https://www.reddit.com/r/learnpython/comments/fm3qc5/possibly_the_proudest_day_of_my_life/,62,"I have finished my first Python Windows Desktop application in a little under a month. Even tho people told me to change language and I found quite a few pitfalls with some libraries . It is a Connectwise Manage employee time manager, with an Active Directory Logon and uses the time entries done by employee and push data to extra data fields. It even print reports in excel and PDF. It's moving to production next week! Thank you to those that told me to stick with it!",1584741870.0
My eyes have been opened!,459,lblfyz,learnpython,https://www.reddit.com/r/learnpython/comments/lblfyz/my_eyes_have_been_opened/,49,"Only 2 weeks into learning Python and I’m already dreaming of what I can be automating.
Loads of help and ideas in here, so thanks to everyone that contributes!

I’m enjoying the challenge of working things out, but my 1st plan is to read a pdf, extract certain bits of data and transpose into a predefined template.

Already cracked pdf reading (thanks to the course by Al Sweigart!), so onto the next step.

Any thoughts or tips on how or where to store data once I’ve extracted text from a pdf would be appreciated!

Edit: thanks all for the comments support and ideas. Really appreciated!

A few people have asked what resources I’m learning from - I’m using the youtube beginners guide by Mosh and and Automate the Boring Stuff by Al Sweigart on Udemy. They cover similar topics but in different ways, so I’ve learnt from both.
Not to mention this group, I’ve been a lurker for a while and this is my 1st post.

I do have the benefit of working in a data driven industry, so I have something practical and tangible to work towards. People have different learning styles, but I think I struggle to learn without having a project that “means something” to me.

So I guess that would be my takeaway - don’t just expect to learn python by taking a few courses. Learn the basics, but try to apply some practical examples as soon as you get your head around the logic!",1612351122.0
Bombed a tech interview today...,460,qpnb6l,learnpython,https://www.reddit.com/r/learnpython/comments/qpnb6l/bombed_a_tech_interview_today/,124,"Practice the basics, all I can say. Been so wrapped up in Pandas and Flask recently, flubbed a basic task and looked like an idiot today. 

Thank you, that is all.",1636405851.0
Just discovered a huge hole in my learning. Thought I'd share.,457,13ex29t,learnpython,https://www.reddit.com/r/learnpython/comments/13ex29t/just_discovered_a_huge_hole_in_my_learning/,145,"A funny thing about being entirely self-taught is that a person can go pretty far in their Python journey without learning some core concepts.  I discovered one today.  Let's say I have a class called Pet:

    class Pet:
        def __init__(self, type, name, number):
            self.type = type
            self.name = name
            self.number = number

And I create a couple pets:

    rover = Pet('dog', 'Rover', 1)
    scarlet = Pet('cat', Scarlet', 2)

And I put those pets in a list:

    pets = [rover, scarlet]

And I do some Pythoning to return an item from that list:

    foo = pets[0]

Here's what I learned today that has blown my mind:

rover, pets\[0\], and foo **are the same object**.  Not just objects with identical characteristics.  The same object.

If I make a change to one, say:

    foo.number = 7

then rover.number == 7 and pets\[0\].number == 7.

For almost two years, I have been bending over backwards and twisting myself up to make sure that I am making changes to the right instance of an object.  Turns out I don't have to.  I thought I'd share my 'Aha' of the day.

I have an embarrassing amount of code to go optimize.  Talk to you later!",1683832733.0
Post flair request,461,hxzyua,learnpython,https://www.reddit.com/r/learnpython/comments/hxzyua/post_flair_request/,39,"To the mods of r/learnpython,

Can we get flairs and require them on all posts? I'm thinking of things like 'Unsolved', 'Solved', 'Code Review', 'NumPy', 'Matplotlib', 'CSV', 'Pandas', 'for loops', 'while loops', 'strings', 'lists', 'data structures', 'algorithms', etc. (that is in no way a comprehensive list)

Input from the community would obviously be required before something like this should be implemented, but I think that flairs would improve the experience of this subreddit and better help people looking for help.

Let me know what y'all think.

Regards,

u/USAhj",1595734722.0
"2,000 free sign ups available for the ""Automate the Boring Stuff with Python"" online course. (June 2023)",464,140iolc,learnpython,https://www.reddit.com/r/learnpython/comments/140iolc/2000_free_sign_ups_available_for_the_automate_the/,65,"EDIT: The codes are all used up this month, but you can still watch [the first 15 videos for free on YouTube](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW). I've enabled Preview on all the videos, so you can watch them from [the course page](https://www.udemy.com/course/automate/).

If you want to learn to code, I've released 2,000 free sign ups for my course following my Automate the Boring Stuff with Python book (each has 1,000 sign ups, use the other one if one is sold out): 

~~https://  udemy.com/course/automate/?couponCode=JUN2023FREE~~

~~https://  udemy.com/course/automate/?couponCode=JUN2023FREE2~~

Udemy has changed their promo code and severely limited the number of sign ups I can provide each month, so only sign up if you are reasonably certain you can eventually finish the course. [The first 15 of the course's 50 videos are free on YouTube if you want to preview them.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

YOU CAN ALSO WATCH THE VIDEOS WITHOUT SIGNING UP FOR THE COURSE. All of the videos on the course webpage have ""preview"" turned on. Scroll down to find and click ""Expand All Sections"" and then click the preview link. You won't have access to the forums and other materials, but you can watch the videos.

**NOTE: Be sure to BUY the course for $0, and not sign up for Udemy's subscription plan. The subscription plan is free for the first seven days and then they charge you. It's selected by default. If you are on a laptop and can't click the BUY checkbox, try shrinking the browser window. Some have reported it works in mobile view.**

Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.

Some people in India and South Africa get a **""The coupon has exceeded it's maximum possible redemptions""** error message. [Udemy advises that you contact their support if you have difficulty applying coupon codes, so click here to go to the contact form.](https://support.udemy.com/hc/en-us/requests/new?type=student) If you have a VPN service, try to sign up from a North American or European proxy.

**I'm also working on another Udemy course** that follows my recent book ""Beyond the Basic Stuff with Python"". So far I have [the first 15 of the planned 56 videos done. You can watch them for free on YouTube.](https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&index=1)

Side note: My latest book, Python Programming Exercises Gently Explained is a set of 42 programming exercises for beginners [for free](https://inventwithpython.com/pythongently/) or as a [99 cent ebook](https://www.amazon.com/Python-Programming-Exercises-Gently-Explained-ebook/dp/B0BGYJ7G6T/).


**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",1685897153.0
Today I discovered f strings and it made my day,457,sad6m6,learnpython,https://www.reddit.com/r/learnpython/comments/sad6m6/today_i_discovered_f_strings_and_it_made_my_day/,62,"I first learned the basics of Python about 10 years ago and really haven't done much with it since. Recently I picked it back up but instead of good old 2.7 I'm using 3.10 and today I found out about f strings. Man, what a revelation--something so simple yet so useful.

Since posts must contain a question about Python, what other nifty new things will I find in 3.10?

ETA: Wow, thanks everyone! What a wealth of information. I appreciate everyone's input.",1642888528.0
Do programmers save chunks of code for repeated use?,457,mzef9s,learnpython,https://www.reddit.com/r/learnpython/comments/mzef9s/do_programmers_save_chunks_of_code_for_repeated/,164,For example if I had an amazing figure template on matplotlib that I might want to use again is there a repository where you should put these things ?,1619490495.0
Is there a beginners python cheat sheet available anyway?,450,jbn4bo,learnpython,https://www.reddit.com/r/learnpython/comments/jbn4bo/is_there_a_beginners_python_cheat_sheet_available/,61,I just want something with all the main concepts and techniques laid out in one sheet of paper if possible?,1602766999.0
I keep failing coding interviews - best way to learn data structures and algorithms?,456,ezhrnl,learnpython,https://www.reddit.com/r/learnpython/comments/ezhrnl/i_keep_failing_coding_interviews_best_way_to/,49,"For context, I'm a Stats major with some programming experience. I know how to code in Python from the standpoint of knowing syntax and OOP concepts. Outside of this, I know Matplotlib, NumPy, and Pandas. I attended a few SWE intern interviews and totally bombed the coding challenges. I was asked about what type of algorithm would be most efficient for the challenge and I had to tell them I had no idea. For HackerRank challenges, I am able to code the solution, but it is nowhere near efficient. If anyone has any Python related DS&A resources which I could use to learn this topic well and that could subsequently help me in these interviews I would really appreciate it!",1580941678.0
I've been using Python for 5 years professionally. TODAY I discovered concurrent futures,458,eglfki,learnpython,https://www.reddit.com/r/learnpython/comments/eglfki/ive_been_using_python_for_5_years_professionally/,109,"Granted, I don't do much in the way of concurrency.  But still, I have several open projects and have always used threading.  It took me until *today* to discover a feature implemented in Python 3.2...  

But given that it's comically simple, given an example, I figured I'd share one.



	import concurrent.futures
	import random 
	import datetime
	import time
	import uuid

	def do_something(seconds, name):
		print(f""Sleeping {seconds}\t{name}\t{str(datetime.datetime.now())[:19][11:]}"")
		time.sleep(seconds)

	with concurrent.futures.ThreadPoolExecutor(max_workers=3) as executor:
		for i in range(50):
			executor.submit(do_something
				, seconds = random.randint(1,6)
				, name = str(uuid.uuid4())[:6].upper())",1577503335.0
Pi Day is almost over and I nearly forgot to mention that I wrote a script so people can determine whether a pizza place’s large or small is a better deal based on cost per sq inch. It’s called Pizza Pi R Squared. Happy Pi Day!,454,b1a2lo,learnpython,https://www.reddit.com/r/learnpython/comments/b1a2lo/pi_day_is_almost_over_and_i_nearly_forgot_to/,33,Here it is: https://github.com/GTeninbaum/pizzapi.py/blob/master/v3.py. Pull requests welcome to improve it!,1552621731.0
"People often say ""Do some projects and you will improve your coding"".But how do I improve my problem solving abilities?",451,fpstob,learnpython,https://www.reddit.com/r/learnpython/comments/fpstob/people_often_say_do_some_projects_and_you_will/,108,,1585294584.0
What is the most practical application you have used Python for? ,451,1cltork,learnpython,https://www.reddit.com/r/learnpython/comments/1cltork/what_is_the_most_practical_application_you_have/,430,"I know literally nothing about Python besides ""it is a coding language"" and ""it's easier for dopes like me to pick up than some other coding languages"". So my real question is, ""Why should I learn Python?"" What could I do with it that would improve my life, workflow, or automate menial tasks? ",1715028470.0
"I built an app that scans every social media network for your username, and this is how",450,z1vmrc,learnpython,https://www.reddit.com/r/learnpython/comments/z1vmrc/i_built_an_app_that_scans_every_social_media/,68,"I found myself scrolling through Github’s “trending” repos, looking for some coding inspiration. Within the next hour, I stumbled across something called The Sherlock Project. Interesting, It had over 35k stars, must be pretty popular.

I quickly cloned the repo and started toying around with it. It didn’t take me long to realize the power of this tool. All I had to do was insert a username, and Wa Lah! I was looking at every social media website that was associated with the username. Not only that but direct links to the accounts.

I immediately wanted to turn this into a web app so that everyone could use it. My first challenge was that this was a CLI tool, so I got to work. The Sherlock project makes about 400 requests to various site s to check if your username exists. This was going to be tough... I noticed they were using requests.FutureSession to multithread the result.

My first thought was maybe I could collect all the requests into a list and then dump it back to the frontend with a get request, but the issue here was that the results could take a couple minutes to gather, and no-one is gonna sit and wait that long.

Ok, so how do I continuously report out data to the frontend as the requests get full-filled?  The answer? Web-sockets. Not just any web-socket though, a multithreaded web-socket. After ALOT of trial and error I finally got something working. The Issue now though was that it wouldn't run in production due to a multiprocessing error: Daemonic processes are not allowed to have children.

The hell did that mean? back to the drawing board. Eventually I learned that you cant use the standard multiprocessing library for this kind of thing, you had to use billiard. Bam! It worked. I quickly hacked together a simple frontend, configured the web socket, and results were pouring in.

Time to post on reddit. I quickly sent out a post or two and eagerly awaited peoples responses. There was an issue though. The more people flooded the site, the slower it got until it was completely unusable. Dang. How do I fix this? I removed the post quickly and got back to work.

Turns out, the web-socket is considered a ""long running request"" as it makes 400 external requests. Maybe I could use celery to offload this process to a worker and queue it up. I started working on it and realized this was a little out of my skill range.

I then decided to take a look at the logs where I hosted the code and what do i find? CPU, Memory, and bandwidth all reaching a staggering 100% usage. Welp, I found my issue. I did some rework of my codebase and it started running a little faster.

I then realized the true issue. I was using the free tier of Render that only allowed for one instance of my app...duh.

Needless to say, I learned to take it slow, build tests for my code, and be patient with results.

Here is the final result: [https://www.handlefinder.com/](https://www.handlefinder.com/)

What do you guys think? Any hard lessons learned in coding? What were your takeaways?

Here is also a link to the repo: [https://github.com/bnkc/handlefinder](https://github.com/bnkc/handlefinder)",1669128971.0
"I have finally become ""decent"" at python programming!",447,fs9ufi,learnpython,https://www.reddit.com/r/learnpython/comments/fs9ufi/i_have_finally_become_decent_at_python_programming/,97,"I started learning python, after a failed aproach of learning C++.I have been learning python for about 3 months .I have learnt  about OOP,closures ,decorators and a lot of other things.For the first time I feel like I am getting somewhere with programming.I started learning django but realized that to build a decent frontend I will need javascript.I am currently learning javascript and then I will start learning react.

I am not saying that I am ""intermediate"" programmer, I still consider myself a begginer.But I am good enough to build a project on my own and to solve a simple(6 kyu) codewars kata.

Just wanted to thank you!

also,excuse my terrible english.",1585646642.0
my hello world program is a little slow for some reason,456,1e3mvjl,learnpython,https://www.reddit.com/r/learnpython/comments/1e3mvjl/my_hello_world_program_is_a_little_slow_for_some/,95,"    import random as rand
    
    letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 
        'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',
        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 
        'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', ',', ';',
        ':', '!', '?', '-', '_', '(', ')', '[', ']', '{', '}', '""', ""'"",
        ' ']
    
    a1 = ''
    a2 = ''
    a3 = ''
    a4 = ''
    a5 = ''
    a6 = ''
    a7 = ''
    a8 = ''
    a9 = ''
    a10 = ''
    a11 = ''
    a12 = ''
    
    while a1 != 'H':
        n = rand.randint(0, 78)
        a1 = letters[n]
        print(a1)
    while a2 != 'e':
        n = rand.randint(0, 78)
        a2 = letters[n]
        print(a1 + a2)
    while a3 != 'l':
        n = rand.randint(0, 78)
        a3 = letters[n]
        print(a1 + a2 + a3)
    while a4 != 'l':
        n = rand.randint(0, 78)
        a4 = letters[n]
        print(a1 + a2 + a3 + a4)
    while a5 != 'o':
        n = rand.randint(0, 78)
        a5 = letters[n]
        print(a1 + a2 + a3 + a4 + a5)
    while a6 != ' ':
        n = rand.randint(0, 78)
        a6 = letters[n]
        print(a1 + a2 + a3 + a4 + a5 + a6)
    while a7 != 'W':
        n = rand.randint(0, 78)
        a7 = letters[n]
        print(a1 + a2 + a3 + a4 + a5 + a6 + a7)
    while a8 != 'o':
        n = rand.randint(0, 78)
        a8 = letters[n]
        print(a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8)
    while a9 != 'r':
        n = rand.randint(0, 78)
        a9 = letters[n]
        print(a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9)
    while a10 != 'l':
        n = rand.randint(0, 78)
        a10 = letters[n]
        print(a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9+ a10)
    while a11 != 'd':
        n = rand.randint(0, 78)
        a11 = letters[n]
        print(a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9+ a10 + a11)
    while a12 != '!':
        n = rand.randint(0, 78)
        a12 = letters[n]
        print(a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9+ a10 + a11 + a12)
    ",1721021021.0
Thank you for restoring some of my hope for our species,451,oued4d,learnpython,https://www.reddit.com/r/learnpython/comments/oued4d/thank_you_for_restoring_some_of_my_hope_for_our/,31,Just wanted to thank the people that answer questions here. The fact people come here to help random internet strangers is cool. That is all. Keep being great.,1627622146.0
Petition to the Mods to allow removal of chatgpt posts,448,10xheip,learnpython,https://www.reddit.com/r/learnpython/comments/10xheip/petition_to_the_mods_to_allow_removal_of_chatgpt/,85,"Mods, can we please bar posts on the sub that present the output of chatgpt along with any kind of ""it doesnt work, fix it for me"" or ""will this chatgpt script work"" comment? 

I believe that chatgpt as a technology is pretty amazing. As an individual who holds a PhD in the arts, whose dissertation was explicitly about AI and machine learning applications to artmaking, I'm deeply interested in these technologies. But any learning that can happen from chatgpt's ability to generate python is more on the side of understanding what is possible with such AI models. Thus far, it has not had a positive impact on this community. I believe that if one wants to learn from examples of code, they should be directed to documentation (python docs, library docs, project docs), and examples written by other reputable individuals. Heck, reading the problems encountered by folks who frequent this sub are more informative than reading chatgpt output... for one big reason, the authors can provide reasoning and justification.

I would like to propose that any posts that mention chatgpt should be allowed if they are concerned with how to issue HTTP requests to an api endpoint using python, as that is a relevant and valuable thing to learn with the language. Corrections or debugging chatgpt generated code should be banned from the sub. Discussions of chatgpts generative strengths and weaknesses should also be banned, this is not a machine learning sub.

Edit: spelling corrections",1675906114.0
Python projects for beginners,451,hbbzoa,learnpython,https://www.reddit.com/r/learnpython/comments/hbbzoa/python_projects_for_beginners/,108,"Hi! I just learned basic python syntax (watched a 4 hour long python tutorial playlist while also doing it myself), what would be some good beginner projects/ programs that i’d be able to make, and second of all, what can i learn next to become better at python?",1592475587.0
My First Ever Python Project(Zillow_Scraper),453,i8mzbk,learnpython,https://www.reddit.com/r/learnpython/comments/i8mzbk/my_first_ever_python_projectzillow_scraper/,64,"Hey y’all, I just completed my first ever programming project! I recently just completed a Python course on Udemy(S/O Jose) and I wanted to build my own project from stratch. I wanted the project to be meaningful and impactful to me, and since I’m considering moving from my current apartment, I wanted to know what other apartments/homes are renting for in the city I live in(Arlington Tx). I decided to build a webscraper that grabs all the listing info for places being put up for rent on Zillows website and writes it all out to a CSV file using Pandas. Link to the github repo down below let me know what y’all think!

https://github.com/faithfulalabi/Zillow_Scraper

P.S I know there’s probably 1000 ways I could’ve written the code better but I’d love y’alls input on some of the big ones that are relevant to be becoming a great programmer.",1597268720.0
Beginner's Python cheat sheets - updated,450,4y06nq,learnpython,https://www.reddit.com/r/learnpython/comments/4y06nq/beginners_python_cheat_sheets_updated/,52,"In the spring I posted a set of cheat sheets aimed at beginners, and many people found them useful. I've since completed the set of sheets, and wanted to share the full set. The additional sheets cover files and exceptions, testing, Pygame, matplotlib, Pygal, and Django.

You can download [individual sheets](http://ehmatthes.github.io/pcc/cheatsheets/README.html), or download a pdf that includes all the sheets in [one document](https://github.com/ehmatthes/pcc/releases/download/v1.0.0/beginners_python_cheat_sheet_pcc_all.pdf). These sheets aim to remind you of Python's syntax, but they also include brief explanations of the concepts behind the syntax as well.

I wrote these sheets as supporting documentation for readers of [Python Crash Course](https://www.nostarch.com/pythoncrashcourse), but I think they're useful for beginners in general. I hope you find them helpful, and I'm happy to answer any questions about them.

",1471362655.0
Am I stupid or is this stuff harder than I thought?,444,o9aoy6,learnpython,https://www.reddit.com/r/learnpython/comments/o9aoy6/am_i_stupid_or_is_this_stuff_harder_than_i_thought/,116,"Hello everyone

I'm new to learning programming languages and just started with python. My question is, is it normal to not understand certain concepts at first? some concepts seem a little abstract is that normal or am I just stupid?",1624845852.0
mind blown using help() in python,442,dnzuz0,learnpython,https://www.reddit.com/r/learnpython/comments/dnzuz0/mind_blown_using_help_in_python/,58,"I've been programming in python for about a year now. And I've never encountered this module before, and it's soooooooo incredibly useful. Like I'll probably never even google anything ever again ( ok thats total bullshit). But really my point here is if you're learning python you should be aware of and know how to use the help module IMHO. across the thousands of webpages I've been to and resources I've used to teach myself I can't believe I didn't run into it sooner. Anyways I just thought sunday was a good day for ranting and sharing. I hadn't initially planned on asking a question here but maybe we could get something along the lines of things you found out too late and or things everyone learning python IYHO should know. :)

edit:

help is a function in python which describes the object you pass to it. The description it outputs is it's docstring, as pointed out by DataDecay more information on docstrings can be found in [PEP-257](https://www.python.org/dev/peps/pep-0257/)

so if you want more information about an object you can pass it as an argument to help.

Say for instance you were confused as I currently am about how asyncio works.

You could type help(asyncio) and it would give you information about that package (technically object).

YAYYYYYYY and rkarl7777 both mentioned another very useful utility named dir, which will list the methods available to the object passed to it.

So after gaining a general understanding of the base package you can then look through all of its methods.

dir(asyncio)

then if you have questions about any of the methods in that list you can query those with help.

help(asyncio.StreamWriter)

Now hang on just a second while I try and find somebody who is better at explaining things than I am.

I went through a couple of articles, this one seems to be the best.

[https://www.linuxnix.com/python-builtin-helpdir-help-type-and-\_\_\_doc\_-functions/](https://www.linuxnix.com/python-builtin-helpdir-help-type-and-___doc_-functions/)",1572213834.0
"I just love this subreddit,Thanks to all.",443,gnyijt,learnpython,https://www.reddit.com/r/learnpython/comments/gnyijt/i_just_love_this_subredditthanks_to_all/,43,"Thanks everyone who helped me out in preparing for the interview went great!,I passed the first round🙂

(link to initial post : https://www.reddit.com/r/learnpython/comments/glxpe4/what_type_of_questions_can_i_expect_in_an/?utm_source=share&utm_medium=ios_app&utm_name=iossmf)

Now I was just wondering like what sort of questions can I expect on the following topics

List,Tuples,Dictionaries,Arrays,Functions etc.

I am not able to figure out what questions are to be expected on the above things,I just know their syntax and methods thats all.

Any guidance or help would be appreciated",1590073556.0
"Finally getting over ""the hump"" is such a great feeling",440,es593y,learnpython,https://www.reddit.com/r/learnpython/comments/es593y/finally_getting_over_the_hump_is_such_a_great/,78,"Posting this hopefully as an encouragement for others who are struggling learning this stuff to keep going.

The hump:

That initial stage when you're first learning where everything seems either way too simple to be of any use or way over your head so that you'll never comprehend it, so you feel stuck and unable to progress any further; then after some time you start to question how you managed to make it this far in life while being this stupid. Your brain labors to wrap itself around the understanding of these patterns and concepts that you know are simple logic, yet they elude your comprehension anyway, leading to tears of frustration and self deprecation. ""I guess I'll just work Helpdesk my whole life"", you start to think. Hey at least it's a job. You look at others' solutions to the practice projects/problems and you think ""of course, that was so obvious. I'd have figured it out if I wasn't an idiot.""

Then, finally, after several weeks or months or maybe even years, for some random reason or perhaps no reason at all, something clicks in your brain you finally start to ""get it"". 

I first started trying to even have any semblance of learning to code like 3-4 years ago. Started with the free Code Academy Python course and bounced around to a bunch of different courses and books. Lots of ragequitting, lots of being busy with the working father & husband life, lots of just procrastination quitting and gaming instead. Lots of feeling stupid for not being able to think in simple logic. 

But FINALLY, after trying to study and learn on the side here and there, after starting and restarting Automate the Boring Stuff like 3-4 times, I'm getting to the point where I can actually figure out the Practice Projects at the end of the chapters without having to go look up someone else's GitHub to get a solution. Obviously I still have quite a long way to go, but I'm *finally* starting to get over hump. Maybe I'm not retarded after all *sniff* 

So if you're also stuck trying to get over the hump, just keep going and keep trying. It'll click eventually. Even if it takes a while. I know that sounds oversimplified and unhelpful but that's the same advice I got and I've found it to be true. 

My current plan is to (finally) complete ATBS, then go through ATBS 2nd Edition just to see what new stuff is in there, then go on to complete CS50 via edX, and then I've got an Android development course on Udemy I bought a while back that maybe I can finally start on, and then from there, I don't know. I'm open to suggestions :) I'm trying to get to the point where I can actually work as a developer and get out of Helpdesk support, and maybe develop my own Android app(s) on the side.

But anyway, tl;dr: Keep going :)

EDIT: looks like someone posted the new MIT edX course so I hope I can complete that as well: https://www.reddit.com/r/learnpython/comments/esdgks/free_mitx_course_starts_today_jan_22_2019_on_edx",1579659329.0
Stanford's Code in Place Course,438,m6qkzj,learnpython,https://www.reddit.com/r/learnpython/comments/m6qkzj/stanfords_code_in_place_course/,129,"Hey everyone,

Stanford's Code in Place course, which loosely follows their CS106A Programming Methodologies class, is being offered again starting April 19th with student applications due by April 8th. This is a great entry level Python and Programming class. I was fortunate enough to take this class last spring, and it really was a great learning experience, and best of all, it was free!

I'm not affiliated with this course in any way, other than I participated in it last go-around, and really loved it, so I wanted to get the word out. Here's a link for more information: [https://codeinplace.stanford.edu/](https://codeinplace.stanford.edu/)

Hope this helpful for someone!

*Edit:*

There seems to be some interest, and that's really exciting for me. I think the main value of this course are the instructors. They seemed to be so passionate, bright, and energetic. This class really allowed me to cultivate my love of coding, and really filled in a lot of gaps that your standard online tutorial just doesn't quite fill. (It also made me wish I studied harder in high scool so I could have attended Stanford instead of my local state university). That being said, here's an inspirational clip from the instructor, Mehran, that was well, really inspiring!

[https://www.youtube.com/watch?v=nWRGPxSNnag](https://www.youtube.com/watch?v=nWRGPxSNnag)",1615950032.0
"2,000 free sign ups available for the ""Automate the Boring Stuff with Python"" online course. (Jan 2023)",440,101p7tb,learnpython,https://www.reddit.com/r/learnpython/comments/101p7tb/2000_free_sign_ups_available_for_the_automate_the/,46,"UPDATE: The signs up are all used up. (Whoa, that was fast this month.) I'll release new codes on Feb 1st. But you can still see the first 15 of the 50 videos [on YouTube](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW), and the [Previews for all the videos are enabled on the course page](https://udemy.com/course/automate/).

If you want to learn to code, I've released 2,000 free sign ups for my course following my Automate the Boring Stuff with Python book (each has 1,000 sign ups, use the other one if one is sold out): 

~~https:// udemy. com/course/automate/?couponCode=JAN2023FREE~~

~~https:// udemy. com/course/automate/?couponCode=JAN2023FREE2~~

Udemy has changed their promo code and severely limited the number of sign ups I can provide each month, so only sign up if you are reasonably certain you can eventually finish the course. [The first 15 of the course's 50 videos are free on YouTube if you want to preview them.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

YOU CAN ALSO WATCH THE VIDEOS WITHOUT SIGNING UP FOR THE COURSE. All of the videos on the course webpage have ""preview"" turned on. Scroll down to find and click ""Expand All Sections"" and then click the preview link. You won't have access to the forums and other materials, but you can watch the videos.

**NOTE: Be sure to BUY the course for $0, and not sign up for Udemy's subscription plan. The subscription plan is free for the first seven days and then they charge you. It's selected by default. If you are on a laptop and can't click the BUY checkbox, try shrinking the browser window. Some have reported it works in mobile view.**

Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.

Some people in India and South Africa get a **""The coupon has exceeded it's maximum possible redemptions""** error message. [Udemy advises that you contact their support if you have difficulty applying coupon codes, so click here to go to the contact form.](https://support.udemy.com/hc/en-us/requests/new?type=student) If you have a VPN service, try to sign up from a North American or European proxy.

**I'm also working on another Udemy course** that follows my recent book ""Beyond the Basic Stuff with Python"". So far I have [the first 15 of the planned 56 videos done. You can watch them for free on YouTube.](https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&index=1)

Side note: My latest book, Python Programming Exercises Gently Explained is a set of 42 programming exercises for beginners [for free](https://inventwithpython.com/pythongently/) or as a [99 cent ebook](https://www.amazon.com/Python-Programming-Exercises-Gently-Explained-ebook/dp/B0BGYJ7G6T/).


**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",1672697085.0
Learning your IDE Debugger will change your life,436,q0iv8t,learnpython,https://www.reddit.com/r/learnpython/comments/q0iv8t/learning_your_ide_debugger_will_change_your_life/,66,"Don't make that same mistake that I did. I've been coding for more than 6 months always debugging by using print functions, spending several hours trying to run the code a thousand times hoping to get it right eventually.

When I tried to use the debugger on my own it seemed too complicated, stuff for advanced users, and never really gave it a shot. But in the past week, I decided to learn how it works, and holy fucking shit I could not believe it.

You can do so much stuff with it it is incredible. Not only you're able to keep track of all variables as the code runs line by line, you can tell it to print the variables if would like, you can set conditional breakpoints, you can evaluate new things mid debugging session like a scratchpad calculator for code. In Pycharm it allows you to see dataframes with a beautiful layout with color formatting.

I wish I knew this when I was beginning. My life would be so much easier. My productivity increased so much I feel dumb for not stopping to learn the debugging tools earlier.

Please, if you don't know how to use the debugging tool, take 30min of your day to learn it. It will change your life.

I used the first half of this video to learn the Pycharm debugger: https://www.youtube.com/watch?v=k6j1NkVAsuU",1633271437.0
It took me almost a week to solve a simple problem but I finally did it and I'm so happy.,439,g4h0t1,learnpython,https://www.reddit.com/r/learnpython/comments/g4h0t1/it_took_me_almost_a_week_to_solve_a_simple/,30,"So, I'm doing a course on Algorithms and our  graded assignments wanted us to have a 3 way partition of the quicksort. I thought it would take me like an hour to solve the problem. Well, fast forward to one week later I was still on it. I used stack overflow, read solutions and nothing clicked. I was literally clueless and stuck on a specific case and ran out of ideas. Today, a new technique just clicked and I tried working on it(but I was almost sure it wouldn't work just like the things that I've tried during the entire week but I tried anyways). After some debugging, I've tested and it's finally working. I don't know why I am sharing this but I feel like I can finally solve a problem and it was so hard for me.

EDIT: I never expected to get so many upvotes, thanks a lot guys. But, I gotta be honest with yall. I tried some test cases and looks like I still got some work to do. Oh well, back to it again

EDIT2: This time I did it for real. Submitted the assignment and got marks. Never give up guys

Exact problem was:

3 way partition of quicksort where we would want to mutate the python list and return two indexes m1, m2 such that the left side of m1 have elements that are less than X and the right side of m2 have elements that are greater than X (X being the first element of the list). That's it! And the two way partition where it just returned a single index to the left of which are elements greater than or equal to X was already implemented in the starter code.

&#x200B;

Here's an example of what it would look like:

input:

a = \[5, 1, 8, 5, 3, 2, 5, 8, 3, 5, 2, 5\]

&#x200B;

After the function call, array would be similar to

\[2, 1, 3, 2, 3, 5, 5, 5, 5, 5, 8, 8\]

&#x200B;

and m1, m2 will be 5, 9

&#x200B;

&#x200B;

&#x200B;",1587336023.0
I finally wrote something useful!,437,fan8by,learnpython,https://www.reddit.com/r/learnpython/comments/fan8by/i_finally_wrote_something_useful/,72,"Sorry, I really don’t have anyone else to gloat to. 
I’ve been really trying over the past year to wrap my head around python but thought I would never get it after trying a bunch of boring online courses. I recently got the book “Automate the boring stuff with python” (I’m about half way through) and it made me start thinking about things totally differently. The way the book explained why stuff didn’t work really made things click.

A couple days ago an idea popped into my head for a project that would actually be useful for me. I wanted to take an eBay page url, drop it in and have it generate a pdf to a specific folder. I’m an eBay seller so I figured it would be nice to track some items since eBay only keeps sold records for 90 days.

I wrote it out on paper, worked through some issues and after a day, I have a code that takes an eBay url you enter,has you choose a file name, generates a pdf of the page with the name entered, creates a folder on the desktop and puts the pdf in the folder. Now I’m sure it’s messy or could have been done differently but I learned so much in the process, and it works!!

I never thought I could figure anything like this out but thanks to this sub for motivating me, I’m finally seeing progress!!",1582855443.0
Feeling down? Having second thoughts? Here's my story. Maybe it'll inspire you.,439,md23z9,learnpython,https://www.reddit.com/r/learnpython/comments/md23z9/feeling_down_having_second_thoughts_heres_my/,58,"Background: I'm a senior at a university in NJ studying Information Technology and Cybersecurity

At the beginning of February '21, I began thinking about my senior project and what it could be. I quickly realized that I wanted to create my own license plate recognition system that was lightweight and didn't require a ton of processing power. I signed the contract with the professor overseeing my progress, and in that moment, my project was set in stone. LOSERS was a **GO!** \*For the record, LOSERS stands for ""License Observation System for Examining Rogue Speeders"", and yes it took far too long to come up with.

A couple days later, I created a list of functions that I wanted the system to have; recognition, database support, web application, etc. And a few days after that, I set off and started writing the code.

Jump to February 21^(st) and my laptops' SSD corrupts. Nothing could be recovered. I lost everything. I immediately sent an email to my professor and asked him what to do. His response...""Do your best. Try to get it done"".

Now, just over four weeks later, I have my ~~first~~ second working prototype. I can input a video and get multiple automatic database entries of {ID, image, plate number, capture date/time}.

If you have EVER thought about quitting. Or that you can't learn Python. Don't be so hard on yourself. Before starting this project, I knew enough to make Hello World appear in the command line. That's it. Now I have multiple scripts of 85-100 lines each. **You. Can. Do. This.** If I can create a prototype in a month while juggling 3 other courses, you can do it too.

&#x200B;

Edit: Y'all are **way** too kind! Thanks everyone for the words of wisdom, well wishes, and the awards! I've said it in the comments, but here's a couple common ideas that came up.

>How could you get to senior year of college and not know how to use Git/GitHub?

Unfortunately my school prioritizes knowledge over usefulness. They'll happily teach the most convoluted ways to do something with code, but will turn the other cheek when someone mentions version control or Git.

>Are you new to programming? Or just Python?

I'm new to Python. Haven't touched it before starting this project. Was that a smart decision? Probably not. But I learned a heck of a lot and I can't be more happy with where I am.

Last but not least, to those of you who are just starting your programming journey or maybe you're just starting to learn Python, **please** feel free to DM me with any questions or issues. I'm always happy to help you debug.

**Edit 4/17/21: If anyone is interested in the project, it's** [**here**](https://github.com/aseams/License-Plate-Recognition)**.**",1616689344.0
Why do people use _ in for loops?,441,hqxwfp,learnpython,https://www.reddit.com/r/learnpython/comments/hqxwfp/why_do_people_use_in_for_loops/,67,Saw this ik a video but don't understand,1594716026.0
Where to start learning Python?,436,ii74og,learnpython,https://www.reddit.com/r/learnpython/comments/ii74og/where_to_start_learning_python/,107,Hi. I am a complete newbie to this field. I have zero programing experience. But I want to learn Python. Is Udemy's Python: zero to mastery course a good place to start. Or please recommend where and how to start learning Python.,1598621721.0
Where to start to learn Machine Learning?,435,hxmce7,learnpython,https://www.reddit.com/r/learnpython/comments/hxmce7/where_to_start_to_learn_machine_learning/,49,"Hello everyone. I completed the beginning course of Python and Tkinter and have done some projects as well. But now I want to learn data science and go into Machine Learning. I don't know what to learn next. So, please help me.",1595682082.0
6 Month Internship Journey,440,m5t7as,learnpython,https://www.reddit.com/r/learnpython/comments/m5t7as/6_month_internship_journey/,33,"It's quite crazy that I'm going to share this story because I can't really believe I pulled it off, I read so many of these posts and here I am. I started learning Python in October 2020 and it sucked me in, I started creating my own projects, attended Pycascades and fell in love with the world of programming. I landed an internship with a start-up last Friday and it's still sinking in.

I got caught up in the second round of lockdowns in France during my Masters and I had been trying to learn how to program for awhile. So I decided to give it a real chance and put as much time in as I could. The first two months weren't easy at all and I wasn't sure if I'd ever get it. I resorted to personal projects and I tried out leetcode, codewars etc. My wheels were spinning but there wasn't much traction. Once I got a few basic random projects done I started to feel more comfortable. I was reading articles, doing tutorials, buidling projects, watching lectures, etc religiously. It really felt like I found my niche and the learning was rewarding. In Januay/February I had two interviews, I wanted to see where I was and realised I was off the mark still. I bombed a coding test and the other involved a take home test, the library needed failed to install, I gave it a bash with another but came short.  So I got my hands on algorithms and data structures and I dove deeper into Python and decided I wanted to learn as much as I could about the nuts and bolts. 

Fast forward to last week, I was nearly finished with the learning I was focused on and moved onto asyncio and FastAPI. I saw the job posting and realised I ticked all the boxes but I wasn't sure about my Python. The first interview went extremely well and the second was based on a code review of a FastAPI project. Which I had just learnt, I implemented asyncio aswell and I seriously wasn't sure if it was good enough. I tried my best to implement good practices and just create something I'd be proud of. Well after reviewing my code, I got an offer. I honestly nearly did a back flip off my chair. 

I do think I got lucky and that I still have a ton of work to do. However I followed the advice of the people that did it before me, when you ask ""am I ready?"" You apply and you find out, well it's sage advice. I was over the moon that I made the second round, let alone landed the internship. I counted making a second round as progress, I was aiming on landing something by the end of the year. My story isn't unique or special, I think it echoes what gets shared on reddit basically everyday. There's no shortcut and all you need to do is put the time in. Eventually you'll look at problems differently, you'll break things down and see difficult problems as a enjoyable tug of wars that you methodically deconstruct and conquer. 

Thank you for all the great answers all of you give everyday. I learnt a lot by reading other peoples problems. All of the advice given is great and I appreciate you guys and girls taking time to help newbies figure things out. You're a part of these journeys, stay awesome.",1615837820.0
Beginner/Intermediate Python Programmer Finally Using Multiple Files for Project,434,k08v7b,learnpython,https://www.reddit.com/r/learnpython/comments/k08v7b/beginnerintermediate_python_programmer_finally/,75,"Holy Moley! I started playing around with building a mini-project using multiple files instead of one long file. Wait, let me back up...

I just started Python about a year ago, self-taught, and have been actively building desktop apps for my company in the CMP Semiconductor field. They're efficient applications that my boss loves and have been able to make us some good $$$. But, my codes are over 10,000 lines long. And I knew there had to be a better way. 

Fast forward to today where I built a main file, and put a class in another file with some basic math functions. Then in my main file I built a little GUI to solve simple math problems. (I LOVE PYSIMPLEGUI, a big shout out to u/MikeTheWatchGuy for all the work he does.) And I just imported the class into my main and called it as normal...and it works. Easy as pie. I couldn't believe it. I feel like I've just learned a super valuable piece of information that I had been missing out on. Milestone achieved. 

Thanks for reading and sharing in my epiphany!",1606237228.0
"Learning Python for Data Science: Deep learning (TensorFlow, Theano, Keras, Caffe), scikit-learn, Kaggle, big data (Spark, Hadoop MapReduce, HDFS), matplotlib, pandas, NumPy, SciPy, Python essentials, AWS, and various command lines.",434,60n6gh,learnpython,https://www.reddit.com/r/learnpython/comments/60n6gh/learning_python_for_data_science_deep_learning/,20,"Hi Reddit,

Just wanted to share a recently updated collection of Jupyter notebooks I reference while learning about and working with data.

https://github.com/donnemartin/data-science-ipython-notebooks

Topics include:

* Python language essentials geared towards data processing
* Python data stack
* Machine learning
* Deep learning
* Big data processing with Spark, MapReduce, and AWS
* Statistical inference
* Business analyses (ie churn modeling)
* Various command lines

-Donne",1490097922.0
My first web app! Made with Django,433,gwr14x,learnpython,https://www.reddit.com/r/learnpython/comments/gwr14x/my_first_web_app_made_with_django/,71,"I've been working diligently learning python and finally have something to show for it! It felt like a long stay in tutorial purgatory with tons of failures, but I'm starting to feel like I'm emerging :)

My first app is a net worth/personal finance app called [TrackerBE!](https://www.trackerbe.com)

I made it public a few weeks ago, and I'm hoping to find someone that can use it for a week or so and provide some feedback. Let me know if you're interested in poking around :) You basically add financial info, and it tracks trending charts over time. I'm hoping to add enough features and tools to launch a full service in early 2021. Let me know what you think :) Thank you!

EDIT: Here's some screenshots. I'll work on getting a home page built that provides more about the app.

[Investments - Mobile View](https://www.trackerbe.com/staticfiles/Snapshot/images/TrackerBE_SS1.75ef2f8b70e8.PNG)

[Home Page - Desktop view](https://www.trackerbe.com/staticfiles/Snapshot/images/TrackerBE_SS2.78cc62261d1d.PNG)

[Investments - Desktop view](https://www.trackerbe.com/staticfiles/Snapshot/images/TrackerBE_SS3.dba7d326761a.PNG)

EDIT: Also, for my fellow students of python who feel lost, just keep on trucking along. It sounds cheesy, but you truly don't fail until you quit. Eventually, piece by piece, bit by bit, things start to make sense. Personally, I feel like I had an 'Aha!' moment working on this app where my development speed started picking up and the overall app architecture just started falling into place and making sense. The most helpful resource for me so far on my journey was the edX MITx 6.00.1x Intro to CS and Python course. Keep at it! :)

EDIT2: For those interested, my django app was deployed using Heroku. I found it far easier to get off the ground running. I had some success trying Azure and DigitalOcean, but kept running into problems I couldn't solve with my current knowledge.",1591307218.0
Does anyone else forget some of the core basics? Like how to open/write a file?,432,h96rcb,learnpython,https://www.reddit.com/r/learnpython/comments/h96rcb/does_anyone_else_forget_some_of_the_core_basics/,111,"Hello everyone, 

I've been coding for a number of months now, and I frequently forgot some of the most basic commands/uses. Granted, I easily know where to find the answers so I just look them up, but I just feel like...am I just a bad coder or is this a common problem? Sometimes I'll just forget the command to open a file, or how to call a dictionary.",1592186442.0
The Ultimate List of Python YouTube Channels – Real Python,430,8sr32u,learnpython,https://www.reddit.com/r/learnpython/comments/8sr32u/the_ultimate_list_of_python_youtube_channels_real/,17,"For those who like to learn python by video this a great ""curated"" list for YouTube.

The Ultimate List of Python YouTube Channels – Real Python

[https://realpython.com/python-youtube-channels](https://realpython.com/python-youtube-channels)

My favorites so far: Al Sweigart, Corey Schafer, Sentdex and Socratica

Let me know what you like or find useful ...",1529580457.0
Learn algorithms and data structures (and prep for coding interviews) with interactive coding challenges in Python,435,63sg43,learnpython,https://www.reddit.com/r/learnpython/comments/63sg43/learn_algorithms_and_data_structures_and_prep_for/,12,"Hi Reddit,

I've recently overhauled the interactive Python coding challenges repo, now with more than double the original content:

https://github.com/donnemartin/interactive-coding-challenges

Included are unit tested reference implementations of various data structures and algorithms.

Each challenge has one or more reference solutions that are:

* Fully functional
* Unit tested
* Easy-to-understand

Notebooks also detail:

* Constraints
* Test cases
* Algorithms
* Big-O time and space complexities

Anki flashcards are also available.  Great for use while on-the-go!

Bonus: If you're looking to learn/practice system design or object oriented exercises, check out the sister repo, The System Design Primer:

https://github.com/donnemartin/system-design-primer

Hope this helps!

-Donne
",1491479780.0
I made a thing: a Twitter bot which nags at my ISP when I'm unhappy with my internet connection.,431,8i9st7,learnpython,https://www.reddit.com/r/learnpython/comments/8i9st7/i_made_a_thing_a_twitter_bot_which_nags_at_my_isp/,54,"[Github repository](https://github.com/crlsmnzs/InternetSpeedNagger)

Inspired by a post I saw on /r/ProgrammerHumor ages ago. Critique my code as I'd be very happy to optimize it and make it more legible.",1525902638.0
I finally did something useful,426,11nhm05,learnpython,https://www.reddit.com/r/learnpython/comments/11nhm05/i_finally_did_something_useful/,40,"Recently I automated something at work that probably saved me 10+ hours of repetitive work. I even had a coworker remark on how quickly I finished the project. It was extremely satisfying. I just wanted to post this, as a bit of a brag maybe, but also as encouragement to anyone who is struggling with learning right now. It can be really frustrating to learn python and find use for it, but there are times when it is extremely gratifying. Don't give up!",1678431297.0
Made a script that will clean your mess after death,428,f3ol1r,learnpython,https://www.reddit.com/r/learnpython/comments/f3ol1r/made_a_script_that_will_clean_your_mess_after/,109,"Recently, there have been a rumor; a man deletes his friend's chrome history after his friend dead.

So, I decided to make a script that will be my buddy. My buddy will clean my chrome history and private files which I added their paths before. Being a very beginner on python, more or less, I think I achieved this project. You add the directories and  set the time. On every startup, you will see your date on the screen for 10 secs. When the time comes and if you haven't set extra time on the program, it will delete your browser history and the paths you added. Also you can hide this paths too using windows superhiding method.

Here is the link: [https://github.com/hasanaslan7/loyalbuddy](https://github.com/hasanaslan7/loyalbuddy)

PS:  As I said I consider myself as a beginner. If you have any opinions and arrangements on my code, I would be glad to hear them. Also, I couldn't convert this to an exe file. When I did it, I will share it on the same link.",1581664058.0
I have a demon. I consider myself a decent Python programmer but I can't understand when or why I should use classes.,429,f0ir0x,learnpython,https://www.reddit.com/r/learnpython/comments/f0ir0x/i_have_a_demon_i_consider_myself_a_decent_python/,101,"I love Python, I've done projects that have stretched me and I am proud of. I want to make professional level code that's extensible, readable, modifiable, and organized. I know classes are how most people do this, but I am stuck in function land. I can do everything I would ever want to do with functions, but I understand there must be things I am missing out on.

Can anyone here help me see what I can do with classes that might be making my strictly func based code lacking. I think I just need some concrete examples or tips. Thanks.

Edit: Just wanted to thank everybody for all their help. There are a lot of insightful replies and between the thought put into a lot of the comments as well as the different perspectives I feel much better about the subject now - and started started re-writing a module giving me trouble that was desperately in need of a class. I'm touched and inspired by so many people willing to help.",1581117265.0
Jupyter Notebooks!,427,hppmaa,learnpython,https://www.reddit.com/r/learnpython/comments/hppmaa/jupyter_notebooks/,128,"Jupyter Notebooks are the tool that turned the tables for me learning python. I'm just here to evangelize them. You can run your code line by line and debug as you go in a comfortable web browser interface. It's an excellent tool, and it made it so much more efficient to learn. Check it out.",1594534287.0
Wrote my first API,423,czgpgs,learnpython,https://www.reddit.com/r/learnpython/comments/czgpgs/wrote_my_first_api/,44,"I would love any feedback.  The API simply returns homebrewing calculations.  I know there still a lot to do.  [Brew Numbers API](http://18.216.248.93)

[Github Repo](https://github.com/bmw2621/brewNumbers)",1567575759.0
"Something to lighten your learning process (Python Programmers, disagree or agree?)",425,iqromt,learnpython,https://www.reddit.com/r/learnpython/comments/iqromt/something_to_lighten_your_learning_process_python/,54,"hey guys, I've been thinking a lot about Python and the learning process.

It can be brutal.

Probably the most difficult thing is not having anyone around to tell you if you're doing things right or heading in the right direction (thank goodness for this subreddit though).

I wanted to provide a few pieces of encouragement for anyone struggling with the learning process:

* Those feelings of a lack of progress, wandering, and discouragement are normal. Some of these feelings are part of the larger experience of impostor syndrome. It's ok to feel these things, just don't give in to them. 
* The best way to overcome and not give into impostor syndrome? Fixate on growth like hell. You don't have to have huge growth, just enough to keep moving forward. Was there a recursive function you understood better? An interview question you memorized? Maybe you read a few more pages in a Automate the Boring Stuff. All small, but fantastic ways to grow and overcome impostor syndrome.
* You're heading in the right direction. Python is a great OOP language to learn-keep going. You're asking for feedback here and genuinely asking for help.  Keep staying open to feedback and make small adjustments from there. 
* You'll always be ""becoming"" a Python programmer and there's not a point of arrival. Remember, learning Python is a long game and you'll always be learning new things. If you ever get discouraged with forgetting a function or piece of syntax, expert Python coders still use StackOverflow to solve their problems so don't feel bad :) 

Feel free to ask any questions, I'm here to help.",1599835022.0
I've Given Up Multiple Times Trying To Code (10+ Years). I Finally Thought Of A Simple Program Which I Just Completed!,425,qh5vw8,learnpython,https://www.reddit.com/r/learnpython/comments/qh5vw8/ive_given_up_multiple_times_trying_to_code_10/,64,"It's a simple program which asks you what and how many drink(s) you've had.  Then it calculates the total milligrams (mg) and checks whether or not you've had too much caffeine as recommended by the FDA.

I'm so happy I was finally able to complete something without following along with a video or copying from a book.

    def get_drinks(prompt):
        print(""*************"")
        print(""Type 1 for Monster energy"")
        print(""Type 2 for coffee"")
        print(""Type 3 for espresso"")
        print(""*************"")
        
        total_caffeine = 0
        name = ''
        while True:
            try:
                value = int(input(prompt))
            except ValueError:
                print(""That is not a drink.  Please try again."")
                continue
            if value == 1:
                total_caffeine += 160
                name = 'Monster'
            if value == 2:
                total_caffeine += 95
                name = 'coffee'
            if value == 3:
                total_caffeine += 64
                name = 'espresso'
            return total_caffeine, name
    
    def get_amount(prompt):
        while True:
            try:
                amt_drinks = int(input(prompt))
            except ValueError:
                print(""That is not a valid input.  PLease try again"")
                continue
            return amt_drinks
    
    def main():
        fda_total = 400 # Recommended FDA daily intake of caffeine in milligrams (mg)
        total_mg = drink[0] * amt
        if amt == 1:
            print(f""You've drank {amt} {drink[1]} which is {drink[0]}mg of caffeine."")
        if amt >= 2:
            print(f""You've drank {amt} {drink[1]}s which is a total of {total_mg}mg's of caffeine."")
    
        if drink[0] * amt < fda_total:
            print(""You're under the daily recommended intake of caffeine. Great job!"")
        else:
            print(""You're over the daily recommended intake of caffeine.  Please consider drinking less caffeine."")
    
    drink = get_drinks(""What drink(s) have you consumed so far? "")
    amt = get_amount(""How many of those drinks have you had? "")
    main()
    

edit: Here's the updated code if anyone wants to view - [https://github.com/techmatlock/caffeine-calculator](https://github.com/techmatlock/caffeine-calculator) 

  
Credit: /u/carcigenicate /u/SnipahShot and everyone else.",1635366742.0
IT Denied My Request to Download Python Due to Security Reasons...,423,it9049,learnpython,https://www.reddit.com/r/learnpython/comments/it9049/it_denied_my_request_to_download_python_due_to/,182,"I used to have admin rights (data analyst) at my previous employer. 

After starting my new role, as a sales analytics manager, I can’t even get python (or even a database application) installed...

Other than personal projects, any other creative ways to continue using python?

***Edit: WOW! Thanks for all the feedback. I’ve addressed it to my manager and we’ve agreed to request it again after I propose a proper justification that backs up my needs to download Python. If it gets denied by IT again, my manager might go straight to the CEO but I don’t know if that’ll be necessary. Until then, I’ll have to familiarize myself with VBA again!***

Suggestions to consider: 
- VM
- Anaconda",1600177355.0
I wrote an application that sets your background to NASA's picture of the day!,424,emdvop,learnpython,https://www.reddit.com/r/learnpython/comments/emdvop/i_wrote_an_application_that_sets_your_background/,54,"After some research I figured out that someone already came up with this idea (Great minds think alike!), but he took slightly different approach to this, and his is more advanced I guess. I just wanted to make something for fun, so don't expect this to be even slightly as good as his. Even if I tried it wouldn't be half as good. You can find his attempt at this [here](https://www.reddit.com/r/learnpython/comments/ef072o/im_working_on_a_cli_application_to_change_your/).

\---------------------------------------------------------------------------------------------

Anyway mine is windows only, and you can find the code [here](https://gist.github.com/glof2/b490f5df1961d5d471271ae930aee316).

Any adviced would be appreciated.

Thanks in advance!",1578595169.0
UPDATE: can you help me write some clever brief code on a shirt for my boyfriend?,423,pv8ayn,learnpython,https://www.reddit.com/r/learnpython/comments/pv8ayn/update_can_you_help_me_write_some_clever_brief/,66,"Thank you SO much to all the people who gave me ideas to help celebrate my boyfriends new job title “software engineer”. I appreciate you so much. I decided to make two of them into sweatshirts, and matched the colors to the dark mode code editor that he uses. I just wanted to show you all because I am so excited about ordering them! It’s written in embroidery which I think will look nice. (:
[Here are the sweatshirts.](https://imgur.com/a/eM3Pvzm)",1632581759.0
What are some really intro/beginner basic project ideas I could do to learn python? (coming from a complete starter),418,hd9oaf,learnpython,https://www.reddit.com/r/learnpython/comments/hd9oaf/what_are_some_really_introbeginner_basic_project/,62,"Hey! I recently picked up python 3.8 in quarantine (about 6-7 days ago) and I've been watching [freecodecamp.org](https://freecodecamp.org)'s tutorial on it (still not finished, I'm at the part about nested loops), and was wondering what are some simple yet challenging beginner python projects I could try and make to try and actively learn rather than just be stuck in tutorial purgatory.",1592756632.0
I just got my first Internship.,420,gcnubf,learnpython,https://www.reddit.com/r/learnpython/comments/gcnubf/i_just_got_my_first_internship/,50,"And I am really happy. I am still an undergraduate student near my  graduation. After getting the internship it was like it didn't have  anywhere people to tell my internship or people who were that happy for  me. Throughout my college I thought if I am even worthy of doing  anything, That whatever am I studying is there anything new I am doing  or in a better way. But I have to keep pushing because I didn't have  many options. My 2 years passed and it was like I was still at ground  zero. But as I was near my graduation I thought I need to get my shit  together so I tried learning things from the basics again but this time  with all my might. I put all my efforts this time thinking I still have  time to turn around things. And after I was done with courses unsure of  my skills I thought of applying for internships. I applied for so many  but haven't heard from most of them up till now. But one of them  responded and after some interviews and tests hired me. It's a paid  internship, It not might be that big, but for me, it's enough to make me  believe in myself once again. I was always worried that whatever I am  studying doesn't payoff, how am I going to my parents who put this much  effort in this but now it feels like I am not a total loser I might  stick around. Prove my worth. I just need to let this all out.",1588498676.0
I just wanted to say how great Automate The Boring Stuff is,425,5honmq,learnpython,https://www.reddit.com/r/learnpython/comments/5honmq/i_just_wanted_to_say_how_great_automate_the/,88,"I'm only on chapter 3, but I have learned a lot. I'm able to create little programs such as a calorie calculator, small adventure game, dice simulator, etc. I'm having a lot of fun and I'm really excited for the future.

When I was learning html/css/js, I thought that's what programming was. I never enjoyed it and it was hard for me to learn. Python and ATBS has sparked something inside of me that makes me feel that fuzzy feeling again. Yipee!

I just really wanted to share with someone.

edit: spelling",1481434729.0
By the end of this year I want a new career -- Tips!,420,kov957,learnpython,https://www.reddit.com/r/learnpython/comments/kov957/by_the_end_of_this_year_i_want_a_new_career_tips/,77,"Howdy y'all.

I'm 30 years old and for the past six years I've dedicated my life to retail. I do enjoy working but at this point I can't see how I'd be able to continue living making only $32,000 a year. Since I was a kid I was always into computers but I never really took the time to actually learn about them. Just last month I signed up for three coding classes at a local community college which are set to start in February.

I don't know exactly what career path I want to follow yet but if anyone has any general tips for me I'd appreciate it. Just anything y'all learned along the way that you wish you knew sooner. 

I know there are many resources online and that I may not necessarily need to take online courses, but for me I need that extra push to get started. I've been wanting to go back to school for a while now and this is the perfect opportunity.

Thanks!",1609582736.0
What is a Python trick you wish you could have learned/someone could have taught you?,418,1g07qoh,learnpython,https://www.reddit.com/r/learnpython/comments/1g07qoh/what_is_a_python_trick_you_wish_you_could_have/,111,"Newbie programmer here, let's make this a learning process for everyone",1728523895.0
Python Newbies(Encouragement),419,ox10yd,learnpython,https://www.reddit.com/r/learnpython/comments/ox10yd/python_newbiesencouragement/,44,"Hello newbies,

I'm also a python newbie but I wanted to provide some encouragement.  Don't compare your journey to others because a lot of times, we compare ourselves to those who have been coding for many years.  Once you master this programming language you will look back on it and realize how hard you were on yourself.  When we stress about not learning fast enough, we forget to have fun with the learning process.  It should be exciting to learn something new, not stressful.  Focus on what you have learned and less on what you struggle with.  Trust that you will get it eventually . Right now, you know a lot more than those who don't study Python at all.  Give yourself some credit and have fun with the process.",1627988280.0
"My professor took points off for ""Hard coding"" Why?",415,kw87qs,learnpython,https://www.reddit.com/r/learnpython/comments/kw87qs/my_professor_took_points_off_for_hard_coding_why/,81,"I used the following code. Please excuse any spacing errors as I'm on mobile. 

cname = input(""Please enter the customer's name: "")

gprice = input(""Please enter the unit price for the goods: "")

gnum = input(""Please enter the number of goods purchased: "")

gname = input(""Please enter the name of the goods: "" )

tot = float(gprice) * float(gnum)

print(""The customer"", cname, ""paid $"" + str(tot), ""for 5 items of"", gname)


The expected output was correct. He specifically said ""print hard coding""

So turns out I'm just an Idiot and typed the 5 from the example output into my code instead of calling the variable. Thanks for the help guys lol.",1610509507.0
"Just made my first ""full"" program ever! It's a game where you rob people and try to avoid the Cops. Show me some tricks, easier ways to do this, or even cool add ons I could incorporate!",418,kj5p6c,learnpython,https://www.reddit.com/r/learnpython/comments/kj5p6c/just_made_my_first_full_program_ever_its_a_game/,46,"I'm really proud of myself. I'm sure that it isn't cool at all to anyone else - but this is 2 months of me studying Python every day for a hour.

What are some cool things I can add?

What about easier or alternative ways to do this?

    import random
    
    def Robbery():
        total = 0
        lootlist = []
        lootposs = [""Watch"", ""Computer"",""Diamond""]
        attempts = int(input(""Pick a number of times""))
        counter = 0
        watch_total = 0
        computer_total = 0
        diamond_total = 0
        game = ""on""
        sentence = random.randint(0,15)
        print(f""----------------------------------------------------------------------"")
        print(""\n----------START OF THE GAME----------\n"")
        for nums in range(attempts):
            Outcome = random.randint(0, 10)
            if Outcome in [0,1,2,3,4]:
                stolen = random.randint(0,1000)
                total = total + stolen
                counter = counter + 1
                print(f""----------------------------------------------------------------------"")
                print(f""\nNumber {counter} attempt was successful:"")
                print(f""-------------------------------------------"")
                print(f""You stole {stolen} dollars."")
                print(f""You have stolen {total} dollars so far"")
                print(f""You have stolen {watch_total} watch, {computer_total} computer, and {diamond_total} diamond so far"")
            elif Outcome in [5,6,7]:
                loot = random.choice(lootposs)
                if loot == ""Watch"":
                    watch_total = watch_total + 1
                elif loot == ""Computer"":
                    computer_total = computer_total + 1
                else:
                    diamond_total = diamond_total + 1
                lootlist.append(loot)
                counter = counter + 1
                print(f""----------------------------------------------------------------------"") 
                print(f""\nNumber {counter} attempt was successful:"")
                print(f""-------------------------------------------"")
                print(f""You stole a {loot}!"")
                print(f""You have stolen {total} dollars so far!"")
                print(f""You have stolen {watch_total} watch, {computer_total} computer, and {diamond_total} diamond so far!"")
            else:
                counter = counter + 1
                game = ""off""
                print(f""\n----------------------------------------------------------------------"")
                print(f""\nNumber {counter} attempt YOU WERE CAUGHT :( \n"")   
                print(f""You robbed {counter} times, stole {total} dollars!"")
                print(f""You took {watch_total} watch, {computer_total} computer, and {diamond_total} diamond!"")
                print(f""You went to prison for {sentence} years!"")
                break
        if game == ""on"":
            print(f""\n----------------------------------------------------------------------"")     
            print(f""\nNumber {counter} attempt YOU WERE NEVER CAUGHT!!!!! :) \n \n"")
            print(f""You robbed {counter} times, stole {total} dollars"")
            print(f""You took {watch_total} watch, {computer_total} computer, and {diamond_total} diamond"")",1608772447.0
Finally used Python at work for something useful,418,gwepmc,learnpython,https://www.reddit.com/r/learnpython/comments/gwepmc/finally_used_python_at_work_for_something_useful/,45,"I'm a policy consultant and deal with a lot of basic statistics at work, particularly when we create city indexes on various topics (SDG compliance, competitiveness, Sustainable mobility...). We're refining our criteria to make sure indicators on one index do not correlate negatively to each other to make sure they all ""row in the same direction"". I started ATBS a few weeks ago because there's a lot of Boring Stuff in my work with the idea being to move on to statistics and PyQGIS after that (I'm the official 'Guy Who Does Maps'). So today I did a few searches and created correlation matrices for our past indexes with this code.

>import pandas as pd  
>  
>df = pd.read\_excel (r'Path where the Excel file is stored\\File name.xlsx')  
>  
>\#df = pd.read\_excel (r'Path where the Excel file is stored\\File name.xlsx', sheet\_name='your Excel sheet name')  
>  
>\#this imports only one sheet  
>  
>corrMatrix = df.corr()  
>  
>\#print(corrMatrix)  
>  
>import seaborn as sn  
>  
>import matplotlib.pyplot as plt  
>  
>sn.heatmap(corrMatrix, annot=True)  
>  
>[plt.show](https://plt.show)() #this is if you want the image  
>  
>df.to\_excel(""output.xlsx"")  #this exports the excel

Boom. I'd probably have spent a long, long time in Excel dealing with missing values and whatnot and this was done in 10 minutes max.",1591265769.0
"What is the difference between ""is"" and ==?",418,nxzxgk,learnpython,https://www.reddit.com/r/learnpython/comments/nxzxgk/what_is_the_difference_between_is_and/,132,"5 is 5 returns True, just as 5 == 5 returns True. What is the difference?",1623477590.0
What are you having difficulty learning or are currently struggling to learn?,413,lods13,learnpython,https://www.reddit.com/r/learnpython/comments/lods13/what_are_you_having_difficulty_learning_or_are/,327,"I'm curious what the community here has difficulty with when it comes to learning Python. Partly because I want to see if the more experienced community here (or myself) can help point you into the right direction. . . but also because I'm trying to come up with video tutorial ideas for future content and would love to hear from Python learners what would be most useful to dedicate our time on.

I'm looking forward to hearing what you guys have to say!",1613847018.0
Where should I go next after learning the basics in Python?,415,jeagfe,learnpython,https://www.reddit.com/r/learnpython/comments/jeagfe/where_should_i_go_next_after_learning_the_basics/,50,"By basics I mean this: [https://www.youtube.com/watch?v=rfscVS0vtbw](https://www.youtube.com/watch?v=rfscVS0vtbw)

Is that enough to start working on projects with Python(There is a sum up of the video in the description)? Where should I go from here and maybe you could recommend me some websites with some small projects that I could practice?",1603140523.0
I made a cheatsheet for a co-worker thought it could be of use here.,413,9hv1ra,learnpython,https://www.reddit.com/r/learnpython/comments/9hv1ra/i_made_a_cheatsheet_for_a_coworker_thought_it/,43,"I made a cheatsheet for beginner to intermediate Python users about concepts I think everyone should know. Check it out and let me know what you'd want to see. Suggestions are more than welcome.

~~[https://github.com/gpetepg/python\_tips/blob/master/python\_tips\_1.ipynb](https://github.com/gpetepg/python_tips/blob/master/python_tips_1.ipynb)~~

Edit: Added a couple string formats! Let me know how I should name the files... Also working on itertools, collections and functools for sheet 2.

Edit 2: Use this link https://github.com/gpetepg/python_tips",1537571886.0
Sharing my win.,417,nbjfit,learnpython,https://www.reddit.com/r/learnpython/comments/nbjfit/sharing_my_win/,48,"I work in global supply chain and logistics for a project management group of a global apparel company. I’m considered the tech guy on the team and the data nerd. I manage projects and handle all reporting, automation, etc. pretty fun stuff.

Well, today I did something that saved us 12 hrs of delay in execution in our supply chain by writing a script that pulls data from GCP out to an oracle db and then execute sequential sql statements to transform the data and refresh tables that feed tableau dashboards. It all now takes less than 20 minutes via a batch file in the background.

Millions of rows of data for three specific tables, tons of calculations, etc.

Python confidence is way up folks and it’s due to the knowledge sharing that is to be had in this group and others dedicated to the art of Python.

Felt like I should share my lessons learned.

1. I need to get better at testing
2. CLOB sucks so utilize sqlalchemy types for varchar
3. Tnsnames are not hard
4. 64 bit memory usage trumps 32 bit on large datasets
5. Chunk size is a godsend.

Cheers to you.",1620920107.0
Thank you :3,418,kdt5c4,learnpython,https://www.reddit.com/r/learnpython/comments/kdt5c4/thank_you_3/,32,"Honestly, I just wanted to give a massive thank you towards everyone on this subreddit. After struggling through ruts, confusions, and a horrid professor-- I had my state Python final today, and I actually passed!

A huge reason for me being able to pass is because, well, all of you guys! Anytime I had a question I posted here, it was always answered in no time at all. Most people would even go above and beyond, taking the time to sit down and explain why something worked the way it did or generally go into greater detail than what my professor did. And that helped me out so much during my exam, because you all had such wonderful and easy-to-understand ways to teach it.

I know it's short and small but- I wanted to do something atleast. Thank you everyone, I appreciate you all more than I can even say for helping me so much.

Edit: This is the first time I've ever gotten awards, thank you so much oh my goodness. I didn't think this would get much attention at all

Edit2: Wow-- I wasnt expecting to get more than 10 likes, much less nearly 400. Thank you everyone!!",1608062309.0
I fixed a bug in an open-source project for the first time ever today!,410,5l6cl9,learnpython,https://www.reddit.com/r/learnpython/comments/5l6cl9/i_fixed_a_bug_in_an_opensource_project_for_the/,21,"I was installing a Django plugin that crashed when I attempted to migrate the database during installation. I had no idea what caused it. First I searched google and stack exchange. Then I almost posted an issue on the github, but I decided I should dig a little further before posting. After 20-30 minutes of floundering around (and reinstalling from scratch a couple times)  I finally nailed down where exactly in the code the error was coming from (traceback wasn't super helpful). Turns out, someone fixed a bunch of tests 6 days ago and one of the tests on a migration was not updated along with the model that was updated. So I fixed it and ran it locally, and it worked!  

So all I did was change the name of a Model from testmodel to tmodel and I'm sure it would have been caught by someone within a few more days, but it just feels cool to finally be able to track that stuff down on my own and fix it rather than asking for questions and throwing my hands up all the time.  
  
Anyways, it feels pretty good, and none of my friends would get it so I figured I'd share with you guys. Hope everyone is having a happy New Year's Eve's Eve!",1483138008.0
"Could someone explain the use of ""self"" when it comes to classes.",418,k9f4q7,learnpython,https://www.reddit.com/r/learnpython/comments/k9f4q7/could_someone_explain_the_use_of_self_when_it/,116,Ik this is a basic question but I'm just learning to code and I'm learning about classes.  For whatever reason I cannot understand or grasp the use of the self variable in fictions of classes.  Hopefully someone's explanation here will help me...,1607468049.0
My recent interview experience on Python.,414,bbmhg2,learnpython,https://www.reddit.com/r/learnpython/comments/bbmhg2/my_recent_interview_experience_on_python/,83,"Role: Automation Test Developer. 

Questions asked:

1: Basics of Linux, few tricky commands, what are inodes, setting up networking etc etc. 

2: Python: 

    Given a file, write a function which accepts a version 
    number, date and returns pass or fail. 
    
     EDIT:
     the file structure is basically a test result log file which contains lines of information.
     Each line has a version and date, tests run and results. 
     I was supposed to return results which are pass fail based on the version number and date given.:)
   

    Reverse a sentence without using slicing.

    List comprehension basics. 

What I did right: I wrote enough code solving pythonic interview problems, and I was comfortable writing the code in the interview. 

what I did wrong: Focused too much on interview type problems, like Coin change, linked list etc etc. Should have also focused on some real use cases of python. For example, how to test a code with different inputs, how to parse few lines from a file, how to schedule a cron job etc etc. 

TLDR; Don't just bust your head trying to solve interview challenges from cracking the coding interview. Also learn to make some real world programs.",1554905486.0
Which Website is good for solving questions for Python 3 ?,410,i6hjut,learnpython,https://www.reddit.com/r/learnpython/comments/i6hjut/which_website_is_good_for_solving_questions_for/,80,except HackerRank pls.,1596970965.0
"It would be fun to have weekly challenges in here, i know a lot of followers of this sub (if not most) are generally new and have a rough time finding things to actually implement python on",410,o2task,learnpython,https://www.reddit.com/r/learnpython/comments/o2task/it_would_be_fun_to_have_weekly_challenges_in_here/,34,"For example, for work

i have to go through a couple thousand text files, grab specific lines from these text files where the row has the number ""440325B"" for example

After grabbing all of these rows, i would have to add them all into a new text doc one after another

so things like this could be a really good help to new people here and just for general project creation or everyday stuff

like we could post a ""Do this challenge for the week, whats the easiest way to do this or the shortest way to do this""

things like that i think would definitely grow the community, the knowledge and the engagement all around",1624033591.0
Am i still a python programmer if use stack overflow a lot and finish projects?,409,gbbeug,learnpython,https://www.reddit.com/r/learnpython/comments/gbbeug/am_i_still_a_python_programmer_if_use_stack/,157,"so i am sort of a python developer, i am an automation developer, my job is to automate tests, create framework etc. 

but i find that i keep using stackoverflow a lot, question is am i still a programmer if i keep using stack overflow a lot?",1588306720.0
This sub should really be enforcing proper code formatting,411,fy634p,learnpython,https://www.reddit.com/r/learnpython/comments/fy634p/this_sub_should_really_be_enforcing_proper_code/,150,"I know we don’t want to be as anal as SO but, getting new programmers used to paying attention to how their code is formatted and understanding how to ask good questions was a big learning point for me as a self taught programmer. 

Just giving answers to people after having to spend 10 minutes deciphering their problem isn’t really helping them at all. 

IMO giving people keywords to google is much more impactful. And if they don’t have the desire to sift through the results then they won’t ever enjoy programming.",1586484909.0
what is the deal with python purists?,408,gvqaxl,learnpython,https://www.reddit.com/r/learnpython/comments/gvqaxl/what_is_the_deal_with_python_purists/,149,"Hi, as a new programmer i often find myself browsing  r/ learnpython and stackexhange and whilst im very thankful of the feedback and help ive been given, i can't help but notice things, especially on stackechange where this phenomena seems most rampant. 

&#x200B;

What does it mean for your code to be unpythonic? and why do certain individuals care so much?

forgive me, i may be a beginner but is all code not equal? why should i preference ""pythonic"" code to unpyhtonic code if it all does the same thing. i have seen people getting scolded for the simple reason their code isnt, pythonic, so whats the deal with this whole thing?",1591174292.0
A recommendation for people with projects that they're really proud of!,411,fz6hl0,learnpython,https://www.reddit.com/r/learnpython/comments/fz6hl0/a_recommendation_for_people_with_projects_that/,40,"Upload it to github, create a README with some explanation and instructions, then post it in r/python with the flair ""I Made This"". When I did this myslef (check my post on my profile) I got *a lot* of constructive criticism and encouragment!

It doesn't only feel great getting ""nice job OP"" and similar stuff but you also get a lot of ideas and improvements that you can work on.",1586615744.0
I did it! Finally made my first program for work :),406,pfq2ak,learnpython,https://www.reddit.com/r/learnpython/comments/pfq2ak/i_did_it_finally_made_my_first_program_for_work/,27,"I finally managed to make my first program in python! So happy right now, it cost a lot of frustration, uncertainty and learning but now it works.

It's just a simple program to create a new project folder at work every time a new project starts. But I wanted it to  also place the necessary files in the folders with the corresponding project name, be simple to use by work-colleagues through a GUI and be available as an exe program for said colleagues.

Am looking forward to decide my next automation project.

Some tips for fellow beginners: What helped me was starting simple and then expand what the script does. So first I created a script that creates new folders. Then those folders have to be renamed based on user input. Next step was also copying some files from other locations, place those in the right folders and rename the files etc...

Google is your friend!

Edit: I used [pysimplegui](https://pysimplegui.readthedocs.io/en/latest/) as GUI",1630487262.0
My first application!,412,dyjwhe,learnpython,https://www.reddit.com/r/learnpython/comments/dyjwhe/my_first_application/,72,"In October I started my Python-journey, with a full time job and a 2yo kid the spare time is scarce.  
 I've been following a Udemy-course and also used some android-apps to just study something every day.  
 2 weeks ago I made my first real script from scratch, I had a idea of automating / helping with a tedious task at work. I'm a train driver, and every train we start we fill a paper form, check some values from 2 different paper lists and enter some of that data into the control computer.

The script were terminal based and did all the calculations I wanted, checked up the values from those 2 lists (one which is short, so I just made an elseif of it, the other is long so I made a .txt with the values) and gave a summarized result. 

Now 2 weeks later I've deployed it on the web with Flask to be able to share with my colleges!  
With dropdowns, forms to fill and a button to run the scripts and show the result.

Thanks to inspiration from this subreddit (and others) I made it working! It's plain ugly, but the functionality is there. Guess I'll come back and sort the design with bootstrap or at least some css'ing next time I feel a dip in the studying.

I dno if there's a better way to post a image, but here's one:  
[Image of the result with explanations](https://postimg.cc/xJ4cJFrG)",1574167239.0
What is difficult in excel but easy in Python?,400,u2msbi,learnpython,https://www.reddit.com/r/learnpython/comments/u2msbi/what_is_difficult_in_excel_but_easy_in_python/,243,"If you were to introduce an established excel user \[non VBA\] to Python, what would you suggest?

What would amaze them? In as few a lines as possible?",1649843891.0
"So, how can I use classes in Python?",402,kypifm,learnpython,https://www.reddit.com/r/learnpython/comments/kypifm/so_how_can_i_use_classes_in_python/,119,"&#x200B;

I'm currently studying OOP, but every video I watch the guy teaching will give an example like ""Dog"", or ""Car"" and I still have no idea of in which way I can use Classes.

&#x200B;

I imagine it can be useful to create forms, didn't think of anything else tho (I'm looking for some examples).",1610825331.0
Fucked up by not learning how to properly set up environment,405,j84c7p,learnpython,https://www.reddit.com/r/learnpython/comments/j84c7p/fucked_up_by_not_learning_how_to_properly_set_up/,98,"Hello,

I have used Python for about 3 years or so now. However, I have made a huge mistake....

I always just pip install libraries from the command-line without setting up or using a virtual environment. I have used virtual environments at work before (for ML, to access my school's GPUs, etc.), I just never bothered to use one for my python projects.

Well, now I am going to start trying to make Python applications that will actually be used in a work environment, so I want to do it right. I want to abide by best practices for this sort of thing. I want to start using environments the correct way. I was going to completely uninstall Python from my computer, and then reinstall it, however I do not know if this is the best way to start. All I know is that I have like 50 libraries installed on my system itself, and those need to go. 

Any help with what I should do? Also don't want to lose any of my old programs, but I know that just uninstalling Python should not directly affect this. Thank you in advance!",1602267762.0
Embarrassing question about constructing my Github repo,401,gswvbj,learnpython,https://www.reddit.com/r/learnpython/comments/gswvbj/embarrassing_question_about_constructing_my/,78,"Hello fellow learners of Python, I have a sort of embarrassing question (which is maybe not Python-specific, but w/e, I've been learning Python).

When I see other people's Git repos, they're filled with stuff like: [setup.py](https://setup.py), requirements.txt, \_\_init\_\_.py, pycache, or separate folders for separate items like ""utils"" or ""templates"".

Is there some sort of standard convention to follow when it comes to splitting up my code files, what to call folders, what to call certain files? Like, I have several working programs at this point, but I don't think I'm following (or even aware of) how my Git repository should be constructed.

I also don't really know what a lot of these items are for. All that to say, I'm pretty comfortable actually using Git and writing code, but at this point I think I am embarrassingly naive about how I should organize my code, name files/folders, and what certain (seemingly) mandatory files I need in my repo such as \_\_init\_\_.py or [setup.py](https://setup.py).

Thanks for any pointers, links, etc and sorry for the silly question.

\---

Edit: The responses here have been so amazingly helpful. Just compiling a few of the especially helpful links from below. I've got a lot of reading to do. You guys are the best, thank you so so much for all the answers and discussion. When I don't know what I don't know, it's hard to ask questions about the unknown (if that makes sense). So a lot of this is just brand new stuff for me to nibble on.

&#x200B;

Creates projects from templates w/ Cookiecutter:

[https://cookiecutter.readthedocs.io/en/1.7.2/](https://cookiecutter.readthedocs.io/en/1.7.2/)

Hot to use Git:

[https://www.git-scm.com/book/en/v2](https://www.git-scm.com/book/en/v2)

git.ignore with basically everything you'd ever want/need to ignore from a Github repo

[https://github.com/github/gitignore/blob/master/Python.gitignore](https://github.com/github/gitignore/blob/master/Python.gitignore)

Hitchhiker's Guide to Python:

[https://docs.python-guide.org/writing/structure/](https://docs.python-guide.org/writing/structure/)

Imports, Modules and Packages:

[https://docs.python.org/3/reference/import.html#regular-packages](https://docs.python.org/3/reference/import.html#regular-packages)",1590772079.0
Automate The Boring Stuff 2ND EDITION,405,damw32,learnpython,https://www.reddit.com/r/learnpython/comments/damw32/automate_the_boring_stuff_2nd_edition/,45,"https://nostarch.com/automatestuff2

Did you get the first edition? what are your thoughts on it and what what great books you recommend written in latest Python syntax and features?",1569710006.0
"I'm 54, learning Python, been out of IT for 10 years, any advice?",406,rnmk55,learnpython,https://www.reddit.com/r/learnpython/comments/rnmk55/im_54_learning_python_been_out_of_it_for_10_years/,68,"Want to get back into working for IT.  Over the last 10 years have mainly been doing Video Production but have done a little IT support for small companies (Windows Desktop/Linux Server) including setting up a few Linux boxes.   I worked mainly in Oracle Development, Business intelligence Design.

Ime currently on day 65 of Dr Angela 100 Days of code Python basecamp.

Previously I learned some basic Ruby and ROR and it was a while back but I think I prefer Python.  The idea that there should be one obvious way to do stuff really appeals.  The fact that Python seems to aim for this is great and it feels this may be truer than in Ruby.  Don't get me wrong, I did enjoy Ruby/ROR.

Any advice, am I screwed :).

PS I should of explicitly stated ime trying to get back to working in IT.",1640353221.0
How long did it take for you to really enjoy programming?,405,lg7940,learnpython,https://www.reddit.com/r/learnpython/comments/lg7940/how_long_did_it_take_for_you_to_really_enjoy/,196,"I say this as someone who's fairly new to the game.. A few years back I tried to get into front end development. Using codecademy, starting with HTML, CSS then Javascript. This is where things went off the rails for me. The first two were easy, but dull. Javascript hit me like a freight train though, id hit road block after road block and just lost all ambition.

Years go by, I mostly moved on but the failure stuck with me. So I dove back in, only this time trying Python via Udemy's ""Automate the boring stuff"". Im not far into it section 3 I think. Im not far enough to be at stage where I have code memorized but not really lost either. Just bored.. What im learning is very run of the mill and I guess I just cant seem to grasp the whole picture. Just following along without knowing what the end goal is here...

Am I alone here? Did you feel this way? should I stick it out and better times will come?... Help


**Thank you all for the support! It seems as though most of you know exactly where I'm at.. I've now got two goals. 1. Get the basics down 2. Start a project**",1612888671.0
"Basic Scraper Template, for anyone wanting to start learning Web scraping",399,i03210,learnpython,https://www.reddit.com/r/learnpython/comments/i03210/basic_scraper_template_for_anyone_wanting_to/,108,"It's very basic and will only work on non js based sites

This is a great introduction, and should be enough to play around and make work for you.

Dependecies:

    pip install requests bs4

Template

    # dependencies
    import requests
    from bs4 import BeautifulSoup

    # main url to scrape
    MAIN_URL = """"

    # get the html and convert to soup.
    request = requests.get(MAIN_URL)
    soup = BeautifulSoup(request.content, 'html.parser')

    # find the main element for each item
    all_items = soup.find_all(""li"", {""class"": ""item-list-class""})

    # empty dictionary to store data, could be a list of anything. i just like dicts
    all_data = {}

    # initialize key for dict
    count = 0

    # loop through all_items
    for item in all_items:
        # get specific fields
        item_name = item.find(""h2"", {""class"": ""item-name-class""})
        item_url = item.find(""a"", {""class"": ""item-link-class""})
	
        # save to dict
        all_data[count] = {
            # get the text
            ""item_name"": item_name.get_text(),
            # get a specific attribute
            ""item_url"": item_url.attrs[""href""]
        }
	
        # increment dict key
        count += 1
	
    # do whats needed with data
    print(all_data)
	

I will try my best to answer any questions or problems you may come across, good luck and have fun. Web scraping can be so fun :)",1596038094.0
Just earned the Gold Badge for 30 Days of Code on HackerRank!,403,hi73pj,learnpython,https://www.reddit.com/r/learnpython/comments/hi73pj/just_earned_the_gold_badge_for_30_days_of_code_on/,43,"I finished solving the 30 coding challenges in python and it was a great journey looking forward to solving more challenges. This helped me gain a bit more confidence and i would definitely recommend it. The best part about hackerrank is that they give you stars and the gold badge when you have completed all of it . There is the python gold badge that I am going to start working towards now!

The gold badge:

  https://www.hackerrank.com/aiden506sams?badge=30-days-of-code&stars=5&level=3&hr\_r=1&utm\_campaign=social-buttons&utm\_medium=twitter&utm\_source=badge\_share&social=linkedin",1593459850.0
What type of questions can I expect in an interview for a Python Developer ?,400,glxpe4,learnpython,https://www.reddit.com/r/learnpython/comments/glxpe4/what_type_of_questions_can_i_expect_in_an/,79,"
Hey all,

I have an interview post 2 days for the position of a python developer hence I wanted to know what type of questions can I expect in the following areas :-

1. Multi-threading and Multiprocessing (process, pool) in Python

2. OOP Concepts: Metaclasses, Operator Overloading, Inheritance, different types of methods, magic methods

3. Decorators and Generators

4. Pytest: Fixtures and Mocks

5. Profiling in Python

6. Using Pickle and Customizing Pickle



I would be grateful if y'all can throw some light on this. Its my first python-dev interview kind of clueless on what to expect in the above areas.

Thanks

Stay safe and Take Care",1589791085.0
/r/python is hosting an AMA with Al Sweigart on 28th July at Noon PT (7pm UTC),402,opog0i,learnpython,https://www.reddit.com/r/learnpython/comments/opog0i/rpython_is_hosting_an_ama_with_al_sweigart_on/,21,"> Next week we'll be hosting an AMA with Al Sweigart (u/AlSweigart), author of ""Automate the Boring Stuff"". His most recent book is, [""The Big Book of Small Python Projects""](https://inventwithpython.com/bigbookpython/), a collection of [small projects and programs](https://www.youtube.com/watch?v=f9k6Q2yys0k) that help teach programming concepts in a learn by doing approach. You can pick it up [here](https://nostarch.com/big-book-small-python-projects) or read it for [free online](https://inventwithpython.com/bigbookpython/).
> 
> The AMA starts at 2 pm Central, 7 pm UTC and will run for an hour. Earlier that morning there will be a post made by Al Sweigart where you can begin asking him your questions in the comment section. We'll sticky the thread and mark it as an announcement so it's easy to find. I'll also update this post with a link pointing to the AMA.

link here: https://www.reddit.com/r/Python/comments/opnsf4/join_us_for_an_ama_with_al_sweigart_on_july_28th/",1626992000.0
"My first proper project on Github, Yay!!",400,lenoq7,learnpython,https://www.reddit.com/r/learnpython/comments/lenoq7/my_first_proper_project_on_github_yay/,29,"After about 2-3 years of being on and off into coding, I managed to actually finish a project end to end. It isn't very fancy but it gives me immense pleasure to finally achieve this milestone in this line of my life. I really appreciate everyone here for being so helpful and also many thanks for all the support.

The project utilizes the cool Python module Streamlit to create a visual  interface to build/analyze a Portfolio management strategy using the  RandomForest Regressor to predict the prices for n days ahead. It uses  the random grid search for inside cross-validation to optimize the hyper  parameters(different for every equity) for a chosen number of  equities(stocks) by fetching the data from the nsepy module with the  ability to select the timeline along with a backtester to test the  strategy created.

Anyone could, infact, add a function to this script in the main long-short-equity class appropriately to use different models for prediction I believe, it's of course not investment advice but a simple representative strategy+backtester for budding systematic trading enthusiasts.

PS: Please give me suggestions on how I could make this code better and/or the pros and cons of my code.

Github: [Long Short Equities](https://github.com/ybangaru/long-short-equities)

[Preview](https://imgur.com/a/WfjtXmH)

Edit: Thanks for the awards strangers :)",1612708894.0
after 2 ish weeks of learning python I've made an Alarm clock,401,htgv26,learnpython,https://www.reddit.com/r/learnpython/comments/htgv26/after_2_ish_weeks_of_learning_python_ive_made_an/,65,"ive made a very basic alarm clock could you guys asses it?

&#x200B;

    import time, winsound
    
    
    
    
    def main():
        global maininp
        maininp = input(""Hours mins or sec"").lower()
        timelist = (""hours"",""mins"" ,""sec"")
        if maininp in timelist:
            times(maininp)
        else:
            print(""try again"")
            main()
    
    
    def times(userinp):
        if userinp == ""hours"":
            timewanted = int(input(""how many hour: ""))
            waitingtime= (timewanted*60)*60
            alarm(waitingtime)
    
        elif userinp == ""mins"":
            timewanted = int(input(""how many mins: ""))
            waitingtime= timewanted*60
            alarm(waitingtime)
    
        elif userinp == ""sec"":
            timewanted = int(input(""how many sec: ""))
            waitingtime= timewanted
            alarm(timewanted)
    
    
    def alarm(thetime):
        if maininp == ""hours"":
            s = str((thetime/60)/60)
            items = s.split(""."")
            if thetime ==1:
                print(f""Your alarm is set for {int((thetime/60)/60)} Hour"")
                time.sleep(thetime)
                sound()
            elif thetime != 1:
                print(f""Your alarm is set for {int((thetime/60)/60)} Hours"")
                time.sleep(thetime)
                sound()
    
        elif maininp == ""mins"":
            test = float((thetime / 60))
            twodp = float(""{:.2f}"".format(test))
            s = str(twodp)
            items = s.split(""."")
            if test >60:
                print(f""Your alarm is set for {items[0]} Hours and {items[1]} mins"")
                time.sleep(thetime)
                sound()
    
            else:
                print(f""Your alarm is set for {int(thetime/60)} mins"")
                time.sleep(thetime)
                sound()
    
    
        elif maininp == ""sec"":
            print(f""Your alarm is set for {thetime} seconds"")
            time.sleep(thetime)
            sound()
    
    
    
    def sound():
        for i in range(2):
            for j in range (3):
                winsound.MessageBeep(-1)
                time.sleep(0.3)
            time.sleep(1)
    
    
    main()",1595080006.0
Github as a beginner,403,gzvpev,learnpython,https://www.reddit.com/r/learnpython/comments/gzvpev/github_as_a_beginner/,111,"As a beginner learning python, is it too early to create and start coding simple projects on Github. and how do I transfer these codes (simple calculators) to a website I build subsequently?",1591735345.0
What would be great ways to pratice python ?,400,iioltu,learnpython,https://www.reddit.com/r/learnpython/comments/iioltu/what_would_be_great_ways_to_pratice_python/,61,"I learned python from Udemy : From  Zero to Hero by Jose . But I feel that there's little too less to practice in there. Before learning python I had learned light C++ which was part of my high  school . My sir would give us  many kinds of exercises. Right Now Since I'm learning it on my own I am  finding it hard to find  practice exercises. (on lists, tuples , OOP, loops, I think the whole bunch).   
 Thanks :)",1598687225.0
Learn computer programming by implementing games in Python,399,e3y7ym,learnpython,https://www.reddit.com/r/learnpython/comments/e3y7ym/learn_computer_programming_by_implementing_games/,31,"I ran across [this jewel](https://yorkshire4.readthedocs.io/) - it looks like a great way to learn programming.

[The author](https://github.com/beeware) transcribed the code from a series of books designed to teach programming in the days of the Commodore 64.",1575128389.0
"Am I just tech illiterate, or is automate the boring stuff with python too hard for a beginner like me?",402,s3spq7,learnpython,https://www.reddit.com/r/learnpython/comments/s3spq7/am_i_just_tech_illiterate_or_is_automate_the/,159,"Hello! I'm hoping to pick up some coding during my down time and I have been eying ATBS with python for quite a while.

However, when trying to follow the tutorial on the internet, I feel like I'm thrown into a loop and am very confused throughout the beginning of the course.

For example, in [chapter 2](https://automatetheboringstuff.com/2e/chapter2/) when it introduces the range function, the tutorial showed me the function:

    for i in range(5):

I get really confused to what is the tutorial trying to tell me.  Where doe ""i' come from?  What does the number in brackets mean? (it says there should be 3 integers but why are there only 1?)

Another example is later when it gives me a line of sample code:

    print('%s Wins, %s Losses, %s Ties' % (wins, losses, ties))

And again, the % is supposed to do something, but what does it do?  How does it work?

I feel like I'm hitting a brick wall every time something new and unexplained come up, and I cannot seem to move forward with the learning progress.  Is it just me, or I'm better suited for another language/learning source?

Edit: Thank you for all your kind words.  I'll need to take a break but I'll be back tomorrow!",1642167868.0
Quick review of Angela Yu's 100 days of code,400,rmt3s0,learnpython,https://www.reddit.com/r/learnpython/comments/rmt3s0/quick_review_of_angela_yus_100_days_of_code/,98,"Finished the guided part of the course. There are another 15 days where you get 1 line descriptions of a project and you are supposed to do it on your own.

Pros:

* Angela is a good instructor, there's a reason she has so many students. 

* You are coding every day. Around the halfway point it ramps up a lot and the number of video lectures drops correspondingly. I liked this personally, after a while listening to lectures gets boring. 

* The scaling of the project difficulty and amount of guidance you receive is very, very well done. She must have put a LOT of time and thought into it because it somehow remains challenging the entire time but you never feel like it's completely beyond your current capabilities 

* You're exposed to multiple frameworks and the projects are pretty diverse. Think this is good for people like me who don't have a specific direction they want to go with programming yet. On the flipside it does mean you end the course without having gone in-depth on any of them really.

Cons:

* Relatively speaking there isn't much of a focus on OOP at all. I don't feel like I have a good grasp on it at all in a practical sense and that's what I'm going to focus on now.

* The claims made on the 'what you'll learn' section are ridiculous. I assume you need to make these bold claims to attract more students but come on:

 * ""Be able to program in Python professionally"" - Yeah, ok lol. 
 * ""Create a portfolio of 100 Python projects to apply for developer jobs"" - I won't claim to be an expert in good practice for developer portfolios but it seems like a terrible idea to put all your beginner shitter projects on there. 
 * "" Master the Python programming language by building 100 projects over 100 days"" - think it's obvious you can't master it in 100 days 
 * The last 15 days are non-guided projects, this is fine since there is definitely enough content to justify the price without them. But I highly doubt I'd be able to finish any of them in just 1 day and definitely not in the 2 hours she says each day should last in the intro video 

Conclusion:

If you think of this as a course to learn the basic fundamentals of Python it's great. I much preferred it to Python for everybody which I used on my previous attempt to learn a few years ago. The part that's fun is making stuff yourself that actually takes effort, not just opening a code editor and filling in a few missing lines so the project structure is great in that sense. Just be weary of the claims of  how hireable you'll be afterward.",1640256555.0
Proud of how far I've come,400,d5cojh,learnpython,https://www.reddit.com/r/learnpython/comments/d5cojh/proud_of_how_far_ive_come/,38,"About two years ago, I decided to jump into Python, with a web crawler as my first project. And while it worked well enough, it was bloated, nearly 600 lines of code.

Today, I started from scratch, and rewrote the same functionality in less than 70 lines.",1568699135.0
How to share python exe with people to use the program without having to install python?,396,hnjbju,learnpython,https://www.reddit.com/r/learnpython/comments/hnjbju/how_to_share_python_exe_with_people_to_use_the/,71,"Hi All, I have written a my first very basic program for webscraping where it summaries the top 5 most read article and sends a email.

The user needs to enter their email ID and password to login using smtplib and that's all the input that is required.

I wanted to share this with my friends so they can use it at their end without having to install python.

Is it possible to do that? Basically i wanted to know once we write a program how do we create a user friendly front end app?

Many thanks in advance! Any inputs are highly appreciated!",1594222893.0
Python for Beginners - Complete Series,395,6bxbt5,learnpython,https://www.reddit.com/r/learnpython/comments/6bxbt5/python_for_beginners_complete_series/,26,"A nine-part series I put together on Python Programming for Beginners. We go over the setup, data types, conditionals, loops, functions, how to import modules and explore the standard library. I hope you find them useful:

1) [Installation and Setup](https://www.youtube.com/watch?v=YYXdXT2l-Gg)

2) [Strings](https://www.youtube.com/watch?v=k9TUPpGqYTo)

3) [Integers and Floats](https://www.youtube.com/watch?v=khKv-8q7YmY)

4) [Lists, Tuples, and Sets](https://www.youtube.com/watch?v=W8KRzm-HUcc)

5) [Dictionaries](https://www.youtube.com/watch?v=daefaLgNkw0)

6) [Conditionals and Booleans](https://www.youtube.com/watch?v=DZwmZ8Usvnk)

7) [Loops and Iterations](https://www.youtube.com/watch?v=6iF8Xb7Z3wQ)

8) [Functions](https://www.youtube.com/watch?v=9Os0o3wzS_I)

9) [Importing Modules and the Standard Library](https://www.youtube.com/watch?v=CqvZ3vGoGs0)

Entire Playlist - [Here](https://www.youtube.com/playlist?list=PL-osiE80TeTskrapNbzXhwoFUiLCjGgY7)",1495125227.0
My Python programming journey,398,nw03lm,learnpython,https://www.reddit.com/r/learnpython/comments/nw03lm/my_python_programming_journey/,133,"Hey Guys,

I'm 26 years old and from Germany. Today I want to start my programming journey in Python, I want to learn the basics and then realize a project I already have on my mind. I created this account with the goal to learn the language and land a job with this skill one day. I'll probably need to learn some more things then just Python, but I want to start with it.

For everyone who wants to start as well, do it like me and just start. I set myself the minimum requirement of coding at least 10 minutes per day (that's a trap for my brain, when I already started it is more like for me to code way more then 10 minutes).

I already downloaded Atom, Python and I selected the book ""automate the boring stuff with python"" as my main literature. Now I have to read the manual of Atom and get familiar with it, the only thing I've done so far. I'll try to keep you updated everyday, I is not important if anyone follows this. I will use my daily posts to monitor my progress.

Enjoy!

Edit: Wow this blew up! Thank you so much for your support, you're such a cool community! I will try to journal everyday on my account and after some greater success I'll make another post. Thank you ! Danke",1623256427.0
Just want to thank this sub for giving me motivation and reminding me to never give up,397,l6p9xp,learnpython,https://www.reddit.com/r/learnpython/comments/l6p9xp/just_want_to_thank_this_sub_for_giving_me/,23,"I started learning Python several months ago and I cannot thank this sub enough. Every time I asked for advice or help, I've gotten nothing, but good feedback. My goal is to get an entry level job eventually, but I'm slowly getting there.

I did some challenges on Edabit and I was stuck on a problem that was rated as ""medium"". I took a break for an hour or so to clear my mind and I finally solved the problem. When I cleared my head, I just opened up my command prompt and tackled the problem one by one.

Edabit's problems might be easier than Leetcode's or Hackerrank's, but it felt so damn good to solve a problem that was rated as medium. Up until today, I was solely working on ""very easy"" or ""easy"".

&#x200B;

Not sure if this is against the rules of this sub, but here's the problem on Edabit:

Given a string, reverse all the words which have odd length. The even length words are not changed.

reverse\_odd(""Bananas"") ➞ ""sananaB""

reverse\_odd(""One two three four"") ➞ ""enO owt eerht four""

reverse\_odd(""Make sure uoy only esrever sdrow of ddo length"") ➞ ""Make sure you only reverse words of odd length""

&#x200B;

Here's my code:

    def reverse_odd(txt):
        	new_list = []
        	new_txt = txt.split()
        	for word in new_txt:
        		if len(word) % 2 != 0:
        			new_list.append(word[::-1])
        		else:
        			new_list.append(word)
        	return "" "".join(new_list)

I've taken this sub's advice on tackling a problem little by little and it worked. This may not be the most efficient code, but I'm just glad I solved it.

&#x200B;

Again thanks a lot everyone. Cheers!",1611812604.0
"LPT: If you’re using the free code academy pro right now, read the FAQS in each lesson",396,fx43rq,learnpython,https://www.reddit.com/r/learnpython/comments/fx43rq/lpt_if_youre_using_the_free_code_academy_pro/,42,"I can’t stress this enough, the top answers from moderators in the FAQs answer questions about further applications of what you’re learning, beyond what’s in the actual lesson. They also delve into WHY certain things work the way they do, rather than skimming over it and just explaining how to use them. 

Definitely an underrated part of the site",1586341597.0
Actually used python today,393,fb9lj3,learnpython,https://www.reddit.com/r/learnpython/comments/fb9lj3/actually_used_python_today/,63,I've been learning python for about a month now. I started with automate the boring stuff like so many others have. Since then I have made some small games to practice. I am currently working on a hangman game and needed a list of words to use. I found a list of words and copied the whole thing to a .text file but it came with extra stuff I didn't need. So instead of manually deleting everything I didn't need I made a python script to do it for me. GREATEST FEELING EVER.,1582964404.0
I made a calculator in Python!,392,hnxb18,learnpython,https://www.reddit.com/r/learnpython/comments/hnxb18/i_made_a_calculator_in_python/,49,"Hello everyone!

I just wanted to share this project i made, its not my first programming project or python project whatsoever, but it is indeed the first one i didnt depended much on google or a video tutorial so that for me its a great advance.

&#x200B;

The project is also my first on a github repository!

 [https://github.com/mexicanlefty/Python-Calculator](https://github.com/mexicanlefty/Python-Calculator) 

&#x200B;

Please take a look and test it, in case you can provide any feedback it would be even better, it doesnt matter if you guys want to be very critical, i dont mind i want to keep practicing and i already have my next project in mind.",1594271796.0
Automate the boring stuff vs python crash course,391,lssdg9,learnpython,https://www.reddit.com/r/learnpython/comments/lssdg9/automate_the_boring_stuff_vs_python_crash_course/,98,"Hey guys, I’m not sure which of these 2 books I should start of with. I have no prior programming experience, and these both seem like solid options. Is it viable to go through both, or should I stick to one?",1614323780.0
How to learn Algorithms and Data Structures,390,kp7cer,learnpython,https://www.reddit.com/r/learnpython/comments/kp7cer/how_to_learn_algorithms_and_data_structures/,35,"Hello everyone, 

i am an engineer and basically tought myself how to code, because i would like to go for machine learning. I am not an expert yet. 

I often read or heard that algorithms and data structurs and all that are super important for coding and even if i think i make quite a good progress in learning, i often feel like i am missing the basics. 

It's so much out there. Like tons of youtubers and online courses and some fancy bootcamp thing (Until recently i didn't even know something like that exists). Like Udemy, coursera, edx, youtube, tons of books, kaggle, leetcode, algoexpert, the list is endless. Everything is full of advertisement and i have no idea what i should go for... 

What source can you recommend me to learn this stuff theoretically and practically preferable in python? I would prefer videos over a book and a big course that covers everything rather than a bit of this topic here and a bit of that topic there and stuff. I don't mind if it is some sort of academic and mathematically, but it should cover some practice aswell. 

I was thinking about just going for this:

[https://www.edx.org/xseries/mitx-computational-thinking-using-python](https://www.edx.org/xseries/mitx-computational-thinking-using-python)

But not sure if it's deep enough. I don't even know how deep i have to understand all that. I am not planning to go for some PhD. I Just want to go for a Job at the interface of machine learning/coding and engineering, but i also realy want to understand this whole topic as deep as possible. So I don't want to spend hours and hours on following some course just to begin another course right after. If that's the only way, fine. But maybe someone has a good recommendation?",1609626632.0
"Landed my first job with Python, now freaking out a little",386,pjsio2,learnpython,https://www.reddit.com/r/learnpython/comments/pjsio2/landed_my_first_job_with_python_now_freaking_out/,70,"This is a question for all you experienced IT guys out there, did you find yourself freaking out when you got your first Programming job?

I started learning Python around 1,5 years ago and have had so much fun doing several of my own beginner projects and multiple courses online. All in all, I am super excited about learning, but now that I am in (started in a DE junior position), I am a little bit freaked out by the size of the systems and technologies that are being used by my team. I learned SQL for a few months and now that I have access to these huge tables and dbs with loads of data I am afraid I might mess things up (such as delete data, mess up existing views, etc.) The stuff that my team does in Python is quite advanced, I saw some of the scripts and it seems like I have so much to learn. I am aware that I may have the 'impostor syndrome' moments soon and I don't mind the uncomfortable part, but I'm also afraid whether I'm up to the task. My background is in Finance so I like analytics, but data engineering is much more than that. Anyone out there that has had a similar experience when starting out? I'm not exactly an undergraduate starting out professionally so the fact that I'm older may also be the causing this. Any advice would do. Thanks.",1631038233.0
My Aunt gets really upset if I don't answer her daily good morning texts. WhatsApp API?,387,diit3b,learnpython,https://www.reddit.com/r/learnpython/comments/diit3b/my_aunt_gets_really_upset_if_i_dont_answer_her/,196,"Could I just make a script to open up a chome tab with whatsapp web, find my aunt in my messages, and reply to it something preselected?",1571193385.0
Why is this so common in python tutorials?,380,qibvec,learnpython,https://www.reddit.com/r/learnpython/comments/qibvec/why_is_this_so_common_in_python_tutorials/,113,"They will walk you through the most basic and simple application of something and then the practice activity by comparison is not only insanely difficult, you just wouldn’t know how to do it given what has been taught so far. Why can’t they just give activities that are at or around the same level of difficulty of what they teach? I want to learn how to walk before learning how to run.",1635511096.0
How and where can I start contributing to an open source project?,381,jfxbyw,learnpython,https://www.reddit.com/r/learnpython/comments/jfxbyw/how_and_where_can_i_start_contributing_to_an_open/,44,"Does anyone know where you can find open source projects to contribute to quickly and easily. I have never contributed to any open source projects before, so this will be my first time. I also probably only have a years worth of python experience, so it can't be too advanced/complex.

Any help would be greatly appreciated. Thanks",1603363637.0
"What are some 'speed hacks' that I, as a beginner, should be aware of when I code in python?",384,c7czwi,learnpython,https://www.reddit.com/r/learnpython/comments/c7czwi/what_are_some_speed_hacks_that_i_as_a_beginner/,127,"For example, a few helpful people in this subreddit advised me to use f-strings instead of %-formatting or str.format() and to utilise numpy arrays when working with large/complex lists.",1561898348.0
What part-time job can I get that I can automate with python? (Serious),382,rxh78g,learnpython,https://www.reddit.com/r/learnpython/comments/rxh78g/what_parttime_job_can_i_get_that_i_can_automate/,137,I was thinking bookkeeping? Or scheduling?,1641482927.0
Here's What I Recommend To ABSOLUTE Beginners,386,31p2p3,learnpython,https://www.reddit.com/r/learnpython/comments/31p2p3/heres_what_i_recommend_to_absolute_beginners/,55,"Rule No. 1: You are going to be extremely confused in the beginning.  You are going to go through phases of excitement, and you will get ahead of yourself.  At some point after learning the syntax you will be lost, and not know what the heck to do.  LUCKILY I've been there, and I know the way out of that mess and [Here it is](https://www.youtube.com/watch?v=Hss7V91JKYQ&list=PLfZK9exHUPMUCrZ2a2C_LDLxmndlAruWn).  DO NOT GIVE UP, I promise you that it sinks in.

Rule No. 2:  Focus.  Do not begin learning Python, and then get excited and begin learning other languages.  This is a mistake, I promise you.  Take the time to focus on one language, and get good enough at it to build your own programs before moving on. If you do not do this, you are going to get confused and there is a chance you will just give up.  

Rule No. 3:  There is an efficient order to learning Python that I have found to be best.  FIRST! Learn the Syntax.  I recommend [Codeacademy](http://www.codeacademy.com), for Python.  There is a great community there as well if you get stuck.  SECOND! Start attempting the small projects listed [here](https://docs.google.com/document/d/1TyqD2_oDtiQIh_Y55J5RfeA91JJECc97xYIKM112H9I/edit).  THIRD! Once you feel as if those projects are pointless, and you have lost interest in them, start exploring Python's libraries and modules, and begin to find an area you are interested in! FINALLY! Learn a new language that is closely related to your interests.

Rule No. 4:  Always try to abide by this ratio.  70% of your time should be dedicated to coding.  30% dedicated to learning via tutorials, or what-have-you.  

Good Luck!

[Edit 02/17/2016] The original playlist I provided as the first link in this post was removed, but I managed to find the exact same playlist by another user on YouTube and updated the link.  

[Edit 06/2/2016]  The playlist was taken down once more, however I have located another one and have updated the link above.  I'll continue to update the post whenever someone messages me about it being broken if I can locate a new playlist.

[Edit 04/28/2017] The new playlist has been taken down again. To clarify, the playlist was a video tutorial series provided by Lynda.com. The author was Simon Allardice, and it was titled Objected Oriented Design. [Here](https://www.youtube.com/watch?v=CMRe_Vim4us) is the introduction video to it. I implore you to seek it out, it helped me and many others a lot.

[Edit 02/03/2018] I still get a lot of messages about the playlist being taken down. Please read the edits above. Thank you.",1428368947.0
"Python Subreddit for ""Intermediate"" Questions?",378,hrdssy,learnpython,https://www.reddit.com/r/learnpython/comments/hrdssy/python_subreddit_for_intermediate_questions/,99,"Is there a good subreddit to ask ""intermediate"" python questions?  /r/learnpython has been very helpful (and continues to be! thanks!), but usually I don't get responses when I ask questions about, say, PyQt5 or async stuff.  And then the people over at /r/python are too important and busy with their 10 hot girlfriends each to discuss mere questions, and usually point me back here.

Of course there is Stack Overflow, but I do feel that reddit is better for discussion vs. posting a question and getting sample code as an answer on SO.",1594774115.0
I wrote a tutorial explaining and demonstrating `if __name__ == '__main__'`,380,fj5lhd,learnpython,https://www.reddit.com/r/learnpython/comments/fj5lhd/i_wrote_a_tutorial_explaining_and_demonstrating/,35,"&nbsp;

### The full text is below, but view it at https://voussoir.net/writing/ifnamemain to see syntax highlighting.


&nbsp;

---

Python's `if __name__ == '__main__'`
===========================

When you read other people's Python source code, you may find something like this at the very bottom of the file:

    if __name__ == '__main__':
        ...

This is a construct that is confusing the first time you encounter it. `if __name__ == '__main__'` is used to make a Python file that is importable by other Python files, as well as executable on its own.

## Understanding if name == main

In order to understand how it works and how to use it, there are a few background pieces of information you need to know.

### Part 1

When you are writing a program `A.py` that imports another module `B.py`, the code inside `B.py` is executed just like if you ran `B.py` by itself.

I know that sounds simple, but it's something people don't usually think about when practicing imports for the first time. Here, watch:

    # B.py
    print(""I'm the B file!"")

-

    >python B.py
    I'm the B file!

-

    # A.py
    print(""I'm the A file, and I'm going to import B!"")
    import B
    print(""I'm all done importing B!"")

-

    >python A.py
    I'm the A file, and I'm going to import B!
    I'm the B file!
    I'm all done importing B!

Suppose you write a file called `hextools.py` so that you can practice converting between hex and ints.

    # hextools.py
    '''
    This library provides functions for converting to and from hex.
    '''
    def int_to_hex(x):
        '''
        Python automatically starts it with 0x which we'll strip.
        '''
        return hex(x)[2:]

    def hex_to_int(h):
        return int(h, 16)

    print(int_to_hex(4000))

-

    >python hextools.py
    fa0

It works great.

Then one day, you need to write a second program that also does some hex-int conversion. Well, instead of copying and pasting those functions, it makes sense to just import hextools.

    # myprogram.py
    import hextools

    x = int(input('Please type a number: '))
    print(x, 'in hex is', hextools.int_to_hex(x))

Now let's run that program.

    >python myprogram.py
    fa0
    Please type a number:

That's annoying -- the print statement inside `hextools` is executed, and shows fa0 before `myprogram` even asks for input. Well, that's because all the code inside hextools is executed simply by importing it. When I say ""all the code"", I'm referring to anything that's written on the global scope -- anything which touches the left edge of the page. That means the `def` statements which create the functions and, in this case, the print statement that we left there.

Now you know that importing a file causes that code to run. Hold that thought, it's time for the second piece of background information.

### Part 2

Python modules have some special variables in the global scope that are created automatically.

Try starting a python interpreter and calling `dir`.

    >python
    >>> dir()
    ['__annotations__', '__builtins__', '__doc__', '__loader__', '__name__',
    '__package__', '__spec__']
    >>> __name__
    '__main__'

Ok so there's an automatic variable called `__name__` which is a string that says `'__main__'` but let's keep going to figure out what it means.

Let's start an interpreter with the `-i` flag which runs everything in the file and then gives you the repl afterward.

    >python -i hextools.py
    fa0
    >>> dir()
    ['__annotations__', '__builtins__', '__cached__', '__doc__', '__loader__',
    '__name__', '__package__', '__spec__', 'hex_to_int', 'int_to_hex']
    >>> __doc__
    '\nThis library provides functions for converting to and from hex.\n'
    >>> __name__
    '__main__'

Well, there's that fa0 again. As you can see, there is a magical variable called `__doc__` which automatically took the docstring that I wrote at the top of the file. I'm showing that to prove that this is exactly what the variables look like while Python is executing this file. And we see the variable `__name__` which again says `'__main__'`.

One more demonstration. Let's check that name variable again, but with an imported module:

    >python
    >>> import hextools
    fa0
    >>> __name__
    '__main__'
    >>> hextools.__doc__
    '\nThis library provides functions for converting to and from hex.\n'
    >>> hextools.__name__
    'hextools'

Aha. So the `__name__` of my Python repl is `'__main__'`, but the `__name__` of an imported module is its name.

    >>> import os
    >>> os.__name__
    'os'
    >>> import sys
    >>> sys.__name__
    'sys'
    >>> import requests
    >>> requests.__name__
    'requests'
    >>>
    >>> __name__
    '__main__'

There is only one module that can be `'__main__'`, and that's whatever file we run directly. Anything you import will just have its own name.


### Part 3

Let's combine these two lessons together. Any code that you write on the global scope will be executed when you import that file into another. But, the magic variable `__name__` will **only** say `'__main__'` when you are running that file directly, otherwise it will just say the name of the module.

    # B.py
    print(""I'm the B file, and my name is"", __name__)

-

    # A.py
    print(""I'm the A file, and I'm going to import B!"")
    import B
    print(""I'm all done importing B!"")

-

    >python B.py
    I'm the B file, and my name is __main__

-

    >python A.py
    I'm the A file, and I'm going to import B!
    I'm the B file, and my name is B
    I'm all done importing B!

This should drive the point home:

    # B.py
    print(""I'm the B file, and my name is"", __name__)

    if __name__ == '__main__':
        print(""The B file is being run directly!"")

-

    >python B.py
    I'm the B file, and my name is __main__
    The B file is being run directly!

    >python A.py
    I'm the A file, and I'm going to import B!
    I'm the B file, and my name is B
    I'm all done importing B!

Therefore, by putting code inside an `if __name__ == '__main__'`, it will only run when you are running that file directly, and it will be skipped if the module is being imported by something else. There's nothing surprising about how this works. It's just an if statement!

Let's apply that change:

    # hextools.py
    '''
    This library provides functions for converting to and from hex.
    '''
    import sys

    def int_to_hex(x):
        '''
        Python automatically starts it with 0x which we'll strip.
        '''
        return hex(x)[2:]

    def hex_to_int(h):
        return int(h, 16)

    if __name__ == '__main__':
        x = int(sys.argv[1])
        print(int_to_hex(x))

-

    # myprogram.py
    import hextools

    x = int(input('Please type a number: '))
    print(x, 'in hex is', hextools.int_to_hex(x))

-

    >myprogram.py
    Please type a number: 42
    42 in hex is 2a

    >hextools.py 42
    2a

Now, `hextools.py` can be run on its own with an argument on the commandline, and `myprogram.py` can import hextools and use its functions without interruption.

Great job!

## Why doesn't Python use a main function

In some languages, like C or Java, all you have to do is define a function called `main` and it will be run when you execute the file. Why does Python use this somewhat awkward magic string variable instead?

In my opinion it's for a few reasons. Firstly, Python spans a broad range of ""program formality"" levels. If you just write all your code on the global scope:

    # someprogram.py
    import os
    for filename in os.listdir():
        if os.path.isfile(filename) and filename.endswith('.temp'):
            os.remove(filename)

Then you're basically treating Python like bash/batch (except a million times better). In order to allow for this kind of programming, Python is already predisposed to treat files as a list of instructions to execute in order. Compare that with Java where files are more like baskets full of methods and the order doesn't matter because `main` is where things actually start running.

Consider also that in Python you can do this:

    def f():
        print('hello')

    f()

    def f():
        print('world')

    f()

-

    hello
    world

Which you can't do in a language like C or Java.

    int f()
    {
        return 1;
    }
    int f()
    {
        return 2;
    }

-

    main.c:7:5: error: redefinition of 'f'
    int f()
        ^
    main.c:3:5: note: previous definition is here
    int f()
        ^

-

    class Main {
        public static int f()
        {
            return 1;
        }
        public static int f()
        {
            return 2;
        }
        public static void main(String[] args) {
            System.out.println(""Hello world!"");
        }
    }

-

    Main.java:6: error: method f() is already defined in class Main
        public static int f()

And then there's Javascript, which I guess must do a parsing pass before running but doesn't complain about redefines.

    function f()
    {
        console.log(""hello"");
    }

    f();

    function f()
    {
        console.log(""world"");
    }

    f();

-

    world
    world

But anyway. On the opposite end of the formality spectrum, you can write Python files where everything is tucked away into classes and functions and the file is designed as an import with no regard for command-line usage of that particular file. Well, if Python already has the predisposition to just run all the code on the global scope, why should there be a separate parsing mode, and how would it know which one to use?

That's not to say I love `if __name__ == '__main__'`. I would prefer to have a separate `__main__` magic variable that is True or False, then you can just `if __main__:`. The `__name__` string is still fine for other purposes, like printing the module to the screen.


As a matter of fact, whenever I upgrade a Python script from quick prototype to reusable code, I always move the main code into a C-like function called `main` via this template:

    def main(argv):
        # At this point I usually do my argparse
        return 0

    if __name__ == '__main__':
        raise SystemExit(main(sys.argv[1:]))

That's because if you make any variables inside `if __name__ == '__main__'`, they will be part of the global scope which may have accidental side effects. For example:

    # bad.py
    import sys

    def int_to_hex():
        return hex(x)[2:]

    if __name__ == '__main__':
        x = int(sys.argv[1])
        print(int_to_hex())

    # Great, everything's ready to ship!

Spot the error.

Whereas by creating a main function, any variables in `main` are local variables and are not accessible outside of it.

## Real-life examples.

I understand that the examples shown here are very simplistic. Here are some links to my other programs which use ifmain in a purposeful way.

- [bytestring](https://github.com/voussoir/voussoirkit/blob/417c14a02338d10a34fdf4875761c9e4a92aef1c/voussoirkit/bytestring.py#L127) is imported by many of my other programs, but also is very useful on its own.
- [epubfile](https://github.com/voussoir/epubfile/blob/4f44cd642f04f1dc94b1d65c5a52f5f639460276/epubfile.py#L1657) can be imported into any program that wants to modify epubs, but has a number of builtin utilities that run from ifmain.

In a very large project with many files, it's more likely that you'll have a main launcher file, and none of the internals are very useful to run on their own. ifmain essentially bridges the gap to make single Python files useful as imports and standalone utilities.",1584295778.0
"Is it worth learning Python at age 35, keeping in mind that AI era is here.",380,1finro5,learnpython,https://www.reddit.com/r/learnpython/comments/1finro5/is_it_worth_learning_python_at_age_35_keeping_in/,358,"I have been using Cody with VS code since last 3 to 4 months and it seems like it gets the job done. Would it be worth it to learn Python at this age for a career switch?

What if I am learning something which would be overtaken by AI in the next few years.",1726540965.0
"TIL that Spyder allows you to create ""Cells"" just like Jupyter Notebook so you can separate out blocks of code that you can run by itself in ipython",374,gg5xsi,learnpython,https://www.reddit.com/r/learnpython/comments/gg5xsi/til_that_spyder_allows_you_to_create_cells_just/,55,"https://docs.spyder-ide.org/editor.html#defining-code-cells

Yeah anyways after more than a literal decade of using Spyder found this out. Nice. For all the new IDE's out there I always keep coming back to this one.",1588986919.0
"Creating an Instagram bot that will block everyone over 10,000 followers",375,1emf2md,learnpython,https://www.reddit.com/r/learnpython/comments/1emf2md/creating_an_instagram_bot_that_will_block/,70,"My friend and I are going to create an instagram bot that will block every account over 10,000 followers as well as accounts that have certain words in their bio/name such as ""daily"" or ""Jesus"". My friend is a computer science major and has experience with python. Reason: I am TIRED of influencers.

I believe this is going to take the bot an extremely long period of time to complete and I read that making a bot operate quickly can risk you getting banned. 

How likely is this to work? Will I get banned? Is blocking people on Instagram with a bot something that is deemed ""illegal"" in the Instagram bot realm? Have you ever done this?",1723045208.0
Help for my 13 year old son is creating a python game,378,jsnfkp,learnpython,https://www.reddit.com/r/learnpython/comments/jsnfkp/help_for_my_13_year_old_son_is_creating_a_python/,131,"Hello, my 13 year old son is creating a python game. Is anyone interested in seeing it and giving positive and negative feedback? As well, is there anything I should do to support him? I am paying for python coding courses.

Edit
I have read these comments. Thank you very much for your help and support. I will ask him to upload his code as suggested. I do not know how to do that but I will ask my husband to help me. Thank you all kind people!",1605152490.0
How to earn money using python online?,380,hp9ptz,learnpython,https://www.reddit.com/r/learnpython/comments/hp9ptz/how_to_earn_money_using_python_online/,159,"Hi. First of all, I'm sorry I know that this question has been answered already but I wasn't able to get my answer from that. I've been using python for almost 2 years and can say that I'm pretty good at it and improving day by day. I want to make some make money off python even if it's a small amount. I'll learn most of the things if it's not super hard. Also, I'm a teen and due to this lockdown stuff I can't work offline anywhere. It would be a huge help if someone can guide me!",1594472986.0
Would you like to learn python with a group? Cohort style groups for people at similar levels or using similar material could help a lot of people.,377,gcbefd,learnpython,https://www.reddit.com/r/learnpython/comments/gcbefd/would_you_like_to_learn_python_with_a_group/,161,"I've been thinking of organizing a group of people similar to my own level who would like to learn together.  I'd be interested in potentially hoping on a zoom periodically and helping each other through problems and just generally navigate the world of python and programming at large. 

No real solid ideas so please share any that you have as well if you'd be interested!

I've personally just finished Python Crash Course and have built a few small programs such a game of 21 that you play against a computer dealer. However if there are enough people who are interested we could have a few different levels.",1588444533.0
Jupyter Notebooks - Great tool for beginners,372,ly806c,learnpython,https://www.reddit.com/r/learnpython/comments/ly806c/jupyter_notebooks_great_tool_for_beginners/,72,"Just wanted to share with anyone who is struggling to learn AND implement code. I'm in my 4th week of Intro To Python and I have to say, I got a little overwhelmed. My teacher recommended using Jupyter Notebook (Google it, it's Free!) and it's helped out a shitload. Basically it's an open-source web app that allows you to share documents that contain live code. The BEST part is you can easily toggle between text for note-taking and code AND RUN THE CODE right in the document. This really changed the game for me and if you're out there struggling to bounce between your notes and your interpreter/compiler, check it out. Good luck",1614935263.0
Where to learn about Python program structure/design?,374,hsiidp,learnpython,https://www.reddit.com/r/learnpython/comments/hsiidp/where_to_learn_about_python_program/,57,"I'm self-taught in Python and am able to write programs that work, but I still don't feel like I know what I'm doing.  Where can I learn about program structure/design?

I usually just start coding and one thing leads to another and pretty soon, I'm done.  But I can't shake the feeling that a professional programmer would look at my code and laugh at how haphazard and inefficient it is.  Any pointers or suggestions?  Or are we just supposed to figure it out for ourselves?",1594933898.0
"Just finished ""Automate The Boring Stuff With Python''. What next?",378,hs5ypr,learnpython,https://www.reddit.com/r/learnpython/comments/hs5ypr/just_finished_automate_the_boring_stuff_with/,88,Should I start building projects? What are some good beginner projects to start on? What books will help me build projects?,1594888292.0
I am struggling in my first python class. Does this mean the computer science track isn’t for me?,375,luuv7z,learnpython,https://www.reddit.com/r/learnpython/comments/luuv7z/i_am_struggling_in_my_first_python_class_does/,143,"I have a good grade in the class thanks to the help of a tutor, but I feel like the information just isn’t clicking like it should be. I struggle doing any of the assignments on my own. There is only one week left in the class. Has anyone else had this struggle and went on to have it really click or am I hopeless? Loops really confuse me and those seem to be the basis of everything.",1614557994.0
"Why do all programming languages start with ""Hello World""?",376,fnhja2,learnpython,https://www.reddit.com/r/learnpython/comments/fnhja2/why_do_all_programming_languages_start_with_hello/,81,"like, it can be anything. it can be print(""Hi"") but no, every teacher, every lesson, every website, teaches you ""Hello World"". why?? is it just a programmer meme or smth?",1584958104.0
I've made a python program that let's you mass download images from a given subreddit!,372,eor5cw,learnpython,https://www.reddit.com/r/learnpython/comments/eor5cw/ive_made_a_python_program_that_lets_you_mass/,104,"The program/script can be found [here](https://github.com/glof2/SID).

Any advice would be appreciated, thanks in advance!

This is my first code over 100 lines, so it may be messy, sorry for that.

\------------------------------

How to use?

Go to the link given above, and download the program. (The first page given, there's no releases or anything)

Once you got it downloaded unzip it somewhere, and open `usersettings.py` file with any text editor, then fill out the information.

Once that is out of the way open cmd, and download PRAW library.  (`pip install PRAW`), then head over to the directory where `sid.py` is located, and type in `sid.py subreddit_name sorting` (Sorting can be top/hot/new/rising).

\------------------------------",1579034586.0
Here's a website with 100+ short exercises for beginners to Python,373,7idif9,learnpython,https://www.reddit.com/r/learnpython/comments/7idif9/heres_a_website_with_100_short_exercises_for/,24,"Useful for any beginners over at www.pythonsandladders.com. A good number of questions to go through, some perhaps a little challenging even for seasoned problem solvers.

The whole thing runs in the browser through Skulpt, using JavaScript to emulate Python 2.6. 

Happy coding!",1512719101.0
"Are there any YouTube channels like The Coding Train, but they code in python?",372,ko19zk,learnpython,https://www.reddit.com/r/learnpython/comments/ko19zk/are_there_any_youtube_channels_like_the_coding/,46,Or any YouTuber that records themselves programming some project in Python without it being a tutorial?,1609460123.0
Just finished my first official project!,372,gsdczu,learnpython,https://www.reddit.com/r/learnpython/comments/gsdczu/just_finished_my_first_official_project/,56,"Hi :)

I have been learning python programming for the last two months +- but i was always scared to start a project and fail in the middle.

i have done a couple of scripts that to little stuff but this is the first time that i tried to build an official project that is not following a tutorial and with git, github, python structure and all of those stuff.

i call it..... Flasher!! 

it is a simple Flask web with a  button where every time the user presses it it links him to a random flash game from the past. 

it is not really complex, I will link here to the github page but i will also write here that my objective was to take a bunch of little topics I have learned in the last month-month and half, configure them to work together and make them do something lol.

obviously there is a \*91025915 better way to build what I built but I am still extremely proud of it because in the end I was able to think of something and build it from scratch from start to end, something I would not imagine I would be able to do around a month ago :)

i want to also thank the people of the python and learnpython subreddit that have helped and inspired me to program :)

now i will shut up and link to my project!

[https://github.com/Micbenh/Flasher](https://github.com/Micbenh/Flasher)",1590695409.0
THANKS A MILLION,373,g0oo5s,learnpython,https://www.reddit.com/r/learnpython/comments/g0oo5s/thanks_a_million/,36,"I'VE been a part of this comunity for a couple weeks now, give or take a month. and so fare this place has actualy helped me grow so quickly and i just wanted to say thanks   


it's nice to be a part of something positive like this and i look forward to the day where my knowlidge aand experience can help some1 on their journey  


don't give up on yourselves guys... you can do it",1586802519.0
Python Projects for Beginners,373,k60zfu,learnpython,https://www.reddit.com/r/learnpython/comments/k60zfu/python_projects_for_beginners/,76,Any sites or books for doing projects for python beginners?,1607014444.0
"My first competition, and why they are more important than you realize.",374,jud19d,learnpython,https://www.reddit.com/r/learnpython/comments/jud19d/my_first_competition_and_why_they_are_more/,23,"Hi all,

Today I joined my first coding competition, using Python (I know Python isn't recommended, but it's my dominant language). 3 months after finishing the full course of Python and doing projects, school started. I recently started my freshmen year in high school and that was when my problems started.

Because I didn't have a lot of time to code or complete projects, my unused knowledge in Python died.  I recently started doing Hackerrank due to the positive reviews everyone gives, but I was immediately overwhelmed. Though the questions started out easy, it immediately curved to a point where I didn't understand. Because I didn't want to give up on Hackerrank, I took some time off it to learn Algorithms and Data  Structures from [geeksforgeeks.org](https://geeksforgeeks.org) which had massive amounts of courses. Once again, I was left with no direction and a sense of being lost in a desert.

Recently, I joined a computer science club in school. I didn't think too much about  the club and just went in. I soon signed up for a coding competition that took place today. We win or do anything notable, but it was all I needed. The questions in this competition started from easy (printing out ""Hello World"", concatenation, etc.), to more advanced things. For the first time in around 3 months, I was able to solve problems that were not too hard, but not too easy, and pushed me outside my comfort zone. I finally have the same feeling of direction and joy of coding as when I printed ""Hello World"".  I was finally able to apply things that I learned into coding.

I'm no expert, and I don't want to act like one, but for someone who was struggling to progress in their journey in coding, I highly suggest you join a competition or club if you had the same problem as me. I have learned more from 4 hours of straight coding than 1 month of ""learning"" algorithms.",1605401981.0
Feeling dumb after seeing the best solutions on codewars,372,i76d6l,learnpython,https://www.reddit.com/r/learnpython/comments/i76d6l/feeling_dumb_after_seeing_the_best_solutions_on/,63,"I've already got the basics and I can easily solve the beginners problems on codewars, but when reading the best solution I feel very dumb for not knowing a lot of operators, having difficulties with list comprehension, or even not knowing why it is working at all.

&#x200B;

Should I just solve it in my own way or should I stop and try to write like the best practices?

&#x200B;

In my own way I could solve in 5- minutes and find it waay more readable, when trying to write like the best solution I spend like 30+ mins.

&#x200B;

Edit: Thanks everyone for your answers, like some people mentioned, this is entirely the point, learning is challenging. I won't care too much about the one line solutions, but I should learn how they work. Got a lot of ideas on where should I head next.",1597071514.0
Python cheat sheet?,375,gti9n5,learnpython,https://www.reddit.com/r/learnpython/comments/gti9n5/python_cheat_sheet/,51,I was wondering whether you guys keep a handy cheat sheet when y'all code. For example when working with a module after a long time it's obvious that we become rusty and need help with the functions and the syntax. Would be great if you guys share the links/books that you guys refer to while programming. I'm sorry if this has been asked before. Cheers!,1590860655.0
Python Crash Course and An Introduction To High Performance Python,372,8ln9ga,learnpython,https://www.reddit.com/r/learnpython/comments/8ln9ga/python_crash_course_and_an_introduction_to_high/,16,"Hey, I made and ran a workshop / demonstration as part of a series of events my university is running; 'High Performance Python'.

 I have all of the code and presentations on Github, so I thought I'd share it with you all in case anyone finds it useful. [Github Link](https://github.com/LukeRoantree4815162342/QUB_DW_HighPerformancePython)

The workshop had two parts;

### A Python crash course / refresher -
[PythonRefresher](https://github.com/LukeRoantree4815162342/QUB_DW_HighPerformancePython/blob/master/PythonRefresher.ipynb)

### High Performance Python -
[HighPerformance](https://github.com/LukeRoantree4815162342/QUB_DW_HighPerformancePython/tree/master/HighPerformance)

Additionally, we have a tutorial for building a simple tic-tac-toe application;
[PythonApp](https://github.com/LukeRoantree4815162342/QUB_DW_HighPerformancePython/tree/master/Python_App)

Hope this is useful to someone, it was fun to make at least. 
Message me if you have suggestions, or even better fork the repo and make a pull request.


**[Edit: Someone gilded this - Thank you!]**",1527112019.0
"What does ""have an understanding of basic python"" mean?",372,kh95ql,learnpython,https://www.reddit.com/r/learnpython/comments/kh95ql/what_does_have_an_understanding_of_basic_python/,85,"Sometimes when you wanna take online course on specific python topic like ""Web development with Django!"" or ""Data science with Python"", it is recommended that you need a ""basic understanding of python"". Like what does that mean?

I understand functions, arrays, conditional statements, variables, loops and mathematical operations. But I don't know jack about class, lambda, decorators, etc (I actually don't know how much I don't know). The most complex stuff I did with python was making an animated scatter chart using plotly while heavily relying on tutorials and stuff. Am I considered to have a basic understanding of python?

I wanna learn web development and data science from online courses and I am willing to pay for it if I need to. But I don't know if I'll be able to understand enough to follow the courses",1608521605.0
I am finally starting to incorporate Python into my everyday workflows and its really helping keeping me motivated to learn,367,idk2w3,learnpython,https://www.reddit.com/r/learnpython/comments/idk2w3/i_am_finally_starting_to_incorporate_python_into/,38,"Im using it for a couple of different things, but learning how to manipulate pdfs has been great as I often have to combine multiple pdfs and extract tables to bring into excel. I also had a chance to use it yesterday with matplotlib and pandas to bring in some quarterly income and expense numbers for forecasting and export some tables and their related histograms to pdf for a presentation. Originally I was more interested in the data engineering portion of my job since I knew SQL really well, but now I'm also starting to get interested in the data science side of things. Ive started to explore trying to build some predictive analytics models with some datasets that i have access to and seeing if i can possibly add any value there as we dont have a data science department.",1597961423.0
Has anyone here automated their entire job?,368,dztdfq,learnpython,https://www.reddit.com/r/learnpython/comments/dztdfq/has_anyone_here_automated_their_entire_job/,175,"I've read horror stories of people writing a single script that caused a department of 20 people to be let go. In a more positive context, I'm on my way to automating my entire job, which seems to be the push my boss needed to allow me to transition from my current role to a junior developer (I've only been here for 2 months, and now that I've learned the business, he's letting me do this to prove my knowledge), since my job, that can take 3 days at a time, will be done in 30 minutes or so each day. I'm super excited, and I just want to keep the excitement going by asking if anyone here has automated their entire job? What tasks did you automate? How long did it take you?",1574384855.0
Managed to impress my manager with Python... that sounds dirty,373,c0d2xj,learnpython,https://www.reddit.com/r/learnpython/comments/c0d2xj/managed_to_impress_my_manager_with_python_that/,96," Had a noteworthy event at work today. I have an internship with Amazon for the summer, but it with the Data Center Operations divisions. So working with servers mostly. But I found a way to make an impression on my manager today using Python. I can't go into specific details of what we were working on (NDA and confidentiality and all) but I can talk about what I did. 

We were working with a large number of assets (327 total) and part of that work involved compiling information about those assets. Well as an intern I get all the crap jobs. So I got handed that job. So for 2 days, I've been working on compiling the info in a spreadsheet. Thought I was finished but found I only had information for 319 assets. Well, we can't just 'lose' 8 assets. That kind of looks bad on a record. So my manager wanted me to go through the list of total assets and figure out what 8 we didn't have info for. I'm like 99% sure he was expecting me to go line by line in excel and do a CTRL+F to see which ones from the total list weren't on the info list. A nice little process that would likely have taken me the better part of the day to accomplish.   

Instead, I pulled up python, threw together a script to build 2 lists (one for total assets, one for the information I had compiled) and then compare the lists. Anything it found in the totals list that it didn't find in the info list got dumped to a text file.  

Total time: 18 minutes (I had to look up some info on the xlswriter module).  

My manager literally said: ""How the hell did you do that?"" when I showed him the list 20 minutes after we spoke.",1560468979.0
Sentdex is updating his Introduction to Python series!,368,9sfycs,learnpython,https://www.reddit.com/r/learnpython/comments/9sfycs/sentdex_is_updating_his_introduction_to_python/,47,"For those of you who don't know who I'm talking about, Sentdex is an excellent teacher of Python and various Python libraries. He mentioned he was a little unhappy with his old Python tutorial series, and so he's updating it. I think he does a phenomenal job explaining concepts and helping you get going with Python, so I hope this helps other people as well.

If you're a beginner looking to get started, I highly recommend checking out this series as he releases it. Here's the first video, [Introduction to Python 3 Programming Tutorial](https://www.youtube.com/watch?v=eXBD2bB9-RA).",1540838671.0
My first project: an introspective 90-year Life Calendar,367,pxabxz,learnpython,https://www.reddit.com/r/learnpython/comments/pxabxz/my_first_project_an_introspective_90year_life/,94,"This is my first 'finished' project after self-learning over several months:

[https://www.timeofyourlife.io/](https://www.timeofyourlife.io/)

It’s called Time of Your Life. It generates a 90-year calendar to represent your life, and shows you all the weeks you have lived to date. You can also add ‘life events’ — important landmarks/milestones such as a graduation or the birth/death of a loved one and they will be displayed on your calendar.

It’s completely free to use, I only ask that you give me feedback — the current features are not too extensive, but I’d like to develop it according to what you’d like to see.

I hope you find it useful — if you do, I’d appreciate it if you shared it with someone!

Built with Python (Django) and some light Javascript.

Source: [https://github.com/juancoquet/time-of-your-life](https://github.com/juancoquet/time-of-your-life)

Happy to answer any questions about what I've learned so far.

Edit: thank you for all the feedback! I was very nervous to share my first build, but the positive response has made my evening — I really appreciate it",1632847198.0
Here's a way you can become a better programmer!,363,8bgawd,learnpython,https://www.reddit.com/r/learnpython/comments/8bgawd/heres_a_way_you_can_become_a_better_programmer/,81,"#### How do I become a better programmer?
I see this question on reddit quite a lot.  In fact, I usually see something like it every time I open up r/learnpython or r/learnprogramming.  There is always someone wanting to know how to become a better programmer, what magic pill or secret incantation that others do that instantly make them a better programmer.  Invariably, there is never a simple answer to their question - often the answer boils down to 'Here's a bunch of tutorials, do them until you know the syntax then work on a project that interests you.'

This often leads to some consternation on the part of the OP as they often wonder 'What project can I possibly work on if I don't know any programming?!?'  Often it seems as if they tentatively accept the advice and wander off into the wilderness to see if they can find this mystical project to work on.  Sometimes you even hear back from them.  Well.  Today I wanted to take a moment from my own project and tell you:  This is the absolute best advice anyone can give you.

All the practice tutorials out there are wonderful.  Most of them, with the exception of a few that are looked down on by communities as a whole, are fairly well suited to the purpose for which they were created:  Teaching the syntax of a language.   See, that's the thing that most new programmers don't realize.  You're not learning how to program when you're doing these tutorials, you're simply learning how to speak the language.  Most people learn a few words in the language of python and want to write the next big Facebook or go to work for Google.  Well, let me tell you brothers and sisters, that's the equivalent of learning how to say 'Parlez vous frances?' and wanting to immediately set off to write the next big french literary masterpiece.  It's technically possible, but so unlikely as to be completely improbable.


#### Find a project.
So...why learn all that language (syntax) from tutorials then squander them in trying to flop around doing /MORE TUTORIALS/?  There comes a point where you're just learning things that don't seem very useful to you at all - but you keep plugging through them thinking 'everyone says do this tutorial, it's GOT to make me a better programmer, right?  Dave?  Right??'  Well, let me give you an example of why it's important to move past tutorials and go on to working on a project that you find interesting.  Now, no lie, [this](https://pastebin.com/UnJgCTD6) is code that I produced in August of 2017.  Nothing special, nothing fantastic.  In fact, it was probably copied directly from a tutorial somewhere with very little understanding on my part until I began tweaking and moving it around.  Now, this level of code was where I stayed until the end of December when I started to get interested in an opensource python project ([Evennia](http://www.evennia.com/).  When I started on that it was the end of Christmas break, the kids were going back to school and since I'm a disabled stay at home dad looking for a way to become a better programmer and maybe start earning a little money to bring into the house, I figured 'What the hell...I used to love playing on Muds/Mushes/Moo's back in the day, why not take this out for a spin?'  That ended up plunging me headlong into a project that I felt ill-prepared for...but after the first couple of sessions of flailing around, not knowing where anything was and asking a bunch of questions on the (friendly!) irc chat the project uses, I settled down and started going through /their/ tutorials and working on implementing my own ideas.

It's been not quite four months...and [this](https://github.com/taladan/Pegasus/tree/origin/world/jobs) is the code I'm producing now.  Granted, there's probably a /lot/ wrong with it, and I'm still nailing down how to implement unittests into my code effectively, but...it's a hell of a lot more useful code that actually /does/ something.  I know that it's messy and not as good as some of the other stuff folks are doing, but in the last four months, I've learned (on my own) about Python, git, how to set up a development environment, how important standards are and why they exist.  And along the way, I've been working on different things and I'll ocassionally have a little flash of deja vu.  I'll go back and look at a project and realize - hey, I've done something very like this in a tutorial!  These are the moments when all the seemingly pointless how-to's and automating everything with the kitchen sink tutorials start to actually pay off.  


#### Don't forget the secret sauce.
Here's the secret that a lot of people don't think to tell you until you've been working at programming for a while:  You're going to have a hard time of it.  You're going to spend a whole day on one method, trying to figure out why it returns a list of tuples instead of just a straight list because something else is doing something you didn't account for.  See...**that** is how you become a better programmer. By sucking at it.  Not being satisfied with sucking at it, you google the shit out of your problem, ask on reddit, ask in IRC, post on git or stackoverflow....That's when you become better - when you have something that you're working on that is more important to you to get working than worrying about why the syntax of `','.join(string)` and `string.split(',')` look like that.  So...keep plugging along.  Find something you want to work on...something that you get up thinking about in the mornings...some puzzle you _really_ want to solve more than you want to watch that last episode of Dr. Who.  Do that and you'll become a better programmer.  Just be careful or the next time you're on Reddit, you'll see someone asking 'how do I be a better programmer?' and you'll invariably answer 'Do the tutorials, then find a project to work on'.  

I hope this helps some of the newer folks some.  The folks who are better programmers already, I only ask that you not giggle too badly at my code...I am afterall, still learning :D

_*Edit*_

I've had several people ask me how they can contribute to the project, or how to get started.  I've created a channel on [Freenode](https://webchat.freenode.net/)

I've also started some contribution guidelines [here](https://github.com/taladan/Pegasus/wiki)",1523445852.0
I still don’t fully understand how automation works,364,jdfio1,learnpython,https://www.reddit.com/r/learnpython/comments/jdfio1/i_still_dont_fully_understand_how_automation_works/,67,"So, I do know some of the basics of automation. I’ve watched the automation section on automate the boring stuff with python and I’m currently watching a video talking about automating with Selenium. But... There are still some things I don’t get. Like, how do you actually automate stuff like excel, word, and other applications, Do you always have to go to the terminal to run an automation program or do you have to create an application on the desktop, are there certain things I have to download, is it possible to automate someone else’s computer from your computer, etc etc. 

I’m sorry if these questions seem basic to some of you but I’m genuinely confused on this",1603024181.0
Understanding the For Loop,365,j7rpfp,learnpython,https://www.reddit.com/r/learnpython/comments/j7rpfp/understanding_the_for_loop/,63,"Hey All,

I'm having the hardest time understanding for loops in Python.

Could someone explain what is happening in this example? I see we have a variable v. I somewhat understand that ""range"" is built into Python. I don't understand the output.

    for v in range(3, 10, 3):
        print(v)

Output:

3

6

9

I keep seeing examples online but they lose me every time. Thank you in advance.

\-------------------------------------------------

\*Edit Thanks to everyone who replied. My misunderstanding was not knowing what range was fully doing.  

range(start, stop, step)",1602213830.0
"About to start my first python job, advice?",365,lu9h5l,learnpython,https://www.reddit.com/r/learnpython/comments/lu9h5l/about_to_start_my_first_python_job_advice/,87,"
As the title says, I’ve recently accepted a job as a machine learning developer (my first actual development job).

I am familiar and comfortable with python, testing, documentation etc and the data science stack having self taught it over the past 18 months or so and I will be spending my notice period really solidifying these skills.

However, my background is not in computer science or software engineering but in more traditional aerospace/mechanical engineering. And I have no real experience in professional software development.

I’m interested if any of you seasoned pros have any advice on how not to be “that new guy”?

Edit: thanks everyone! Got a bunch of great practical advice!",1614495052.0
Was able to find a use case today for Python at work to connect to an access database and then build a dashboard using plotly/dash,362,hzqmaw,learnpython,https://www.reddit.com/r/learnpython/comments/hzqmaw/was_able_to_find_a_use_case_today_for_python_at/,36,"I got sent an old access database file that I couldn't access since I didn't have a database management system or access installed. Tried to use pyodbc, but was getting a driver error and couldn't couldn't connect. Didn't realize that Access actually had a database driver so I had to get IT to install the 64-bit ACE driver. Then I was able to connect to it, write a SQL query within the pyodbc connection, create a pandas dataframe from the query output, use plotly and dash to create a chart or two and spin up a quick local hosted dashboard to illustrate a quick concept and actually be able to make progress. 

Yes, I could have just imported it all table by table into excel and then use powerpivot to create a sliceable dashboard for each location (which I still might do anyways depending on what the internal customer wants to do), but it was really cool actually having a use case for it and being able to show the internal customer a  quick concept on what it might look like and get some further feedback on what they were looking for.

I'll admit, having to troubleshoot and research error messages and not just be able to go ""oh this is too hard"" and move on to something else is intimidating. Yes, there was another way I could have done it, but being able to actually put some of my Python knowledge to use at work was a huge morale boost for the learning process.",1595982821.0
What are the CORE skills a Python programmer should have?,369,bggkgs,learnpython,https://www.reddit.com/r/learnpython/comments/bggkgs/what_are_the_core_skills_a_python_programmer/,73,"Trying to build a solid sample size of stuff to learn

EDIT: What I’ve been seeing a good amount of is besides writing clean, pythonic code, learning and understanding how to use data structures is what made a good handful of people better programmers. Interesting.",1556027185.0
I finally understand classes thanks to this presentation.,365,6tkolm,learnpython,https://www.reddit.com/r/learnpython/comments/6tkolm/i_finally_understand_classes_thanks_to_this/,17,"As a newbie to coding in general and having trouble understanding classes. [This helped me a bunch](http://slides.com/jasonmyers/learnpython-classes#/), I hope others can find it useful.",1502692243.0
Python Projects for beginners,362,nzjqx5,learnpython,https://www.reddit.com/r/learnpython/comments/nzjqx5/python_projects_for_beginners/,71,"I have learnt basics of Python and Numpy, but now i want to practice.

Can you guys tell me which project I should do to practice or where I can see other people's code so that i could understand what they are creating.

Or you can tell me the path I  should go no to make myself good at Python.",1623666494.0
"How do you pronounce ""char""?",361,khrrjo,learnpython,https://www.reddit.com/r/learnpython/comments/khrrjo/how_do_you_pronounce_char/,330,"Like the first part of ""character"" or the first part of ""charcoal""? Need to settle an office argument. I know it doesn't come up much in python, but you are my people. 

Related I suppose: Is `()` an empty ""two - pole"" (like tucson) or an empty ""tupp - pole"" (like tupperware)?

Edit: currently (10:05 PST; post is 19H:44M old)  
""Charcoal"" has 637 upvotes from 91 comments, ""Character"" has 455 upvotes from 99 comments.  
""Tupp-pole"" has 245 upvotes from 20 comments, ""Two-pole"" has 202 upvotes from 45 comments.  

Last update, because my vote counting script broke with the pagination and I don't feel like fixing it. 

Really a lot more diversity than I thought :)",1608589311.0
"Algovis: A python library for learning, visualizing and analysing algorithms",363,hy73j8,learnpython,https://www.reddit.com/r/learnpython/comments/hy73j8/algovis_a_python_library_for_learning_visualizing/,19,"Hi!, I've made Algovis, a python library made for visualizing and analyzing algorithms. As a beginner, I always had trouble visualizing algorithms so I made this very easy to use library to help new python users get started. It has a lot of nice features like printing the code to  terminal and visualizing in reverse. Getting started is extremely easy as well, just 5 lines of code

\# importing the sorting module

from algovis import sorting

import random

my\_list = \[i + 1 for i in range(100)\]

random.shuffle(my\_list)

\# creating an oject of the BubbleSort class and passing the list

bs\_object = sorting.BubbleSort(my\_list)

\#calling the visualize method

bs\_object.visualize(interval=100)

Currently the library has

## Sorting

* Bubble Sort
* Insertion Sort
* Selection Sort
* Merge Sort
* Quick Sort

## Searching

* Linear Search
* Binary Search

Github Repo: [https://github.com/hotshot07/algovis](https://github.com/hotshot07/algovis)

Documentation: [https://algovisdocs.netlify.app](https://algovisdocs.netlify.app/)

PyPI: [https://pypi.org/project/algovis/](https://pypi.org/project/algovis/)

Happy Coding :)

EDIT: Well this blew up! I'm glad you all liked it and thanks for the award u/Seralyn that made my day! I'm currently messing around with the networkx library, might add some graph algorithms in near future if I get it working. 

Some python resources that I really found helpful while learning python were YouTubers Corey Schafer and Dan Bader(his python tricks book is great too). Fluent Python, obviously. For writing good code for this library I used google's style guide which is amazing ([https://google.github.io/styleguide/pyguide.html](https://google.github.io/styleguide/pyguide.html)). Just don't read books and follow tutorials try to make something cool and nice you'll learn a lot faster. For 'personal growth' I'd recommend 'Deep Work', by Cal Newport, that is probably the only self-help book you'll ever need for that domain and it works. The best way to learn a language is to take it slow, understand what's happening, think deeply about trivial things and then move forward. 

On a side note, I was having a chat with mum who's halfway across the globe atm and she told me that 26th July 2018 was the day I had a terrible accident on the tennis court (broke 3 of my 4 knee ligaments) because of which I had to leave the university tennis team and was bedridden for about 6 months (add depression, anxiety and all that stuff). On 26th July 2020, exactly 2 years after that incident I release a python library that was trending on r/learnpython.  If you're struggling, things do get better. It just takes time :)",1595770835.0
"Okay, what do you do with python ?",367,f6or4w,learnpython,https://www.reddit.com/r/learnpython/comments/f6or4w/okay_what_do_you_do_with_python/,171,"Are there people here who aren't professional developers making money with python? What kind of projects do you create and what problems do they solve? As a beginner, I am curious about the kind of python programs that I can create & monetize - stuff like APIs, desktop software or a web app ? Does data science or ML payoff as a self employed?",1582178940.0
"Made my first piece of software, my employer has concerns",365,n0cthw,learnpython,https://www.reddit.com/r/learnpython/comments/n0cthw/made_my_first_piece_of_software_my_employer_has/,188,"I do a job where I have to input a lot of data into excell, I made a QT (pyside) app which i can use to open the xlsx files and input the data without the whole excell UI.

the sys admin has some (Legitimate) concerns but I don't know how to answer them

from the email (I removed a few about networking / web because i know the answer to those) :

&#x200B;

* *Can You categorically state that the software  has no flaws or holes in it that hackers could exploit?*
* *Can he justify the software is secure and cannot be manipulated/changed?*
* *What security is built into the software?*

&#x200B;

(for reference) the sys admin is willing to look over the source code (which is open source)

can anyone point me towards somewhere I can learn how to answer these types of questions? 

also if the data the application reads/writes isn't identifiable (no personal info) is this less/not concerning?",1619609772.0
Excel 📊 vs Python 🐍 Should I choose Python over Excel “to automate the boring stuff”? Also what and how is VBA programming (Excel) different (in the automating department)? Help!,358,io7jqh,learnpython,https://www.reddit.com/r/learnpython/comments/io7jqh/excel_vs_python_should_i_choose_python_over_excel/,118,"Hello, I recently bought two courses off Udemy both being complete crash courses on Excel and Python. I (only) know VBA programming in Excel can be used to automate stuff outside Excel like Microsoft Word and PowerPoint and so can Python. However, I’m at two minds over what to choose since both claim to do the same thing. Any sort of information would be appreciated! Thanks  😊",1599485775.0
Black Friday hack with python,360,e294r9,learnpython,https://www.reddit.com/r/learnpython/comments/e294r9/black_friday_hack_with_python/,99,"So I just finished my python script to monitor the price of my target gadget this holiday.  It’s going to be heavily discounted soon but it will go to the fastest finger. 

I’ve written a python script with BeautifulSoup. I’ve also set email and SMS alerts in the script 😂😂

Was just wondering if there’s any other person doing this for Black Friday and Fastest Finger deals.



Update: Long overdue but just thought I should add that I got the phone.",1574821619.0
Python input() function writes prompt to standard error instead of standard output,362,lyldtc,learnpython,https://www.reddit.com/r/learnpython/comments/lyldtc/python_input_function_writes_prompt_to_standard/,23,"I'm using Python 3.9.2 on Arch Linux.

I'm trying to make an interactive shell program in Python. I ran into an issue where the shell prompt would sometimes come before the output of the previous command. Here's a small example program that demonstrates the issue:

    while True:
        cmd=input('>>> ')
        print('This is the output')

Around 80% of the time, the program works as expected:

    >>> hello
    This is the output
    >>> goodbye
    This is the output
    >>> test
    This is the output

However, occasionally, this happens:

    >>> hello
    >>> This is the output

As you can see, on the second line, the `>>>`  prompt is printed before `This is the output` is printed. 

I tried to use strace to debug the program, and I found out that the `input()` function actually writes the prompt to standard error, not standard output (when the program is run interactively). Here are the relevant syscalls:

    write(2, "">>> "", 4)                     = 4
    read(0, ""hello\n"", 1024)                = 6
    write(1, ""This is the output\n"", 19)    = 19
    write(2, "">>> "", 4)                     = 4

You can see from the syscalls that the `print()` function writes to file descriptor `1` (standard output), but the `input()` function writes to file descriptor `2` (standard error).

This seems to contradict what [the documentation](https://docs.python.org/3/library/functions.html#input) says:

>If the *prompt* argument is present, **it is written to standard output** without a trailing newline.  The function then reads a line from input, converts it to a string (stripping a trailing newline), and returns that.

Is there a way to force `input()` to write the prompt to standard output instead of standard error?",1614976929.0
Thank you for being a wonderful community,360,lfsh2u,learnpython,https://www.reddit.com/r/learnpython/comments/lfsh2u/thank_you_for_being_a_wonderful_community/,22,"Hello, I have been beginning to explore python and this community has been so incredibly helpful and goes above and beyond. I am so used to being told to just google something, but as I am sure some of us know, sometimes the formatting just isn't quite right or applicable to our cases and you can't really troubleshoot with a website. Thank you! Your kindness and time spent to help others explore the CS world does not go unnoticed.",1612837881.0
Python OOP Series,366,5jgbiq,learnpython,https://www.reddit.com/r/learnpython/comments/5jgbiq/python_oop_series/,30,"A six part series I put together on object-oriented programming in Python. I hope you find them useful:

1) [Classes and Instances](https://www.youtube.com/watch?v=ZDa-Z5JzLYM)

2) [Class Variables](https://www.youtube.com/watch?v=BJ-VvGyQxho)

3) [classmethods and staticmethods](https://www.youtube.com/watch?v=rq8cL2XMM5M)

4) [Inheritance - Creating Subclasses](https://www.youtube.com/watch?v=RSl87lqOXDE)

5) [Special (Magic/Dunder) Methods](https://www.youtube.com/watch?v=3ohzBxoFHAY)

6) [Property Decorators - Getters, Setters, and Deleters](https://www.youtube.com/watch?v=jCzT9XFZ5bw)
",1482273771.0
Thank you guys.,354,10qwlzp,learnpython,https://www.reddit.com/r/learnpython/comments/10qwlzp/thank_you_guys/,23,"Six months ago, I started a post here asking why I didn't seem to understand Python. 

At that point, I had ""known"" Python for three to four years and yet didn't understand any of it. I could scrape passes, but that's about it. 

I didn't understand any workflow, I barely knew how to start Jupyter properly. 

I didn't understand it, I didn't enjoy it, and I found it hard to understand why so many other people were succeeding at it while I was failing spectacularly.

After explaining the problem, which was that I couldn't ""see"" the results of individual steps, many of you suggested notebooks and the like. 

I eventually settled on Visual Studio Code.

After a few weeks on W3schools exercises to relearn the basics, I dived into writing my own code. 

With the aids of VS Code, whether it be the autocorrect, the colour coding of existing variables, or the helpful ""did you mean X?"" when I made small mistakes like typing x instead, mistakes that would usually take me fifteen minutes and endless frustration to find, I began being able to focus on the bigger issues. 

I began understanding the issues and slowly analysing them, and finally was able to troubleshoot my own code. I was beginning to gain interest. 

This week at work, I managed to troubleshoot someone else's Python code not just on one PC, but on two. 

I kept going when even the person who wrote the code had given up. 

Then I fixed the second issue that popped up on both.  

After that, the code ran perfectly. My colleagues were incredibly grateful because it meant that they could spend less time manually comparing thousands of entries against one another. 

I felt like it had gone full circle. From being that person who was struggling with cryptic error codes to now becoming that person who could fix it. 

I still have a long way to go, but I've made way more progress in a few months than I thought I ever would. 

So thank you, for showing me that coding is truly enjoyable.",1675263212.0
Can I automate one of my work’s tasks using python?,356,rlfkd2,learnpython,https://www.reddit.com/r/learnpython/comments/rlfkd2/can_i_automate_one_of_my_works_tasks_using_python/,103,"Can one of my tasks at work be automated?

I’ve been given a new task at work and it is repetitive and very time consuming. 

I have been given a large spreadsheet by my manager, within this spreadsheet, there are jobs. Each job has a unique job number. To get the details of these jobs, I have to copy its unique number and paste it into the url where it gives me the job’s details. 

Within each job’s url I have to go a specific section and copy that information back to the excel spreadsheet. 

That is it and it is very simple but takes up so much of my time. I was wondering if there is anyway I could automate this so each job’s details are filled out quicker.",1640096125.0
Help with Python automation at work to free up time as single Dad.,355,ytj4pd,learnpython,https://www.reddit.com/r/learnpython/comments/ytj4pd/help_with_python_automation_at_work_to_free_up/,146,"Hi all, 

Quite embarrassed about this and unclear how best to word it - I’m just going to be authentic and honest and see where it gets me— 

The ask is about python and help in work task automation.

Here goes… Discovered Wife has been hiding serioud drug addiction problem. We have 3 kids. She became violent and eratic. She’s got to get better and is going to an inpatient treatment ctr. I will be Dad and Mom for forseeable future.

—
I need guidance on how I can automate tasks at work (python), allowing me to complete those tasks more quickly. Trying to get my work done more quickly so I can be home and present as Dad to my kids. 
—

Details: I am a PM in an org that uses Excel for planning, roadmaps, risk/issue tracking, etc (I don’t know why). Its copy rows from one sheet, move to another sheet or report, change formats to match whatever new sheet format is. Creating ppt slides with inputs from excel sheets, modify to whatever ppt layout is used.  Send status updates in email/slack, reports, etc. Hours of time counting / shading in cells based on lead time and take type. This is done for ~300 rows and the lead times are different depending on the item. I feel like these could all be automated or at least much of the manual input reduced.

(I can’t change what tools we use or how we use them. I’ve tried.)

Despite the tedious stuff it is truly a good job that I must at least try to maintain performance even with the current situation  It is what supports us and what has helped put away enough money to cover all 3 kids’ college tuition, if they choose to go to go someday.

I do have some help from my Mom and Dad. I’m looking into daycare, etc.

Hoping this type of post is okay. If necessary, I am happy to direct message the mods and prove that my situation is real. I’ll also answer any questions asked in this thread aside from personal info.

Again, I appreciate this community and any help would be fantastic.",1668289125.0
Simple tip from a long time C/UNIX programmer now learning Python.,361,rbuhwf,learnpython,https://www.reddit.com/r/learnpython/comments/rbuhwf/simple_tip_from_a_long_time_cunix_programmer_now/,59,"When you are first starting out to learn a language like Python, type every line of code yourself, rather than just cutting and pasting google results.  Even if you type an exact copy, the simple act of typing will help you quickly memorize the basic structures of the language.",1638979409.0
Who here is working through Angela Yu’s 100 days of code?,358,qkdp7x,learnpython,https://www.reddit.com/r/learnpython/comments/qkdp7x/who_here_is_working_through_angela_yus_100_days/,159,I don’t know if there is an active community of current students to compare notes somewhere. Currently I’m on Day 38.,1635772351.0
Am I stupid for not knowing how to do Complete Python Bootcamp: Go from zero to hero in Python first milestone project???,353,injv1j,learnpython,https://www.reddit.com/r/learnpython/comments/injv1j/am_i_stupid_for_not_knowing_how_to_do_complete/,72,"man......

I paid attention, I was positive. I did everything I could

I have a bachelors degree in STEM, I'm an educated individual.

but I have never felt this lost

I got to the first milestone project where I had to create a tic tac to game and I literally had no idea how to do any of the steps.

please tell me someone else out there has shared my experience 

I'm on here looking to put the shattered pieces of my dignity and self worth back together LOL!

i cannot believe how hard that was",1599388323.0
Beginner Python data analysis project - critique greatly welcome!,360,ggu2mb,learnpython,https://www.reddit.com/r/learnpython/comments/ggu2mb/beginner_python_data_analysis_project_critique/,70,"Hi everyone,

I just finished my first Python data analysis project, and being a total beginner, I could really use some other perspectives as to the quality of my final product. I plan on building a portfolio of similar projects and using it for applying to social science research assistant jobs where some programming and analysis ability is highly preferred. Since I am entirely self-taught, I need some concrete examples of what I can do to share with potential employers.

With that said, while I'm sure there are areas that could be improved, would my project be worth sharing with some edits? Or is it actually just a total flaming trash heap that should be scrapped entirely? Positive critique and helpful suggestions appreciated!

[Project](https://github.com/Skye80/Data-Analysis-Portfolio/blob/master/Analysis%20of%20Credibly%20Accused%20Clergy%20Data.ipynb)

Edit: Wow, I did *not* expect to wake up to so many comments and upvotes! I really needed this boost, to be honest. I'm so grateful for everyone's kindness and suggestions, and I'm definitely going to go back and try and tweak some things! I hope I can pay it forward one day, but for now, to fellow noobs who are trying to set up their first project - just go do it! I basically just forced myself to create something after learning the basics, and it really helps the learning process to break things down and figure out how they work outside of a guided tutorial. Keep coding!

Edit 2: I've uploaded a new version of the project since this was posted, taking into account some of the suggestions everyone has made. It's still not perfect, but I think it's time to move onto learning with new projects.",1589081575.0
Ive finally written my first script for work! But there is a problem...,355,jq17m3,learnpython,https://www.reddit.com/r/learnpython/comments/jq17m3/ive_finally_written_my_first_script_for_work_but/,68,"I started learning python not long ago and Just a few days ago I finished my first script that has some helpful application at work. It’s a super simple script that reformats a CSV file from a vendor, but It saves a lot of time and headaches.

Here’s the problem, how do I share this script with my non-tech savy coworkers while we’re all working from home? I realize I can just send them the .py file but they’ve never run python in their life. Am I really supposed to just send them this and say “install python and then also pip install pandas”?

I know some coding but I don’t have an in-depth understanding of technology so if there is an obvious answer to this problem, sorry. But any help would be appreciated.

Edit: Cant emphasize how much I love this community. Really appreciate all the help.",1604792944.0
Is there a “Khan Academy” for programming?,358,cwkstg,learnpython,https://www.reddit.com/r/learnpython/comments/cwkstg/is_there_a_khan_academy_for_programming/,134,"Disclaimer: I know Khan Academy itself has a few programming modules. But they only scratch the surface and on their own are wholly insufficient to become a proficient coder. Khan Academy is 95% math, with everything else (incl. programming) stuffed into that remaining 5%. </disclaimer>

For the past year I have used Khan Academy religiously to improve my math skills, going from almost pre-algebra all the way up up through Calculus 2. The way Khan Academy’s math modules are structured - bite-sized lessons that introduce key concepts followed by tailored practice problems, with each lesson laying the conceptual groundwork for those that follow, and all of the major topics being covered - has been amazingly productive for me. Because of that comprehensive and scaffolded structure, now I feel very confident in my university-level math skills where once I was basically mathematically illiterate. With select exceptions, Khan Academy is the only resource I’ve needed to achieve this level of success.

**What I’m wondering is, is there a similar resource for computer programming?** In particular I’d like to learn Python, but eventually will also be interested in Java, R, and SQL. Again given my description of Khan Academy, what I’m looking for is a one-stop-shopping programming resource with a series of bite-sized lessons, followed by relevant exercises, that cover all the major concepts and techniques required to become proficient in a particular language. Does anybody know of such?

Edit: Free like Khan Academy is of course preferred, but for the right resource, I would definitely pay.

Edit 2: I do have a tiny bit of Python experience, but not very much at all.",1566998787.0
I've created a Senior Python Developer roadmap,350,1153nn0,learnpython,https://www.reddit.com/r/learnpython/comments/1153nn0/ive_created_a_senior_python_developer_roadmap/,65,"I am a Senior Python Developer and it's always been a pain to find a resourse that will let me upgrade from mid level to senior, so I decided to create one where I focused on topic that will let Junior developers upgrade their knowledge to the Senior level.

I would appreciate any feedback you can provide me with, in case if you can advice which topics might be included, please let me know or open a PR🥺

https://github.com/pro1code1hack/Senior-Dev-Roadmap",1676684460.0
Interview question I failed answering,357,kqyg7n,learnpython,https://www.reddit.com/r/learnpython/comments/kqyg7n/interview_question_i_failed_answering/,301,"Hey all,

I just had an interview and the interviewer gave me a question I could not answer.

He asked me to write a function that accepts a number, the number must be either 7 or 4.If the number is 4, the function should return 7, if the number is 7, the functions should return 4.

The tricky part: you **cannot** use an 'if' statement in the function.",1609853266.0
"i decided to start learning python and i've been watching the same 5 videos over and over again to try and remember the lessons, am i mentally challenged or is that how most people start.",352,dcvncc,learnpython,https://www.reddit.com/r/learnpython/comments/dcvncc/i_decided_to_start_learning_python_and_ive_been/,129,"help

edit: thanks to every one who made a helpful response, it may not seem like it but i read every commeny and i greatly appreciate it.",1570130367.0
"If someone told you they know Python, what would you expect them to know?",357,d9uakg,learnpython,https://www.reddit.com/r/learnpython/comments/d9uakg/if_someone_told_you_they_know_python_what_would/,172,"Or for example, if someone put Python on their resume. What sort of things would you ask to determine what they actually know, or at least instill some confidence in you.

&#x200B;

Edit: Well then, looks like I have some responses to go through! And lots to learn! lmao",1569552655.0
Self-educated programmer learning python at 28 year old.,358,zbyth3,learnpython,https://www.reddit.com/r/learnpython/comments/zbyth3/selfeducated_programmer_learning_python_at_28/,111,"I am 28 years old and i am looking for changing career paths and I found programming really interesting. 

I got inspired by my bigger brother who is self-educated as well(although he was studying about programming since he was 14) and now he is working from home for a company that pays well(considering the average salary on my country). 

I started reading about python 6 days ago  and currently I've seen two long videos on YouTube for beginners learning python, I've written 25 pages of notes on my textbook, I made around 15 files with notes/examples on pycharm and today I started with exercises for beginners on pynative.com

I want to get as many advice as possible and any helpful tips for a beginner like me would be more than welcome and I also would like to ask if there is a future for someone starting coding in that age.",1670123383.0
"I finally got over ""the hump""",355,zha74o,learnpython,https://www.reddit.com/r/learnpython/comments/zha74o/i_finally_got_over_the_hump/,68,"I hate to admit it, but after literally years of reading books and practicing, it finally hit me.  I finally got that light bulb as I was coding.

how?

github co-pilot and chatGPT.

yes I know these are robots but its just so easy to understand now.  I was struggling through a script like I always do, and finally decided to use co-pilot.  it would literally tell me the code I need.  and if I had a question....""this isnt printing all I need"" or ""print this full list but break it up into parts"", just pop it into chatgpt and boom, its all there.

given my years of *trying* to learn, the answers came naturally after it was perfectly explained and shown.

this robot stuff is going to really change things.",1670623554.0
"So, uh, I'm TRYING to code a simple dnd battle simulator, and classes are a nightmare",354,hfz122,learnpython,https://www.reddit.com/r/learnpython/comments/hfz122/so_uh_im_trying_to_code_a_simple_dnd_battle/,97,"Hey there, I'm a self-taught noob that likes to embark on projects way ahead of my limited understanding, generally cos I feel they'll make my life easier.

So, I'm a DnD Dungeon Master, and I'm trash atbuilding balanced combat encounters. So I thought, hey, why not code a ""simple"" command line program that calculates the odds of victory or defeat for my players, roughly.

Because, you know, apparently they don't enjoy dying. Weirdos.

Thing is, after writing half of the program entirely out of independent functions, I realised classes \*exist\*, so I attempted to start a rewrite.

Now, uh...I tried to automate it, and browsing stackoverflow has only confused me, so, beware my code and weep:

&#x200B;

`class Character:`

`def __init__(self, name,isplayer,weapons_min,weapons_max,health,armor,spell_min,spell_max,speed):`

[`self.name`](https://self.name) `= name`

`self.isplayer = isplayer`

`self.weapons_min=weapons_min`

`self.weapons_max=weapons_max`

`self.health=health`

`self.armor=armor`

`self.spell_min=spell_min`

`self.spell_max=spell_max`

`self.speed=speed`

`total_combatants=input("">>>>>Please enter the total number of combatants on this battle"")`

`print(""You will now be asked to enter all the details for each character"")`

`print(""These will include the name, player status, minimum and maximum damage values, health, armor, and speed"")`

`print(""Please have these at the ready"")`

&#x200B;

`for i in range(total_combatants):`

`print(""Now serving Character Number:"")`

`print(""#############""+i+""#############"")`

`new_name=str(input(""Enter the name of the Character""))`

`new_isplayer=bool(input(""Enter the player status of the Character, True for PC, False for NPC""))`

`new_weapons_min=int(input(""Enter the minimum weapon damage on a hit of the Character""))`

`new_weapons_max=int(input(""Enter the maximum weapon damage on a hit of the Character""))`

`new_health=int(input(""Enter the health of the Character""))`

`new_armor=int(input(""Enter the AC value of the Character""))`

`new_spell_min=int(input(""Enter the minimum spell damage of the Character""))`

`new_spell_max=int(input(""Enter the maximum spell damage of the Character""))`

`new_speed=int(input(""Enter the speed of the Character""))`

&#x200B;

As you can see, I have literally no idea how to end the for loop so that it actually does what I want it to, could you lend a hand, please?

Thanks for reading, if you did, even if you can't help :)

EDIT:  Hadn’t explained myself clearly, sorry. Though my basic knowledge is...shaky, the idea was to store the name of each character and map it to each of their other attributes , so that I could later easily call on them for number-crunching. I don’t think pickle is a solution here, but it’s the only one i have had some experience with.

EDIT 2: Thanks y’all! You’ve given me quite a lot of things to try out, I’ll be having a lot of fun with your suggestions! I hope I can help in turn soon ^.^",1593137245.0
Built PONG! I am soo happy!,349,gugash,learnpython,https://www.reddit.com/r/learnpython/comments/gugash/built_pong_i_am_soo_happy/,66,"I was doing the course ""An Introduction to Interactive Programming in Python (Part 1)"" by Rice Uni in coursera and there was a assignment were we had to build the pong game. This is actually something I am really proud of! Took me around 7 hours and lots of messy code!

Would love any code feedback!

[PONG GAME](http://www.codeskulptor.org/#user47_DxNN5EFZyj_0.py)

&#x200B;

ps: click the run button in the editor",1590997607.0
How did you manage your time to teach yourself python while working a full-time job?,349,bb9wgg,learnpython,https://www.reddit.com/r/learnpython/comments/bb9wgg/how_did_you_manage_your_time_to_teach_yourself/,100,"I am determined to learn python. I want to turn my career and life around. I do not want to be in my dead-end job anymore. But I can't do it alone, so please help me out.

For those who eventually did a career change into programming learning python while working a full-time job, how did you manage your time? What sources did you use?

At the moment, I chose ""Python Crash Course"" and I intend to read ""Automate the Boring Stuff"" next.

Also, I don't know exactly in which department I would like to work for, but probably data analytics. But artificial intelligence, machine learning, and robotics do interest me as well.

Anyway, I would appreciate any tips for this new noob into python world. Thank you in advance!

\*\*\*EDIT\*\*\*

I'm so thankful for everyone who commented and gave me some tips! I did not expect to get all these answers. So, what I'm going to do is actually enroll in ""Learn Python Programming Masterclass"" on Udemy which was suggested by u/BigTheory88 and side by side going over what I've been reading already, ""Python Crash Course."" I've also downloaded ""Solo Learn"" app, so I can keep studying during my breaks. I'm going to set aside at least an hour during the weekdays to study. And I'll invest more hours to study during the weekends. I'll make short-term goals per day by trying to complete a chapter or concept. I am determined because I want to change my life. I cannot continue to live with my current low-paying dead-end job. I understand and recognize the fact that I need to learn a new skill to get out of my current job and start my new journey into programming. I have a 1 year goal to be hired into a programming job for now. And I am looking forward to the future and myself posting my progress and result, no matter what the outcome. I am optimistic and motivated (for once) to meet my goal. Thank you once again to everyone! I hope to post my failures and successes by April 2020!",1554826805.0
How to start learning Python ? The Complete guide.,349,53z5p4,learnpython,https://www.reddit.com/r/learnpython/comments/53z5p4/how_to_start_learning_python_the_complete_guide/,66,"I recently started learning Python Programming. But after few days only, I got super-confused. So I am not able to decide about the approach I should follow to learn Python Programming. 

* Should I just read books (cover by cover).
* Should I make notes and learn the syntax.
* Should I watch Online tutorials and lectures and do coding.
* Should I use sites like https://www.codecademy.com/ , which teach coding online.
* Should I dive straight into projects.

I not only want to learn the syntax but also learn about the mechanism behind it. I do have a little programming experience. There was an intro course in C programming in first semester in my university. But there was not much I learnt in it. As I had no programming experience before it, and  the course mainly focused on learning and understanding syntax of C. 

I guess there might could be few other students/ learners/ programming-enthusiasts, who are just starting programming or had rough past experience with programming and wish to learn Python and not just mug-up the syntax but also understand the underlying mechanism. Also I am really interested in topics like machine-learning , data mining and web-development. So I would love to work on relevant projects after learning Python programming.

**So, I request all the Python gods, self-learners and programmers to help me and other beginners. Please share your path, how you learnt.**

Discovered Resources:

Books:

* https://python.swaroopch.com/first_steps.html

* https://learnpythonthehardway.org/book/
 
* http://automatetheboringstuff.com/


Video Tutorial:

* https://www.youtube.com/playlist?list=PLS1QulWo1RIaJECMeUT4LFwJ-ghgoSH6n
 
* https://www.youtube.com/playlist?list=PL6gx4Cwl9DGAcbMi1sH6oAMk4JHw91mC_

* https://www.youtube.com/playlist?list=PLTTTcaxrixZSh3TyvoEoTTbEHyS4c6Su7


Online Practice:

* https://www.codecademy.com/

* https://www.codeschool.com/
 
* https://www.codementor.io/learn-python-online
 
* http://www.learnpython.org/
 
* http://www.pythonchallenge.com/
 
* http://codingbat.com/python
 
* https://www.datacamp.com/courses

* https://py.checkio.org/
 

Discussion:

* https://www.quora.com/topic/Python-3
 
* http://stackoverflow.com/questions/tagged/python

* https://www.reddit.com/r/Python/



Guide:

* http://www.tutorialspoint.com/python/
 
* http://docs.python-guide.org/en/latest/intro/learning/
 
* https://developers.google.com/edu/python/


Reading:

* http://pansop.com/1037/

* http://www.kdnuggets.com/2015/11/seven-steps-machine-learning-python.html
 
* https://opensource.com/education/16/4/teaching-python-and-more-with-oer?sc_cid=701600000011jJaAAI
 
* http://scipy.github.io/old-wiki/pages/Tentative_NumPy_Tutorial.html
 
* https://danieltakeshi.github.io/2013/07/05/ten-things-python-programmers-should-know/


Github:

* https://github.com/vinta/awesome-python
 
* https://github.com/python
 
* https://github.com/CodementorIO/Python-Learning-Resources


Competitive Programming:

* https://www.codechef.com/

* https://www.hackerearth.com/
 
* https://www.hackerrank.com/
 
* https://www.topcoder.com/


**I guess at some point we all have to start the learning process. But at times due to lack of proper knowledge and resources, few of us end up giving-up or learning bad habits along the way. But with help of community, we all can learn something from each other. So please help any how you can.**",1474553924.0
"I am exactly 30 days into learning and this first thing I ever made, seriously thank you to this sub.",343,chwpb9,learnpython,https://www.reddit.com/r/learnpython/comments/chwpb9/i_am_exactly_30_days_into_learning_and_this_first/,65,"I have zero programming experience and 30 days ago I picked up Automate the Boring stuff.  I am subbed to over 700 subs and I hop between accounts a lot. I decided to write something that would help me subscribe to all my subs every time I pick up a new account. I read here that PRAW is the way to mess around with reddit.

I know this has probably been made here a billion times, but its the first thing I've ever created by myself and I am so incredibly happy.

Thank you to everyone on this sub for all the encouragement, never posted before but I lurk heavy.

Please let me know if there is anyway I can improve/cleanup.

import praw  
import openpyxl  
import os  


\# open Reddit instance: Log in  
`reddit = praw.Reddit(client_id='youridhere',`  
`client_secret='secretkeyhere',`  
`user_agent='agentname',`  
`username='username',`  
`password='redditpassword')`  
\# Change directory to where your file is located  
`os.chdir('/Users/path')`  
\# Confirm you're in the right directory  
`os.getcwd()`  
\# Open the excel file where subs are stored  
`workbook = openpyxl.load_workbook('allsubs.xlsx')`  
\# Specify sheet that data is on  
`sheet = workbook['Sheet1']`  
\# Read data in each cell one by one  
\# Range of Cells that contain the subs  
`for subs in sheet['A1':'A732']:`  
  `for cell in subs:`  
\# Subscribe to each 'cell value' which is a sub's name  
\# Try/Except: For subs that are invite only or are currently quarantined  
\# Keep going if an exception is raised.  
 `try:`  
`print(reddit.subreddit(cell.value).subscribe())`  
`print('You have subscribed to: ' + cell.value)`  
 `except Exception:`  
 `pass`  
`print(""\nAll done"")`",1564105839.0
Can I learn Python solely for data science and statistics?,346,n98it0,learnpython,https://www.reddit.com/r/learnpython/comments/n98it0/can_i_learn_python_solely_for_data_science_and/,60,"I've been learning Python during my free time for a while now and I only just realized how helpful its statistics and data science applications will be for me as an undergrad. I would just like to know if its a viable choice to focus on studying how to use the matplotlib, numpy, pandas, folium and similar libraries and Jupyter Notebook without having to take a Python programming class? I already know the fundamentals, but will I be missing something important by not learning from the very ""start"", so to say?",1620662196.0
How are you ‘planning’ your code?,352,mgcaal,learnpython,https://www.reddit.com/r/learnpython/comments/mgcaal/how_are_you_planning_your_code/,108,"There’s a thousand videos on Youtube on how to code Python - but they seem to be more like function references - which you can look up in the documentation?

How you guys and girls think through what you’re about to write?

Should I write 90 lines of code then reorganise it into functions? Or start writing functions and then finally ‘use’ the functions at the bottom of your code/script?

Is there a best practice way of doing this? 
I’m trying to make it easier for myself so everything works like ‘lego’ - otherwise I find I get really confused

Should I write down the steps as comments and then fill in the code after?

‘’’ getjson() Function will accept json string and return TSV
def getjson():

‘’’ getinputs() function will read argv[1:] and return the first parameter, or exit with error message if none specified 
def getinputs():

‘’’ writetosql() function will accept TSV and write it to final.db 
def writetosql():

‘’’ Run the functions
inputs=getinputs() 
tsv=getjson(inputs)
writetosql(tsv)",1617097658.0
What are some creative small programs that you have coded using Python?,346,eehscq,learnpython,https://www.reddit.com/r/learnpython/comments/eehscq/what_are_some_creative_small_programs_that_you/,224,"I am a beginner at coding with Python, so I am curious about learning what small programs or projects you all have created. I am hoping to develop my skills using Python, so I figured looking at actual code for various programs would greatly help.

Please include a short description of what the program does and the code itself in the comments below. Thank you!",1577089023.0
Stuck in beginner hell,348,l2lloq,learnpython,https://www.reddit.com/r/learnpython/comments/l2lloq/stuck_in_beginner_hell/,100,"As the title suggests, I've stagnated my progress and am feeling a little frustrated. How do I break out of beginner hell and move on to more complex programming? Thank you for your time!",1611313896.0
"My first project: Made a COVID 19 bot using selenium, pytesseract and tweepy",351,kaucmo,learnpython,https://www.reddit.com/r/learnpython/comments/kaucmo/my_first_project_made_a_covid_19_bot_using/,21,"**Posting here to get general advice, coding tips, and how to further improve my skills**

Hello! I am a self taught ""programmer"" been learning on and off these past 7 months. Finally, after the basics, learning version control and using APIs I was inspired to do a twitter bot that tweets COVID 19 data specifically for my city.

This is my first proper project using Git and GitHub (my previous ones were just one .py files for practice)

[Twitter](https://twitter.com/rxstwitte_rbot)

[GitHubRepo](https://github.com/renz-b/RoxasCityCOVID19Tweepy)

This is my webscraper bot to get data from this [website/tableau dashboard](https://public.tableau.com/profile/doh.covid#!/vizhome/COVID-19CasesandDeathsinthePhilippines_15866705872710/Home). I have been up several nights trying to figure out how to do a requests.get but failing every time since I have recently found out this is a dynamic website using js, which I am totally unfamiliar with. Thanks to this sub and r/learnprogramming by posting  questions there I tried to learn selenium and take a screenshot of the data I need then using pytesseract, an optical character recognition module in python, to convert the image to a string so that I can tweet the data using the Twitter API.

Currently, I am very fascinated with the ease of use of APIs and I have been day dreaming of future projects using APIs. :)

&#x200B;

EDIT: Thank you for the awards! Means a lot and gives me motivation to keep going. Currently, I have added more functionality to the bot where I can check the data before tweeting and being able to edit it. Also it can retweet now. Hehe.",1607655979.0
What is learning GIT?,347,ixkbh7,learnpython,https://www.reddit.com/r/learnpython/comments/ixkbh7/what_is_learning_git/,116,"I saw in a post that you have to learn git for most programming jobs, what exactly is git? and where can i learn it, i always just assumed its just uploading your stuff to github. not too sure if this is the right place to post this",1600768038.0
Are f-strings good practice?,342,fqhlxm,learnpython,https://www.reddit.com/r/learnpython/comments/fqhlxm/are_fstrings_good_practice/,121,"Is this...

    age = 25
    name = 'Bob'
    print(f'Your name is {name} and you are {age} years old')

Better than this?..

    age = 25
    name = 'Bob'
    print('Your name is '+Bob+' and you are',age,'years old')",1585391254.0
I am starting to think not everyone can become a programmer.,349,eqxotd,learnpython,https://www.reddit.com/r/learnpython/comments/eqxotd/i_am_starting_to_think_not_everyone_can_become_a/,124,"As this title implies this may come off as a more of a vent/rant than intentional. For the last 4 years, since I was in college, I have been trying to learn to program in my free time. I did ""learn"" HTML in a sense of now type this, this sets this up for this part of your page, etc... After that class I have since forgot many aspects of HTML and I'm starting to feel the same with using Python.

I started with Codecademy in 2016-ish when almost everything was still free. I have finished the Python modules of that as well as with SoloLearn. I have read Automate the Boring Stuff and Python Crash Course as well as following along with the examples cover to cover. Now I am re-reading Automate, Crash Course, and Mark Lutz Learning Python, 5th edition. To add to these books I have:
Complete Guide For Python Programming
Deep Learning with Python,
Fluent Python,
Learning Python Network Programming,
Rapid GUI Programming with Python and Qt,
Python High Performance Programming.

&nbsp;

With all these resources and feeling this lost still with trying to learn a new skill. I feel with these books (with some of them being in the 1000s of pages per book) that I'm more or less wasting my time now. Granted I've been off and on learning for a few years I feel like I should be completely on another level than still at the beginning stages. It just seems like nothing has really clicked together.

I've taught myself many other skills, but this one seems to repeatedly kick my ass time and time again. I understand syntax, can usually fix an error and debug, but to actually sit down and program anything of any real value eludes me. Printing prompts asking for information and storing input variables really doesn't cut as being a programmer I feel like.

&nbsp;

&nbsp;

&nbsp;

Mobile Edit: Thanks to all for taking time out to voice your opinions and advice. I'm understanding that I've got too much material to the point it is counter productive to coding. This is true that I have not written much of my own scripts/programs and making slight changes in the examples in my material is not productive.

 As for those that have asked why I want to program, it is not for a career change but for something that I want to do. I don't want to reinvent  the wheel. My background is in electrical and automation as well as PLC implementation. Currently there is one machine that has integrated C++ code for much more complex logic than that is possible with branch programming common with PLCs. I find this very interesting and was not aware of this integration until I started working here. So with some programming background it has given me quite a bit of an edge over my coworkers and most of the Engineering support which is a bonus. I eventually want programming to be a move to a more ""prestigious"" engineering position but not any time soon but mostly to be another hobby that I can come to enjoy and not be worried about wasting my time.

&nbsp;

As of now, I will continue to try to improve my understanding with just structuring out projects I've been holding off because my fear of inadequacy (perhaps could use a better word) and sense of being overwhelmed. I'll start with a simple electrical pocket reference and eventually make it into a GUI compatible with android and see how it goes.
 
Much thanks again guys. This is an awesome sub by the way and quite more active than I was originally anticipating.

&nbsp;

&nbsp;

&nbsp;

Edit #2 for formatting.",1579448150.0
How do you stay disciplined in learning Python?,343,efe7bm,learnpython,https://www.reddit.com/r/learnpython/comments/efe7bm/how_do_you_stay_disciplined_in_learning_python/,79,"I'm honestly curious for those of you who've stayed on track learning Python: how do you stay disciplined and consistent?

It feels like whenever I have schoolwork in the way, I can't be bothered to pick up the Automate the Boring Stuff book I've had on my shelf for nearly a few months now, or keep practicing. It's winter break now and I'm still struggling to make it a priority.",1577263309.0
[Meta] PSA: Please don't delete your 'Help me with XY' threads.,346,90zktj,learnpython,https://www.reddit.com/r/learnpython/comments/90zktj/meta_psa_please_dont_delete_your_help_me_with_xy/,27,"I sometimes see a thread with Python newbie asking a question and after getting the answer, he/she deletes the thread and doesn't even thank the commenters. Guys, you have nothing to be ashamed for, everyone was a beginner once! That's what /r/learnpython is for. If you delete your thread, not only it is rude to people who went out of their way to answer you, but you are kinda ruining it for other people who might benefit from reading the thread.

Case in point: https://www.reddit.com/r/learnpython/comments/90ya6i/why_doesnt_this_work/

/rant",1532282019.0
My 1 year journey from complete Noob to Data Analyst in big corp(can help you as a roadmap),343,xse2px,learnpython,https://www.reddit.com/r/learnpython/comments/xse2px/my_1_year_journey_from_complete_noob_to_data/,35,"Hello,

id like this to be a kind of a  roadmap for anyone on learning journey. Ill try to go thoroughly through this, but short. Ill also bold up important info if you want to skim through text.

Background:

31 year old.  Finished economy(Finance Major) and worked on a non fullfiling job that i hated. Wanted a change, had a lot of spare time on work which i fully used into studying. Living in country with bad economy. My pc knowledge came from...well...what you get to know from gaming. I also always knew very well hardware, building PCs, all the little caveats about it etc. But I never even touched any kind of coding, or even learned about it. 

&#x200B;

Ive studied 8-16hours a day. About 5 hours of study on job and, depending on obligations / weekend/wifes workshifts and taking care of our small baby back then, id study 4 - 8 more hours afterwork, while doing 16hrs a day on weekends. (mad respect to wife for giving me all the time)

First days i researched what i want to learn. First though was SQL but i quickly found out i need something bigger. I basically didnt know anything at all about languages and programming, not even what a front end and back end is. So after research i decided its going to be Python. I installed it, installed pycharm, turned on a 6h **youtube video** from **Mosh** and started learning. I fell in love and the interest in me grew to a maximum level. Finished that video in 2 days(not whole because later he goes into machine learning,which isnt really beginner lvl).

Ive learned **basic stuff, basic synstax, data types and methods to use with them. math operations and comparisons, if statements, loops.** I very well immediatelly understood everything i went through.

3rd day i made a **stickman game** and studied a bit more

4th day i made a **labirinth game**. A basic printed out in terminal and you input commands where to go(an IT colleague gave me the idea when he said it was as far as he went in programming). It was working without bugs and errors, nicely coded **with lists of lists**.

These two little projects taught me soo much. Ive learned more than from any source i couldve taken to study. **I quickly learned doing projects and biting onto way harder things than i though i would even know anytime soon  would be the best way to study for myself**. **It included looots of googling, stack overflow and youtube, rather than following simple things on youtube tutorials.**

Ive then **read a 200 page python beginner script** my cousing gave me from his Uni, it took me 3 days to follow it with code.

Ive learned the basic stuff in more detail, including **functions**, and ive read about **classes** but i just didnt understand them....and i actually didnt understand classes fully for a very long time.

Then on day 7 i started working on a **text based rpg** , but without class knowledge i didnt advance too far, maybe after a week i ditched it. I did learn alot about **dictionaryes, json files, storing data, using multiple files for projects etc.** In meantime i also learned alot about **virtual environments and how to use them.**

Then i read **automate the boring stuff,** and watched the video on it, which took me a couple of days, then i read about 300 pages of **Learning python**, just the parts that explain **what happens in background of python and how it interacts with hardware, how it runs on C, why its slow, what makes it a dynamically typed language etc.** Didnt do any coding, just read those days. Ive also watched some youtube videos in that time, trying to get an idea what to work on, something large and complicated, not just a small coding challenge.

On day 30 i got an idea and started working on **scraper** for all the airsoft sites and idea was to make a web page with price comparisons. Ive done this for more than 30 days, then realizing there was a page that was just recently created doing the same thing. During this time i also went through Udemy course on **html/css** and stopped when i went through **JS** basics. All of this together improved my **scraping(requests, bs4 and selenium)** skills drastically, basically becoming really great in that field. Ive also done alot of **pandas**, learned from youtube videos,  and **regex**, learning alot about data bases and data manipulation, but **pandas** didnt really sit there that well yet.

After that i went into **creating a software that connects to Dota api**(**game state integrator**). Its basically an api that lets you read real time dota info from matches, like score, player stats, player positions etc. Ive tried making a software that reads player positions and creates heatmaps of where the kills and ward drops happen. Learned alot about **sockets, numpy and matplotlib**. I remmember trying to first write down an matrix of 16000x16000(size of dota2 grid) and increment values for the position where kills and wards happen quickly learning thats way too much memory. Then i learned about numpy arrays. I also included UI for this software, so i learned alot about **tkinter** and **threading**.  This was also first time i understood **classes**, but was not yet 100% on them.

Afterwards i went onto biggest project for me, which was also connected to dota.  I could write about it for couple of pages, so ill try to keep it as short as possible. It included lots of **multiprocessing, piping data, lock keys, open CV and pretty neat algorithms**. **It detected in parallel video and static picture ads on multiple streams across the monitor, which were automatically opened and rearranged on screen, from multiple stream providers, all packed with a simple UI in tkinter.** Ive never finished it, but i did 90% of the project. I only had to do data processing and all the automatic statistics calculations on the data it collects, but after 2 and a half months of whole days work, i burned out completely. I wrote over 8000 lines of code , multiple files, lots of googling and learned SO MUCH. Then a new game came out which i wanted to play for a long time and decides to take a break for like 3 months.

I slowly built up will power to continue studying by the end of the year(around 6-7 months since beginning). I feared i wont be able to continue, that im completely burned out. but i started researching machine learning a bit more, watching youtube videos etc. I havent touched any code , anything at all for 3 months total at that time. I decided id start from january 1. again for real, and i actually did.

Started off with a fat **math book**. **Linear algebra, calculus, markov chains, all the stuff needed for machine learning**. I did study most of this through Uni, but i completely forgot it, since i havent touched math for more than 6 years. After exactly 30 days of studying that book for 8 hours a day, i was done and went with a book on **machine learning by Sendtex**. It was marvelous and taught me alot. Thats first time after 4 months i coded. After 2 weeks on that book, i went with multiple youtube videos from **Dr. Phil on youtube, sendtex, deeplizard** etc. Then i fell in love with auto pilot cars and started watching some courses about **self driving cars from Tubing university**.

Then i decided i want to make a **self driving car in Carla simulator**.

I had multiple attempts at creating an **deep determenistic policy gradient AI** for a car driving on a 80x80 pixel camera and having a lidar, that had values also shown on camera through focal lens equations but it never learned anything. Then i created another environment with a car that has Lidar and Semantic camera, and all the data from semantic camera and lidar was shown in birdseye view. The AI also didnt learn anything in that environment, but the code that went into creating it was very heavy on numpy and math, and its the code im proudest of. This is first time i learned more advanced class stuff aswell.

In the end i created a simple parking bot, with 8 distance sensors and it actually worked. Thats first time i actually understood some more important principles about the neural networks i was working on. This whole project was also big on object oriented programming and i kinda ""cemented"" my knowledge on it by now. 

in meantime i made a smaller CSGO GSI program(basically same thing as for dota), but this one gathered all the data about the games and organized it in **pandas**, didnt finish visualization with **matplotlib**. I did this project just to thoroughly learn pandas(i did use it alot before but never knew it without too much googling), after thoroughly learning numpy through carla simulator. I cant say im that good with matplot. I also dont remmember when i learned basics of **SQL**, but i kinda went through that in 2 days and found it simple. Never went into advanced stuff. I also dont remmember when i learned basics of **linux** and used it a bit. Before i landed job, i installed **conda** and learned how to use it instead of pip and default venvs. I also read a book on scraping, python data science handbook and some other books i cant remmember now.

There were also nuuumerous other things i cant remmember, that i watched on youtube, read on reddit, done codes on codewars etc. If i didnt work on a project, i was reading something or watching something about python.

&#x200B;

At about that time i landed a job as a data analyst. I will continue my study, especially on machine learning and AI field. In the end i want to be a data scientist. Currently im having a break from that and decided to build a bit more advanced discord bot, because i wanted a project with Async. Its in the work for like 10 days now and will take probably much more time. After that plan is to return to the beginnings of machine learning and statistics , and relearn it all from scratch, now when i understand it all much better.

&#x200B;

I guess the end :).

If youve read this far, thank you. I hope it will help someone or maybe motivate you. After years of semi depression because of unfullfilling jobs, im finally happy with what im working. Initially i never though it would take me just a year to turn over my life, but it comes fast. So even if you think it will take you longer, just keep studying. Doing nothing certainly wont do any change. The one thought that always kept me motivated : An hour of study is an hour closer to my goal. I kind of never looked too far, just an hour by hour. Each hour of work means i stacked more knowledge in my head. Each solved error and bug means i made major step towards my goal.

Good luck in your study!

Edit:also forgot an important thing. When you get some good knowledge, read a book on data types. I suggest for begginer level a simple book with awesome handmade drawings made by grokking. Then i just skimmed through some more detailed book(i dont know name)",1664575654.0
I am a proficient Python coder whose learning has plateaued. Any really useful libraries I should look into learning? Taking recommendations.,344,ms46zz,learnpython,https://www.reddit.com/r/learnpython/comments/ms46zz/i_am_a_proficient_python_coder_whose_learning_has/,113,"Machine learning engineer here. I love learning Python, but I'm already quite proficient, so my learning has plateaued lately. I can pretty much do whatever I need to without difficulty.

That said, Python is vast. It's totally possible that there are great tools out there which could help me improve further, and I've just never heard of them. For example, I used to think I'd seen it all, then I learned about `itertools`, and that was a game-changer. It helped me greatly simplify code that I had originally thought was as simple as it could get. It was exhilarating.

So what I'm looking for are things like that, general purpose utilities that can help keep code clean and efficient, and/or provide ready-made objects for common operations. Nice little nuggets like `itertools.groupby`, or `functools.reduce`, or `collections.namedtuple`. Why write some convoluted function to tally the elements in an array when `collections.Counter` does it for you in one line? Why spell out an item-getting operation explicitly every time when I could just use `operator.itemgetter` to define it in one place and use that everywhere else? Little niceties like these can improve your code a lot but have to be discovered, and I just feel like I haven't discovered any in a long time.

Non-niche (meaning non-ML-specific) libraries I already use very often include:

- argparse

- collections

- itertools

- json

- logging / loguru

- matplotlib

- numpy

- pandas

- pathlib

- random

- re

- sys

... there are doubtless others, but that's all I can think of for now. Am I missing any major players? Bonus point if they're already in the standard library!

Edit: If you can also provide a short one-liner about what each package does/is for/how you use it/why you're including it/etc., rather than just a bulleted list of package names, that would be extra useful in helping me to prioritize. Thanks again guys, this is great, keep 'em coming!",1618582904.0
"For any programming language, how far can you go by just knowing the basics? How more advanced does it get?",346,iuhao3,learnpython,https://www.reddit.com/r/learnpython/comments/iuhao3/for_any_programming_language_how_far_can_you_go/,114,"So I’ve had a bit of experience using JavaScript as I worked as a web developer for experience. I didn’t go too far into it before I left and got a new job where I learn Python now. But what I’ve realised is, all the languages of course do all the basic foundations like arithmetic, lists, loops. And I was wondering, how much further on in terms of learning does it go? Because I found in my web developer role that most of my tasks were solved by just using these basics they teach you at the start. And the only “advancedness” of it was just how creatively you could think about how to manipulate the code to solve your problem. 

Is this really all there is and any new code you learn is really just a step forward in these basics? Or is it a whole new area that I’ve not even scratched the surface of yet?",1600340700.0
"Hi, can you guys suggest me any platform where I can practice various problem starting from beginner level loop, functions, classes?",347,kbk4yk,learnpython,https://www.reddit.com/r/learnpython/comments/kbk4yk/hi_can_you_guys_suggest_me_any_platform_where_i/,72,"It would be really helpful, I know hackathon is great way to learn but would be a bit overkill given my knowledge with this language, it's been 2 months since I've started learning but I still feel there is a lot of gaps in my learning which I want to reduce by practicing.

Edit: Guys, Thanks for such a great response. This is actually the best sub I know of, you guys are gem. I was losing hope of doing good with python but you have overwhelmed and motivated me. I am starting some of these links

I am sharing the summary of all the links you could get started with:

[https://edabit.com/](https://edabit.com/) \- Intermediate

[www.codewars.com-](http://www.codewars.com-/) Bit advanced

[hackerrank.com](https://hackerrank.com/)\- Advanced

[https://leetcode.com/-](https://leetcode.com/-) Advanced

[https://runestone.academy/runestone/static/fopp/index.html-](https://runestone.academy/runestone/static/fopp/index.html-) Intermediate

[https://csmastersuh.github.io/data\_analysis\_with\_python\_2020/](https://csmastersuh.github.io/data_analysis_with_python_2020/)

[https://www.py4e.com](https://www.py4e.com/)

[https://www.pythonmorsels.com/accounts/signup/](https://www.pythonmorsels.com/accounts/signup/)

[https://cscircles.cemc.uwaterloo.ca/](https://cscircles.cemc.uwaterloo.ca/)

[https://projecteuler.net/](https://projecteuler.net/)

[checkio.org](https://checkio.org/)

[www.Codingbat.com-](http://www.codingbat.com-/) Medium

[https://codingame.com](https://codingame.com/)",1607753710.0
Discovered that I really like Python. What should I do next?,344,gi10mb,learnpython,https://www.reddit.com/r/learnpython/comments/gi10mb/discovered_that_i_really_like_python_what_should/,151,"Long story short, I've been learning web development for a while, and kept getting tripped up by JavaScript. I keep getting to a point with JS where I start thinking that programming just might not be for me. But then I came across At Sweigart's 'Automate the Boring Stuff' Udemy course, and I'm halfway through and REALLY ENJOYING IT.

Python makes a long more sense to me than JS, and while I always thought I'd be wanting to get into front-end development, I'm wondering if this is more suited to me.

SO my question is, where should I go from here? I'd love to hear your suggestions for books, other courses, resources to look into once I'm done with this course, or any websites you like that have projects where I can practice my Python coding. This might be a ridiculous question, but what do you actually... do... with Python?! I wanna do stuff! :)

&#x200B;

EDIT: WOAH this thread blew up, thank you all SO MUCH!!! I'm so grateful for everyone's suggestions and links. I've saved lots of bookmarks and now I have lots more things to consider when this course is done. I really appreciate all the support, and I look forward to spending more time in this sub while adventuring in Python!",1589246269.0
Made a YouTube downloader that can download intervals of a video,340,fekwh0,learnpython,https://www.reddit.com/r/learnpython/comments/fekwh0/made_a_youtube_downloader_that_can_download/,51,"Hi all

This is my first real project that I did. I made the program to help my friend in his workplace. He would have to parse text for YouTube links and intervals (and jpgs), download the whole video, trim it and repeat for the 3-5 others that day. This program accomplishes all of that and can also download full length videos (don't supply a valid interval). The frontend is build using flask.

All you need to get it to work is download, install the dependencies, install ffmpeg and then run the webserver.

[Link to code on GitHub](https://github.com/DinRigtigeFar/yt-interval)

If you have any constructive criticism or ideas for future features please don't hold back.",1583531471.0
"Okay, now I know how to create graphs and do data analysis in Python. Now I want to know how are these things usually applied IRL in Data Analytics jobs?",338,jesnw7,learnpython,https://www.reddit.com/r/learnpython/comments/jesnw7/okay_now_i_know_how_to_create_graphs_and_do_data/,54,"I dedicated my last week learning about data viz in python. I used and learned matplotlib, seaborn, pyplot for creating graphs and doing data analyses using pandas.

My question is how are these things usually applied in Data Analysts job? Do they just create 1 python script per graph? Do they make functions for different types of graphs and export it on their presentations?

I'm asking because I've been in the reports development field for the past 5 years but sadly I've been only using pure SQL for data processing, SSIS/Informatica for ETL, then SSRS for reports and Excel for graphs.

i've never applied python on these apart from some automations here and there. I hope I can get feedback from people who worked in Data Analytics positions before and tell me how are these things applied in their day to day job.

Thank you!",1603210350.0
Is it okay to google if you're stuck in a problem?,345,e1e5xz,learnpython,https://www.reddit.com/r/learnpython/comments/e1e5xz/is_it_okay_to_google_if_youre_stuck_in_a_problem/,163,I have a habit of Googling every problem *After trying to do it myself* but I do it for the concepts and to get the logic not just copy paste.. what's on your experience how to tackle problems in coding if you're stuck in it?,1574677376.0
My first Python project: command line application that copies all files with given extension from a directory and its subfolders to another directory showing progress bar and remaining files counter.,340,bv5etg,learnpython,https://www.reddit.com/r/learnpython/comments/bv5etg/my_first_python_project_command_line_application/,47,"This project was inspired by the task from [Chapter 9 of Automate the Boring Stuff](https://automatetheboringstuff.com/chapter9/) but I tried to push it a little bit further by adding a possibility of preservation source folder structure, log creation, progress bar, remaining files counter and command line interface.

[Here is my code on GitHub.](https://github.com/pltnk/selective_copy/blob/a8cb0d3b5464cb0559cd409dc1803294ce601fa2/selective_copy.py)

 I am new to programming and GitHub, so any feedback either on the code itself or design of README.md and so on is highly appreciated!",1559295096.0
What do you even code?,343,11y2lh5,learnpython,https://www.reddit.com/r/learnpython/comments/11y2lh5/what_do_you_even_code/,107,"I am a beginner to python and all coding. I don't know much. All the recommendations are ""code everyday"". Practice every day is great but what do I practice? Do I open up an empty IDE and code what? I don't know how to do any projects on my own. Do I just YouTube crap and copy them or what? What do I actually code?",1679449304.0
"CodeAcademy isn't free whatsoever. Why does it say ""learn for free?""",339,wmn120,learnpython,https://www.reddit.com/r/learnpython/comments/wmn120/codeacademy_isnt_free_whatsoever_why_does_it_say/,121,You get literally one lesson that teaches you how to say hello world. Why the hell is it plastered everywhere on the site and in articles that it's free? I'm sure not paying now.,1660315481.0
Python : is it the most enjoyable language?,337,iyd8fe,learnpython,https://www.reddit.com/r/learnpython/comments/iyd8fe/python_is_it_the_most_enjoyable_language/,167,"very subjective and opinion driven question but in your opinion what is the most enjoyable programming langauge, I've been programming in C++ for about 3 years now. From what I have observed, people say python allows you to think more freely especially with not being bogged down with features such as a language like Java or C++ does. So I'm thinking of learning Python as a second language, is Python the most enjoyable language you have programmed in?",1600877850.0
Why do people use .format() method when f string literal exists?,338,hjegkc,learnpython,https://www.reddit.com/r/learnpython/comments/hjegkc/why_do_people_use_format_method_when_f_string/,102,"Hello all,

I seem to encounter a lot of documentation and tutorials that use .format() method instead of f string literals.

Personally,

    print(""I can't seem to {} of a {} why someone {} {} {}"".format('think', 'reason', 'would', 'prefer', 'this'))

versus

    easily = ""easily""
    sentence = ""sentence""
    this = ""this""
    print(f""A much more {easily} readable {sentence} such as {this}"")

F string literal is always much easier to decipher and thus avoid errors.

Perhaps there's some benefit of .format() that I'm unaware of. Googling hasn't brought up much on the debate.

Cheers!",1593623574.0
Why didn't I learn this sooner?!,337,10wjmpu,learnpython,https://www.reddit.com/r/learnpython/comments/10wjmpu/why_didnt_i_learn_this_sooner/,88,"I started learning Python a few months ago and I feel like I'm still very much a beginner. However, I want to learn about front-end stuff so I'm gonna be starting the Odin Project this week.

To keep my Python sharp as I switch gears, I've decided to try and speed run the [official Python tutorial](https://docs.python.org/3/tutorial/index.html). I figured I'd get through a lot of the beginning sections quickly, but, holy crap, I'm already learning such neat and easy features of the language!

So this made me think: **what topics do you feel you learned way too late**? I'll give my two examples to start:

- *[The enumerate method](https://docs.python.org/3/library/functions.html#enumerate)*: Seems super useful for looping over iterables which may contain duplicates values.

- *[Else clauses on loops](https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops)*: Too many times I used and abused Booleans to decide if a loop had terminated or not, but no more!

Put your examples, whether they're beginner level like mine or more advanced, below!",1675820237.0
How can I safely web scrape and not get blocked/banned/blacklisted?,332,kwhlrj,learnpython,https://www.reddit.com/r/learnpython/comments/kwhlrj/how_can_i_safely_web_scrape_and_not_get/,75,"I attempted to re-create a web scrape using the example in the Automate the Boring Stuff Udemy video, which scrapes Amazon, and I got an error. 

In another thread, I was informed about ""User Agents"", and how apparently Amazon doesn't like mine. I don't recall the concept of user agents being mentioned during the tutorial. It definitely wasn't part of the web scrape video. 

If you don't have a programming background, learning these kinds of things ""after the fact"" can be frustrating. 

1. Are there resources that I should consider using that might help with certain fundamental Python concepts that tutorials may not cover? Perhaps my understanding or expectations of learning code is unrealistic, however I was thinking that any video or learning material should exactly be able to be replicated as is. 

2. Is there a way to know who might block/ban you for not using an appropriate user agent/header? 

I read that Amazon blacklists accounts that web scrape, and I can't imagine how people would even know this. 

As I experiment, I don't want to compromise my ability to shop or access information because I violated a rule that I didn't even know about. 

I was hoping to experiment with web scraping to track prices for retailers also. Not a complex project or anything, but I would like to write programs to see if I could keep pace with prices from time to time without risk of being blocked.",1610548549.0
Can anyone explain why we use Python,336,hhjykd,learnpython,https://www.reddit.com/r/learnpython/comments/hhjykd/can_anyone_explain_why_we_use_python/,121,"I keep reading people say things like ‘because Python is built on C’ and ‘Python is much slower than C++ or Go’, ‘Thats why those languages are used to make most popular games’. I also see people refer to Python as a ‘machine’ language, etc etc. So... why use python then if you can do things faster with another language? And why is Python so popular if this is the case?  Seems like python is easier to understand for me at least and much easier to read, but is there some other benefit I’m not understanding? Sorry if this had been asked before, I can’t find any direct comparison information between Python and other languages.

EDIT: Thanks everyone! I feel a much better understanding of why python is fast in a different way from other languages, saving programming time rather than computing time. Definitely got the answers I was looking for.

Another edit: Great insights all around. Thanks to everyone taking the time to answer! Looks like I need to do some more research on Cython as I see a few people mentioning it for when speed is required.",1593370225.0
How to approach Automate the Boring Stuff?,333,hduh6k,learnpython,https://www.reddit.com/r/learnpython/comments/hduh6k/how_to_approach_automate_the_boring_stuff/,61,"Hi all,

I have been using all the extra time we have at the moment to start studying Python (no previous coding experience). I tried Codecademy for awhile, alongside a few Youtube tutorials - but after seeing it recommended so much on this sub started working my way through the ATBS book. I'm really enjoying it so far; it feels like it's sticking a lot more than the other avenues I had tried before!

I was just wondering if it is the sort of text I should work through from start to finish, or if after covering some of the introductory chapters I should jump into the later sections and begin working on some usable projects? For those that aren't familiar with the text, you can find it [here](https://automatetheboringstuff.com/#toc).

I'm not sure it's worth mentioning, but I am currently making my way through chapter 3. Fortunately, I am still able to do my job from home, so have been squeezing in time for learning early in the mornings or on my lunch breaks.",1592839904.0
Just wanted to thank this community,335,gcyxoq,learnpython,https://www.reddit.com/r/learnpython/comments/gcyxoq/just_wanted_to_thank_this_community/,29,"Not long ago I decided to start learning Python and I had no idea or programming background. I found this subreddit and start digging it. Again short time ago I posted some threads they look little bit silly when I look them now. For example:

[Me when I had no idea about programming](https://www.reddit.com/r/learnpython/comments/emv9c6/is_it_possible_to_be_selftaught_for_an_absolute/)

&#x200B;

From there I followed your recommendations and started with 'Automate the Boring Stuff with Python',  I have to admit, sometimes I felt like giving up but managed to hang around and finished it. Then I had silly question again: What to do from here? Then I came up with this topic:

&#x200B;

[Me when I had almost no idea about data science](https://www.reddit.com/r/learnpython/comments/f0u0q8/almost_finished_automate_the_boring_stuff_with/)

&#x200B;

Again your recommendations gave me new vision. From the replies I created an updated road map. Took some courses about data science (things like pandas, numpy, matplotlib etc.). And again from recommendations I start digging Kaggle, the little I know! At that point I didn't know much, I had theoretical knowledge but I suck at practice. I kept doing some online tutorials while applying my skills to my own projects whenever I learn something new. My projects were like about the games I play; gathering some data about game and trying to find overpowered combinations etc.(Sorry for that, fellow gamers!)

&#x200B;

Finally I felt like I can dig the Kaggle again, this time what I had in my bag was some machine learning libraries like sklearn etc. Then I start doing my own projects there, they were(and they still) far from perfect, but I learned a lot on the way. 

I feel like I'm still a beginner and it's not bothering me anymore, there is so much to learn! I'm already reading about topics like deep learning, neural networks etc. At the same time still learning a lot about the topics I already moved on, reading books and articles about the packages I'm already using and applying them on my old projects is really helping. I still feel overwhelmed time to time, but as I said trying to hang around.

At the end I wanted to thank you for replying my silly questions and giving me inspiration, this is a really helpful community!",1588542436.0
Advent of Code (AoC) 2019 starts today!,336,e4toc2,learnpython,https://www.reddit.com/r/learnpython/comments/e4toc2/advent_of_code_aoc_2019_starts_today/,41,"https://adventofcode.com/

Advent of Code is an Advent calendar of small programming puzzles for a variety of skill sets and skill levels that can be solved in any programming language you like.

These puzzles are a great way to practice your Python and problem solving skills.

Edit: added description from AoC site.",1575261066.0
Holy shit is QT Designer useful,333,dupy23,learnpython,https://www.reddit.com/r/learnpython/comments/dupy23/holy_shit_is_qt_designer_useful/,49,I love to do UI design. I love to make UIs. And I like to add functionality to things. Thats literally what I can do now. Why did I not know about this sooner. Like a weekend long project could be done in a day or so. Just wanted to come here to express my love for this wonderful program,1573463700.0
Just wrote my first real Regex's for Advent of Code Day 4,333,k6thb1,learnpython,https://www.reddit.com/r/learnpython/comments/k6thb1/just_wrote_my_first_real_regexs_for_advent_of/,35,"I can identify whether a string is 9 numbers in a row. I am a god and can bend computers to my will.  
For real though, it feels amazing to have written something that looks like gibberish but actually works, even if it's actually pretty simple. Now I don't have to mess around with 30 nestled if statements and .split() statements. Regex's are pure magic.",1607115675.0
Can you advise good online courses for getting better in code structure?,336,msnfro,learnpython,https://www.reddit.com/r/learnpython/comments/msnfro/can_you_advise_good_online_courses_for_getting/,25,"Good day. 
I’m a junior Python developer, and I try my best to get better. 
Python is quite simple to start (compared to C++ or so), and now I’m at the point where I’ve already got basic knowledge, and want to develop my code structure skills.
I mean, I would want to comprehend **how to split** your code correctly, which patterns is better to use, so that it can be scalable and I wouldn’t be ashamed to show it to experienced programmers.
So I hope you can advise me some online courses (or anything) associated with this, or just any advise for me at this point will be appreciated :)",1618650478.0
How to read/understand a git repository?,335,ig5exf,learnpython,https://www.reddit.com/r/learnpython/comments/ig5exf/how_to_readunderstand_a_git_repository/,13,"I'm trying to learn how to make a python programs by looking through existing programs in a similar premise as what I'd like to achieve (learning by looking at examples). But one thing I'm having difficulty with is finding out how these github repos are organized.

So far ([in the repo I have I'm viewing](https://github.com/qtile/qtile)) I know that `bin` usually means terminal/command-line commands, `docs` is typically documentation (as one might expect), `test` is self explanatory, but some things I don't know is `rpm` and `stubs`, amongst others.

Is there a resource to learn how python/git programs are organized? And what to expect when looking through repos?",1598330222.0
"Milestone - 1,000 lines of code - TU r/learnpython!",332,k1yd6u,learnpython,https://www.reddit.com/r/learnpython/comments/k1yd6u/milestone_1000_lines_of_code_tu_rlearnpython/,48,"Hi friends,

Just wanted to tell you all that I reached my first 1,000 lines of Python code (wanted to show a pic, but not allowed). I'm going through the book Python Crash Course, 2nd edition and doing all the exercises and some of the examples. Strongly recommend this resource, as so many others already have done. Also, I want to say a huge thank you to this community! I wouldn't have come this far without you <3",1606470746.0
I can’t seem to “think like a programmer”,335,ifcbsv,learnpython,https://www.reddit.com/r/learnpython/comments/ifcbsv/i_cant_seem_to_think_like_a_programmer/,86,"Been learning python for about two months. Read a few books. I can now do every single exercise in python crash course without referencing the book and have even tweaked many of the exercise programs. But I’m beginning to feel that “imposter syndrome” I keep hearing about. 

The problem I’m having is when it comes to breaking down a problem into single step by step problems. Even making a tic tax toe game is a little difficult for me right now. 

From my own learning and research I’ve come to realize I may need to learn more on algorithms. 

From what I understand an algorithm is simply a step by step series of instructions to solve a problem. That’s at least the best way I can sum up the idea in my head. Is this correct? I’m sure there’s more to it than that. Forgive my ignorance. Trying to teach myself everything in quarantine with. I experience. 

If I’m correct in my understanding of algorithms and pinpointing what area I need to hone next, can anyone recommend any good books or even videos that can help me overcome this problem and get better at being able to break a complex idea or problem down or have a better understanding of algorithms. 

Please try to keep in mind I am a beginner when recommending books. I have a solid foundation of the basic fundamentals of python. Lists, dicta, loops, classes and the like but am trying to figure out how to use and apply that knowledge better.",1598220123.0
Windows defender thinks that code I wrote using python 3.8.5 and converted to .exe file using pyinstaller is a virus.,330,im3jrj,learnpython,https://www.reddit.com/r/learnpython/comments/im3jrj/windows_defender_thinks_that_code_i_wrote_using/,57,"I wrote a small program that I plan to use on school computers that gives me information about elements and common polyatomic ions using python 3.8.5. I converted the .py file into a single .exe file for windows 10 using the command `pyinstaller --onefile ""``MyCode.py``""`. However, when I go to the folder where pyinstaller placed the .exe file, windows defender looks at my .exe file, thinks it is a Trojan and immediately quarantines it placing it into a folder to which I do not have any access to without my approval. The .py file does not contain any viruses. How can I convert the python script into a .exe file so that windows defender does not think that the .exe file is a virus without doing anything to windows defender (as I plan to use it on school computers)? `pyinstaller --onedir ""MyCode.py""` works, but it is not what I want because the .exe file requires python to run. 

OS: windows 10 (home and school)

Pyinstaller version: latest stable as of Sept 2, 2020.

Python version: 3.8.5 64-bit",1599171470.0
Do you know any GitHub Users who write really good Python Codes so I can read & learn from their code?,331,ikm04u,learnpython,https://www.reddit.com/r/learnpython/comments/ikm04u/do_you_know_any_github_users_who_write_really/,57,"Hey I am a Beginner in Python and I would like to check out projects on Github so I can learn from their code. Specifically, I look for people who are advanced in Python so I can trust their competence. I hope you have some great recommendations.",1598972962.0
"""Learn You Some Code"" Humble Bundle is out! Get Python (and other) ebooks for $1 while helping charities.",334,9il0x4,learnpython,https://www.reddit.com/r/learnpython/comments/9il0x4/learn_you_some_code_humble_bundle_is_out_get/,45,"https://www.humblebundle.com/books/learn-you-some-code-books

Books at each tier:

$1 or more:

* Automate the Boring Stuff with Python
* The Linux Command Line
* The Book of F#
* Learn Java the Easy Way
* Perl One-Liners
* No Starch Sampler

$8 or more

* Ruby Under a Microscope
* Learn You Some Erlang for Great Good!
* Learn You A Haskell for Great Good!
* Clojure for the Brave and True
* Land of Lisp: Learn to Program in Lisp, One Game at a Time!

$15 or more:

* Python Crash Course: A Hands-On, Project-Based Introduction to Programming
* Python Playground: Geeky Projects for the Curious Programmer
* Think Like a Programmer
* The Book of R
* Wicked Cool Shell Scripts

For $15 you get ALL of these books while helping code.org teach kids to program!
",1537817440.0
Best projects for a beginner to learn and develop Python skills?,333,11ceino,learnpython,https://www.reddit.com/r/learnpython/comments/11ceino/best_projects_for_a_beginner_to_learn_and_develop/,63,"I’ve been on and off programming for several years, but have recently decided to pursue programming wholly starting with Python. So I decided it was best to ask the community here what you all would recommend as some starting projects from a beginner to intermediate level that would be great for learning and developing Python skills?",1677411491.0
NOT A QUESTION ... just a thank you!,326,m838g8,learnpython,https://www.reddit.com/r/learnpython/comments/m838g8/not_a_question_just_a_thank_you/,12,"I just want to take some time to give a thanks to all the people who take time out of their day to help others learn and better themselves. Huge thank you to the people who answer questions on here!

Felt like it had to be said.",1616108601.0
What are some of the projects I can start working on while learning the basics of Python?,332,exese6,learnpython,https://www.reddit.com/r/learnpython/comments/exese6/what_are_some_of_the_projects_i_can_start_working/,91,"I want to learn and practice at the same time and I couldn't find a good idea to start coding a program and adding advanced things as I learn more ... Do you have any idea what I can do? 

It has to be a program that starts simple and becomes slowly more difficult",1580600198.0
Data analysis for beginners,327,k2wqxg,learnpython,https://www.reddit.com/r/learnpython/comments/k2wqxg/data_analysis_for_beginners/,35,"Hi all,

What would you recommend as the best route to start learning towards data analysis with Python (I will add that I'm not planning on becoming data analyst/scientist within few months or so - I started learning Python 4 months ago, got the basics, not interested in building websites, creating games, but I would like to explore data; I also already started learning SQL 2 months ago. Really taking it easy and want to see where it all leads to, but extremely happy that I'm learning new skill).

Should I start with Matplotlib? Or Numpy? Or Pandas?

Any other tips or recommendations?

Thank you for your answers in advance!",1606601174.0
"Made a script that tweets out COVID-19 cases in schools in Ontario, Canada with charts",331,jl25qw,learnpython,https://www.reddit.com/r/learnpython/comments/jl25qw/made_a_script_that_tweets_out_covid19_cases_in/,40,"Hey guys. I made a Python script that formats and tweets out data regarding how many cases of COVID-19 are being reported for the day in schools in Ontario, Canada according to the Ministry of Education here. I used the Ministry's data API to retrieve the data and then used the Tweepy library and Twitter API to format and publish the tweet. My goal is to automate the process so that it can be tweeted automatically at 10:30 AM every weekday but the ministry is sometimes inconsistent with their publishing of the data.

Here is an example of the tweet:  [https://twitter.com/ONTSchoolCovid/status/1322197560082182144?s=20](https://twitter.com/ONTSchoolCovid/status/1322197560082182144?s=20)

I also used the Plotly library to take the same data and create 2 line charts - one for new daily cases and one for total cases.

Here is an example of the tweet with charts:  [https://twitter.com/ONTSchoolCovid/status/1322223014394683392?s=20](https://twitter.com/ONTSchoolCovid/status/1322223014394683392?s=20)

The account is dedicated to tweeting out information and making comments regarding how the provincial government is acting regarding the issue of cases in schools. I don't believe the government is doing as good of a job as they could be and I'm glad that I can use the skills I've learned from this subreddit and the sources posted here to share data that many people may not see.

I wanted to do this after speaking to parents who were just unsure about what to do given the choice of keeping their kids home vs sending them to school. I want parents and school staff to be aware of how many cases are being reported in school so they can make their own decisions.

I had to make this new reddit account because I'm already getting hate in my replies and didn't want to attach this project to my actual reddit account lol.

Let me know what you guys think and if there's anything you think I can do to improve the data formatting and the entire process.

And if you live in Ontario, consider following me to stay up to date with the numbers!

&#x200B;

Edit: Got some requests for the source code so here's the github link [https://github.com/ontschoolscovid/SchoolsCovidData](https://github.com/ontschoolscovid/SchoolsCovidData)",1604082041.0
What's the difference between != and is not?,325,fwhcas,learnpython,https://www.reddit.com/r/learnpython/comments/fwhcas/whats_the_difference_between_and_is_not/,122,"If I say 
```
if x != 5;
   print(x)
```
and

```
if x is not 5;
   print(x)
```
is there a difference?",1586250734.0
Today I started writing my first API call using Python and I've never felt more energized.,332,cmz3ui,learnpython,https://www.reddit.com/r/learnpython/comments/cmz3ui/today_i_started_writing_my_first_api_call_using/,27,"I've had Python on my radar for about a year and a half, but I've had so much other stuff to learn as well - database design, ETL fundamentals, statistics, etc. Because of that, I haven't given it much attention until I started my new job a few months ago. So far I've only been able to dedicate a few hours a week to learning and building out small scripts. I just finished going through Automate the Boring Stuff this week after getting through most of Jose Portilla's Python bootcamp. 

My clients use a digital survey platform that's really tedious to get data out of. The platform has a public API and an FTP protocol, but I knew that automating API requests would be the better way to go. In the past, I've used APIs via different BI platform UIs that helped you generate scripts, but I've never written the script myself. 

Today, I started my first big project. I'm generating the API call, parsing the JSON, and dumping the data into a csv (eventually I will send this directly to a MySQL database) all with Python. The best part is that I'm writing it all myself - much to my chagrin (or benefit?), I couldn't find any prewritten scripts. 

I'm so grateful for this community that's constantly encouraging and supportive of itself. I'm still working through the script but I'd be happy to share it for a review once I get it on my (currently empty) Github assuming I'm allowed to put it up.",1565140191.0
Just got promoted from sales assistant to programmer!,329,kforoq,learnpython,https://www.reddit.com/r/learnpython/comments/kforoq/just_got_promoted_from_sales_assistant_to/,19,"I started learning Python during quarantine (I learned C as a teenager 15 years ago, so I had a bit of a running start) since I had so much down time. Pretty quickly I spotted an opportunity for a new product that I took from conception to deployment in 4 months! The public launch went AWESOME and our clients love it so today, two weeks after launch they formally promoted me to programming full time and gave me a 20% raise. Woohoo! Thanks for all the help along the way.",1608310336.0
I finished 2 tutorials about python and now I'm getting nowhere wasting a lot of time,327,imcuvx,learnpython,https://www.reddit.com/r/learnpython/comments/imcuvx/i_finished_2_tutorials_about_python_and_now_im/,60,"i finished 'automate the boring stuff' and learnt about pygame via yt. But I don't know how to proceed.I made a modified game using pygame and solved some beginner problems online for practice. That being said i am able to solve some questions and others no matter what ,i am never able to solve some and after reading the solution i think  'why couldn't i think that, it's so simple'.This has happened far too many times .code wars seems to be a time wasted as i am not able to solve many questions. Do i need to learn more, proceed to data structures and algorithm or practice from a different source ? **I just don't know how to take the next step**. I would really appreciate some advice.
edit: thank you everyone for such an overwhelming response.",1599211575.0
Is going through an online course like “Codecademy” an appropriate way to step into the python language?,323,hwdqk5,learnpython,https://www.reddit.com/r/learnpython/comments/hwdqk5/is_going_through_an_online_course_like_codecademy/,103,"In other words, are there any more preferable methods that you guys would recommend? Cheers for the help.",1595502352.0
I made a silly game to practice using classes,330,h0dtmu,learnpython,https://www.reddit.com/r/learnpython/comments/h0dtmu/i_made_a_silly_game_to_practice_using_classes/,59,"I have been learning python for a few months, albeit slowly, because I can only do it in my free time and profession is something else. So one day I randomly decided to try making a small and silly text-based game which can be played inside Jupyter Notebook. My primary intention was to understand how to use classes. So I created a character class, a monster class, and a potion class. Then combined them into a game based on a lot of random numbers and some planned numbers.

In the game, you face a monster. You have three options, fight, run, and try befriending. If you fight, each one takes turn to strike until one is dead. The damage and health attributes are displayed on screen. Damage done is proportional to the remaining health. If you run, you lose endurance and must have higher endurance than the monster else they'll catch you. If you befriend, there's a 10% likelihood the monster will be friendly.

When you get a potion, you can take it or leave it. If you take it, there is a 50% chance it will turn out to be a trap. But damage of trap potions is lower than bonuses of actual potions.

All probabilities are based on how lucky you are. You start at 50/50 and get luckier through potions.

The game can be accessed here:  [https://colab.research.google.com/drive/1WcRTeaPwg3oRXzHH1m76r4SAaDJJkqSV](https://colab.research.google.com/drive/1WcRTeaPwg3oRXzHH1m76r4SAaDJJkqSV)

or here:  [https://github.com/gouravkr/notebooks](https://github.com/gouravkr/notebooks)

It's not something anyone would actually enjoy playing. But any feedback on the code will be highly appreciated.

*Edit:* after receiving some feedback, I changed the images to point to public URLs and reduced the number of cells to make it easier to run.",1591804774.0
r/learnpython is the Subreddit Of The Day!,323,3aa7s2,learnpython,https://www.reddit.com/r/learnpython/comments/3aa7s2/rlearnpython_is_the_subreddit_of_the_day/,12,"/r/learnpython is the subreddit of the day!!!

-----

**Do check out the article at: http://www.reddit.com/r/subredditoftheday/comments/3aa7hu/june_18th_2015_rlearnpython_help_sub_for_python/**

_____________________

Thanks a lot and do remember to check out the other subs featured! :)

Rya

edit: oops :P",1434634289.0
"I finished my first program today, after 2 weeks of learning and work.",325,xk0jqe,learnpython,https://www.reddit.com/r/learnpython/comments/xk0jqe/i_finished_my_first_program_today_after_2_weeks/,69,"I wrote a program that takes input (how many hours it took, how much parts cost, VIN, etc) and makes an invoice for auto repair. It's a bit clunky, but perfect for my shade tree car repair business that I run out of my garage. It pulls data from a config INI, and will create that ini if it's missing. It also updates the config with new information, creates a new folder for storing the output files, and creates it's own invoices with automatic (adjustable) labor hours calculations and tax calculations. It also does parts upcharge! It took me 2 weeks to build, and casually insults you if you enter wrong info. 

I don't really plan on sharing the code with anyone, mainly because it's pretty useless for an actual shop and also because it's not particularly user-friendly and will break if you start doing weird things to it, but I'll share it if anyone wants it. 


Heres a screenshot of the invoices it makes!
https://imgur.com/gallery/UFW8819


Here's the code.
https://github.com/jeepsaintchaos/python-shop-software",1663754271.0
Help me to help my wife,325,iprqbd,learnpython,https://www.reddit.com/r/learnpython/comments/iprqbd/help_me_to_help_my_wife/,115,"My wife is wanting to switch careers and has decided to take on python and learn data science. She is struggling to grasp the basics and I would like to point her to a few websites, apps, resources that will help her with a step by step on the how to and how not to. I'm learning javascript so I can't help her to much as I would like to. Hopefully I can just show her this post and she can use it to navigate to different resources. Thanks in advance.

Update. Thank you everyone. I am showing her all the comments and she is looking them up and exploring. Keep the comments coming. I have mentioned she can comment here, she may, she may not. I don't know.",1599694011.0
Example of a simple and well made Python project on Github,326,kgkhsu,learnpython,https://www.reddit.com/r/learnpython/comments/kgkhsu/example_of_a_simple_and_well_made_python_project/,52,"Hi, I'm wanting to have a look at some examples of really well made but extremely *simple* python projects in an attempt to better understand basic structure and design.  People suggest to me things like Requests or Flask...  they may be beautiful but they are way too complex for what I'm after.  

Any suggestions that come to mind?",1608426611.0
Python’s most underrated game engine for beginners,320,aibpwe,learnpython,https://www.reddit.com/r/learnpython/comments/aibpwe/pythons_most_underrated_game_engine_for_beginners/,24,"Hello,

for those of you interested in making retro games with Python and are just starting out (but know the basics) I have written up [this tutorial](http://blog.vomkonstant.in/2019/01/21/pythons-most-underrated-game-engine-for-beginners/) using the [Pyxel](https://github.com/kitao/pyxel) game engine. Mostly because I liked the engine and didn't find a single tutorial for it. Criticism welcome.

Link: http://blog.vomkonstant.in/2019/01/21/pythons-most-underrated-game-engine-for-beginners/

Cheers!",1548088127.0
I've been studying Python for ~1 year and I cannot make anything in Python.,322,xawlcq,learnpython,https://www.reddit.com/r/learnpython/comments/xawlcq/ive_been_studying_python_for_1_year_and_i_cannot/,152,"The last year, I've been learning Python from a course. Everything I've been taught I understood but now, when I boot up a compiler I simply cannot make even a 'simple' program such as a sprite that'll recognize when it'll get clicked. I simply don't know what functions to use, what modules to use and I simply can't recognize what is causing my errors. I feel like I know enough of the language to make a program but when I sit down, I know nothing and I can't.",1662835010.0
Classes in Python,319,j70h35,learnpython,https://www.reddit.com/r/learnpython/comments/j70h35/classes_in_python/,98,"Hey,

what is the best way to learn using classes in Python? Until now, I was using functions for almost every problem I had to solve, but I suppose it's more convenient to use classes when problems are more complex.

Thanks in advance!",1602108229.0
How difficult would it be to self-teach myself python? More as a hobby than a job.,325,esttgm,learnpython,https://www.reddit.com/r/learnpython/comments/esttgm/how_difficult_would_it_be_to_selfteach_myself/,127,,1579789607.0
I finished my first python project. It feels amazing!,326,t8fr9c,learnpython,https://www.reddit.com/r/learnpython/comments/t8fr9c/i_finished_my_first_python_project_it_feels/,44,"I work as an inventory analyst and I'm sure most of you in similar fields have experienced messy/ hard to use data.  I consider myself pretty proficient at excel, but I've come to realize its limitations in the past four months (drive starting in analytics).
There are a few reports that I needed to combine/perform some calculations on. I tried in excel, but it kept freezing. Over about 60,000 lines a simple A2/7 caused an unrecoverable freeze. 

I said, ""fluff it!"". I then spent all day today working on this report.  

I am now finished.

It feels really good to say that. 

Thank you all for being so helpful to this community.",1646623007.0
"Sorry if this is asked too much but, what are some good beginner projects?",320,n2o629,learnpython,https://www.reddit.com/r/learnpython/comments/n2o629/sorry_if_this_is_asked_too_much_but_what_are_some/,91,"I was just wondering because I love enjoy programming and enjoy when I figure out stuff. I'm only a student and usually have a set goal but I need more practice and want to code more things besides the book. What are some good beginner projects I could possibly do/learn?

Edit: thank you everyone so much, truly. 
All the comments have been helpful and have given me ideas I didn't have. 

I feel I have more of a direction now.",1619893578.0
Thank you to this community!,324,mrnum4,learnpython,https://www.reddit.com/r/learnpython/comments/mrnum4/thank_you_to_this_community/,24,"
Last year, I started learning python. Took a course, looked at some tutorials. When I tried to start a project, my mind just went blank. I didn’t know what to do, and I tried to do a project on my own. I was frustrated thinking “how come I can’t do anything? Is this just not meant for me?” I stopped coding again until January. Went through a book and realized that topics came much easier to me.

Then I found this subreddit, and constantly found the same advice on learning a language. Find what interests you and START A PROJECT. I found my interest and just went headfirst into the project. Looked up a couple of videos on some of the libraries I needed, looked up documentation, looked at GitHub and stack overflow. 

After a couple of weeks, I finished up the first version of my project last night. Data engineering is very interesting to me, so I coded a simple etl pipeline. I extracted information from a sports api, validated the information, and loaded the info into a SQLite database. I installed DBeaver and loaded the table into a simple database. It’s not much, but it is a very encouraging start. I’ll post the code later on, but I just wanted to say thank you so much to this community!!",1618519926.0
Started a week ago and sent my first script,319,ke7i0h,learnpython,https://www.reddit.com/r/learnpython/comments/ke7i0h/started_a_week_ago_and_sent_my_first_script/,46,"I started learning Python 10 days ago and I just sent my first script to a client. (well friend) She asked if I could scrape a website for her. Pretty damn proud is all........

EDIT: 

Never knew this would blow up like it did. Cheers for the awards thats wild. Well a lot of you have been requesting the code, here it is: [Scraper](https://github.com/Jaseyacey/Best4SportScraper) ",1608117858.0
Python script to be automatically executed once per day,322,k39mfg,learnpython,https://www.reddit.com/r/learnpython/comments/k39mfg/python_script_to_be_automatically_executed_once/,120,"Hi all,

I have a very simple script that it scrapes data from a website. Ideally, I need to be executed once per day. Do you have any idea how could I achieve that? As it isn't something official, I need something for free.

Thanks!  
PS I mean something online. I know about cron tabs etc.",1606657597.0
Is it ok to learn python and use it exclusively?,317,o0gsu8,learnpython,https://www.reddit.com/r/learnpython/comments/o0gsu8/is_it_ok_to_learn_python_and_use_it_exclusively/,100,"Hello,

im looking to learn a programming language for fun, and have been learning python via ""python crash course 2nd edition"". its been a smooth ride so far, currently im learning about dictionaries. I wanted to get an opinon from other coders if using just python by itself to make programs (not looking at doing any web stuff or machine learning) is a good idea. should i learn another language if i want to have more to play with, or does python offer that? excuse my ignorance.

&#x200B;

EDIT: Wow, thank you very much for all the responses. I really appreciate it. I think it's safe to say, that sticking with python is the way to go. Like some of you have said, maybe i will get into something else down the road, maybe not.  ",1623770338.0
When to choose Django and when to choose Flask?,319,h8uk9m,learnpython,https://www.reddit.com/r/learnpython/comments/h8uk9m/when_to_choose_django_and_when_to_choose_flask/,57,"Hi guys,

I have been wondering and googling without being able to find an ELI5 answer to: When to choose Django and when to choose Flask? What can only be handled in Django and not in Flask? 

Thank you",1592144063.0
Thank you r/learnpython !,320,d5r050,learnpython,https://www.reddit.com/r/learnpython/comments/d5r050/thank_you_rlearnpython/,17,"No, unfortunately this isn't one of those posts where I talk about how you guys helped me get a job or anything. Working towards that! But just want to say thanks because the majority of you here are so humble and willing to help those inexperienced AND experienced. You make this place feel like a second home. I never come into this sub and leave unsatisfied or angry. And even if I'm just reading somebody else's post, I'm ALWAYS learning something new. I'm still pretty new to Python, but just knowing that this place is a comfort zone for me is exciting. So again, thanks for being awesome!",1568772196.0
What is your favorite Python-related YouTube channel?,316,1cyeyp8,learnpython,https://www.reddit.com/r/learnpython/comments/1cyeyp8/what_is_your_favorite_pythonrelated_youtube/,102,"Trying to find some new, fresh good Python YouTube channels (other streaming services are okay, of course). If possible please include why you feel they are ""good"" channels, and what range of topics they include. Thanks! ",1716421613.0
Python jobs,313,ix5r84,learnpython,https://www.reddit.com/r/learnpython/comments/ix5r84/python_jobs/,88,"Tried to post this in r/python but they said it wasn’t appropriate for that sub so here’s my question 


Python jobs

I am taking the self taught route and I’m just wondering who else has done that and what jobs you’ve been able to work at? I’m not too interested in becoming a data scientist or engineer and not focused on machine learning. What other python jobs are available and what are some things that helped you land jobs. My eventual goal is to become a full stack software engineer and would like to learn JavaScript after becoming comfortable in python. Thanks in advance for any and all help.",1600711713.0
What tasks are usually assigned to a Python intern/junior at a real company?,317,i4o6vn,learnpython,https://www.reddit.com/r/learnpython/comments/i4o6vn/what_tasks_are_usually_assigned_to_a_python/,55,"Hi guys, so just like most people in this sub, I'm trying to learn Python. However, there's something I've been wondering about. I've heard that juniors and interns usually just ""get assigned simple tasks"" at the beginning, I imagine those are tasks that just need to be churned out and don't require much conceptual work. 

However, I haven't been able to find any examples of such tasks. I assume that Leetcode and creating personal projects from scratch are both very different from the kind of tasks you could be assigned when you're a member of a team that is coding for a large-scale project. But as I have no experience working for a company yet, I have no idea what those tasks could be. Could anyone give me some examples from personal experience and shed some light on this issue?

Edit: I'm so happy that this thread took off, thank you, everyone, for your detailed responses! I'm sure that all of us newbies will learn a lot from them. :)",1596703729.0
"In the most basic terms, please explain when you would use tuples,lists,dictionaries, or sets.",319,hkcyi6,learnpython,https://www.reddit.com/r/learnpython/comments/hkcyi6/in_the_most_basic_terms_please_explain_when_you/,60,"Hello, I have been rereading and seeking different definitions and watching different videos explaining python, but I cannot understand what the difference is between tuples,lists, dictionaries, and sets other than some you use {} [] or (). When would you use these? What are the practical differences? please explain in the absolute simplest caveman terms

Edit: Thank you all for your generosity of knowledge. I have learned alot from reading all the comments and answers.",1593751940.0
A Python beginner here. I am stuck after having beginner lessons.,318,gmtcbs,learnpython,https://www.reddit.com/r/learnpython/comments/gmtcbs/a_python_beginner_here_i_am_stuck_after_having/,64,"So I learned the basics with py4e.com (a great course by Chuck Severance, also in Coursera and other platforms), and now I know the basics (defining functions, loops, opnening and reading files, if statments, etc.) but I cannot understand how can you write a program or a website with that. How do you give it a design? How do you make ""buttons"" and interact with the user rather than with the keyboard? And how can I apply these loops, and if statments, and lists and stuff to actually make a program?

I 'm completely confused but very excited to learn this programming lenguage. What would you recommend me?

Thanks in advance and sorry for my English!",1589910170.0
"Where can I learn to use the key tools for Python like Jupyter Notebooks, NumPy, Anaconda, Pandas, and Matplotlib ?",319,f855tb,learnpython,https://www.reddit.com/r/learnpython/comments/f855tb/where_can_i_learn_to_use_the_key_tools_for_python/,69,Thanks for the help,1582435425.0
What’s the best paid or free course to learn python?,318,fwultz,learnpython,https://www.reddit.com/r/learnpython/comments/fwultz/whats_the_best_paid_or_free_course_to_learn_python/,145,I’ve barely done any coding before but I’ve got plenty of time off and I think it is a good time to learn a new skill!,1586299974.0
I've just created a sub specifically for Python beginners looking to find projects.,318,7wu3pv,learnpython,https://www.reddit.com/r/learnpython/comments/7wu3pv/ive_just_created_a_sub_specifically_for_python/,44,"/r/pythonprojects2

There are subs like this already but none really geared specifically towards beginner Pythonistas, and the one I found that is has not been active for over a year. I will be posting project prompts with specifications, and I will be posting my code as well.

Ideally this would be a spot for discussion between Python beginners, critique, sharing of ideas, support, help and some solid pathways for people to go down once they've got an understanding of Python syntax.

This is the first prompt and response. 

https://www.reddit.com/r/PythonProjects2/comments/7wu20t/create_a_clock_that_you_can_run_indefinitely/

EDIT: I'm really psyched everyone thinks it's a good idea. I'm at work until 11pm est but I will do some housekeeping once I get home!

EDIT 2: Just created a sidebar, and created some posting guidelines! Feel free to post some of your own projects! Make sure to flair your posts!",1518370153.0
Can't help but feel mad on behalf of the intro to programming students for this one,312,xrom12,learnpython,https://www.reddit.com/r/learnpython/comments/xrom12/cant_help_but_feel_mad_on_behalf_of_the_intro_to/,83,"I work as an IT tutor for a school and each week I hold a study session for the students. The study groups are meant to get ahead of what I've seen to be problem areas for students. As a part of this, I assemble note sheets for the students who attend the session. The sheets are 90% what is in their books already, just in an easier-to-reference form. To avoid confusion I try to use the same verbiage as the book uses. 

I was prepping for this week's session, and I was assembling the terms list. This chapter deals with Dictionaries, by the way.  And then I run across these terms:

**value**: the object or data associated with a given key.  
**key:** the item associated with specified data or value.

&#x200B;

Like, I know what they mean, and I do know that they are accurate... but looking at those definitions, I can't help but remind of that scene from Star Trek: The Motion Picture - 

Illea-probe: V'ger seeks the creator.  
Kirk: Who is V'ger?  
Illea-probe: V'ger is that which seeks the creator.  
Kirk: Who is the creator?  
Illea-probe: The creator that which V'ger seeks.

&#x200B;

I can't help but get a little frustrated on behalf of the students at these definitions.",1664501098.0
where to start to learn python,313,ulmfb8,learnpython,https://www.reddit.com/r/learnpython/comments/ulmfb8/where_to_start_to_learn_python/,91,"Hey guys,
This has probably been asked a lot but I want and have to learn python and I would love to hear recommendations from people where to start ( websites, etc.)
I know I could Google this but I like to communicate and interact with people :P
Thanks in advance!",1652084341.0
(Rant) APIs frustrate me.,317,oz6q59,learnpython,https://www.reddit.com/r/learnpython/comments/oz6q59/rant_apis_frustrate_me/,114,"OK, I went to college for compsci. They taught you that APIs were accessor/mutator methods for data. That's it. Nothing about a network stack living under it, and how it's the #1 thing you need on a resume for a job. I was not taught jack about flask, django, etc, and exploring them has been a huge pain. 

Fast-forward, and the phrase ""API"" means building and understanding the whole platform below it. You own the methods, the cloud platform, and the trendy framework with the stupid folder conventions and stupid config files scattered in different directories. I'm halfway through a Django book, and I feel like I learned only how to navigate the confusing directory structure that is Django. 

CompSci maybe was the wrong choice for applied programming. I know what a Von Neumann machine is, but I can't stand up an API. 🥴

EDIT: Oh wow, one of my rants actually resonated. Uhhhh, go watch [Shrek Retold](https://www.youtube.com/watch?v=pM70TROZQsI) and have a wonderful Friday.",1628256791.0
How to not lose interest in learning python,313,hvwzi4,learnpython,https://www.reddit.com/r/learnpython/comments/hvwzi4/how_to_not_lose_interest_in_learning_python/,80,"I chose a course on youtube yesterday by ""Mosh""  I followed to the ""Receiving inputs"" lesson and got tired, Now today i felt like i lost interest, Is there any way to not lose interest and to continue learning python? Also which is the best free python course i can use?",1595435614.0
Things are finally starting to click!,312,fs1qi7,learnpython,https://www.reddit.com/r/learnpython/comments/fs1qi7/things_are_finally_starting_to_click/,33,"Suddenly things have started falling into place. I kept revisiting topics that I didn’t understand in the beginning, kept practicing with real world data, and finally I started to have ‘ah ha’ moments. I feel like Ive gotten over a major blocker in my learning and It feels good!

My main breakthroughs have been with understanding classes, specifically the __init__ method, list comprehension, and lambda expressions.",1585610741.0
A cool Python tool to download Research papers in bulk from any conference,314,xi4wnl,learnpython,https://www.reddit.com/r/learnpython/comments/xi4wnl/a_cool_python_tool_to_download_research_papers_in/,11,"Hi folks,

I was working on a personal experimental project, which I thought of making it open source now. It saves much time for literature research.

If you try to search papers related to your topic, finding relevant documents on the internet takes time. You probably know the pain of extracting citations of articles from different websites.

Previously I used to fetch papers from google or semantic scholar, but semantic scholar does not show correct paper citations.

I am excited to announce \[RESP: Research Papers Search\]([https://github.com/monk1337/resp](https://github.com/monk1337/resp))

&#x200B;

**Features:**

* Fetch all citations of a single paper from Google Scholar in CSV format
* Fetch all related papers of a single paper from Google Scholar in CSV format
* Fetch all connected papers from [connectedpapers.com](https://connectedpapers.com) (it does not use a citation tree, it uses \[similarity\]([https://www.connectedpapers.com/about](https://www.connectedpapers.com/about)) to build graphs) in CSV format
* Fetch relevant papers based on keywords from different sources, including Arxiv, ACL, ACM, PMLR, NeurIPS, cvf etc., in CSV format

I am working on a few more projects; if you like the project, follow me on GitHub ([https://github.com/monk1337](https://github.com/monk1337/resp)) for more cool Machine Learning/Graph neural networks, Python-based projects and ideas notifications in the future.

I hope it will be helpful in your research. Thanks :)",1663571955.0
So I'm taking 2021 Complete Python Bootcamp From Zero to Hero in Python - Udemy,311,lvwd6x,learnpython,https://www.reddit.com/r/learnpython/comments/lvwd6x/so_im_taking_2021_complete_python_bootcamp_from/,71,"What is the best way to be efficient in this course? Should I run through from Section 1 until the end or should I create a project while I finish the course?

I mean, the course is great but I'm a bit anxious that I cannot memorize all the theories and codes and ultimately apply this in real-life coding situations.

So should I finish the course first before working on a real project?",1614669498.0
Python vs C,313,l99326,learnpython,https://www.reddit.com/r/learnpython/comments/l99326/python_vs_c/,132,it might seem unpopular or dumb.. but i really feel that studying pointers and linked lists in C is way easier than studying python... i cant solve anything in python... every python test i get 100 methods to memorize.. that is just horrible for me... at least in C i know what i need to use.. in python i have 10000 methods per data type and i get a question to write some recursive function... no idea how to do shit in python and its depressing,1612085694.0
What work activity have you automated?,313,boywle,learnpython,https://www.reddit.com/r/learnpython/comments/boywle/what_work_activity_have_you_automated/,200,"I often read comments where people say they have automated parts of their job, and apparently sat back and relaxed with nobody the wiser. Often there isn’t much detail on what was actually automated.

So... what sort of tasks / activities have you automated in your role? And if it was unbeknownst to management, how?

I’m keen to know if I’m just not thinking outside of the box enough in considering automation opportunities.

Edit: Thanks for all the great responses everybody. Some amazing things done by some amazing and very talented people. Definitely given me food for thought.  Cheers 😀",1557932039.0
Do other programming languages rely on libraries as much as python?,313,qf5l1f,learnpython,https://www.reddit.com/r/learnpython/comments/qf5l1f/do_other_programming_languages_rely_on_libraries/,131,"I feel like there are never ending amounts of libraries that I come across and have to learn in python. Sometimes it’s great, sometimes it’s a pain to learn. But I kind of worry that my programming experience won’t transfer as well to another language down the road if I’m using python libraries to solve all my problems. I plan on learning JavaScript in the next few months. I was hoping python would help that transition.",1635123805.0
Where is Corey Schafer?,313,poa2bs,learnpython,https://www.reddit.com/r/learnpython/comments/poa2bs/where_is_corey_schafer/,35,"I noticed for a while now that he hasn’t been posting YouTube videos at all.

After some quick research, none of his platforms have been updated either.  Does anyone know where he is? Is he ok?  

I hope everything is ok with him, hoping someone can provide more info.

Edit: I do see one of his GitHub repos was updated within the last month.",1631648705.0
I've lost all motivation to code. What should I do?,316,isyglz,learnpython,https://www.reddit.com/r/learnpython/comments/isyglz/ive_lost_all_motivation_to_code_what_should_i_do/,118,"Hi,

I recently just finished a course learning Python. I can say it was probably the best course I've seen overall. For my first project, I decided to make a Discord bot using discord.py. I really enjoyed that and had a lot of fun, and it was mainly for a server that I run and not many people had thought of it before. I finished this and transferred it to a Raspberry Pi, it's nowhere near perfect but I'm really proud of it. This project was finished about 2-3 weeks ago and I haven't had any ideas since, I've googled things but every time I would attempt to start on it, I would get discouraged because it seemed just somewhat boring. Some of the things that I saw were with Flask, tkinter and others, but I just can't seem to start learning and trying to create things with them. I'm new, so a lot of the terminology and advanced stuff doesn't make sense to me. Do you all have any advice on what I should do? Any projects or suggestions on ways to change my habits? Anything is appreciated. Thank you.",1600131987.0
First project with Python. 7 days later and it's ALIVE!,311,hazu8c,learnpython,https://www.reddit.com/r/learnpython/comments/hazu8c/first_project_with_python_7_days_later_and_its/,45,"What it is:  
It's a [multi-layered scoreboard](https://imgur.com/H7wLAOJ). It keeps track of rounds, wins, and combos, fighter names, event names.  
It writes this information to text files.
It also controls scenes in Open Broadcaster Software (OBS) based on their combo.  
  
How I use this: I help run the production for a stream that hosts fighting game grudge matches. We do first to 10s, first to 5s, etc. I pull the data from the text files to write the text on stream.  
 
I got really into it and made custom nameplates for the fighters that have levels of ""warm, heating up, on fire"" to them. After the first stream, I learned that its difficult to manage all of this on paper (keeping tally marks of combos, wins, etc.) and manually writing the text files. Switching between the 7 fighting scenes, and 7 caster scenes was also a nightmare. So I searched for a way to do it automagically. I tried HTML with XML, but it wasn't the way. So I tried to learn python and give it a shot. And here we are. I added features like swap sides that does just that - moves all the information to opposite sides (in case players switch sides). Keeps track of which ""scene"" in obs I'd be switching to based on their ""combo"", and replaces the function of the Go2Fighters button on the fly. Same with the Go2Casters scene. If one of our casters has to leave, or another joins, I select the count via drop down - and it alters the ""Go2Casters"" on the fly as well.

Next steps: I spent the last 2 days trying to learn openCV2 to figure out how to watch health bars and track wins magically - but I am super stuck. [This is about as far as I can get, and I'm not entirely sure if this is what I should do to track it.](https://imgur.com/lfbwGFm) I've found convex Hulls, but not sure how to use them or the functions. Always open to feedback on how to accomplish this.  
  
I'm really proud of this. I'd like to thank quarantine for giving me the time - silver lining I guess. I went from knowing nothing about Python, to this.",1592426988.0
Struggling to understand anything.,310,gjnkz4,learnpython,https://www.reddit.com/r/learnpython/comments/gjnkz4/struggling_to_understand_anything/,119,"So I'm about half way through automate the boring stuff after going through a section, getting frustrated, watching videos about the chapter, figuring it out then moving to the next chapter. At the moment I am working on reading and writing files and cannot understand what is going on, its been a week on this chapter and I still can't even begin to consider starting on the practice projects. 

I constantly see people posting 'I started learning x months ago now I work at this company and I've doubled my income!'. How is this possible? Ive been working on this book for months and would to be honest I probably couldn't even figure out how to do practice projects from previous chapters. Am I doing something wrong or am I just far less smart that I consider myself to be?

Sorry if this is a bit of a rant post I am just super frustrated that I can't figure any of this out.


Edit: Thanks everyone for the advice it has been incredibly helpful. Going to have a look at how I'm approaching everything and hopefully can get back on track.",1589467139.0
Overwhelmed and in need of guidance and maybe more,314,cw9q6m,learnpython,https://www.reddit.com/r/learnpython/comments/cw9q6m/overwhelmed_and_in_need_of_guidance_and_maybe_more/,87,"I've exclusively used linux since I was a teenager and I was always good with computers. But I made some mistakes and spent years in prison. I took all the education programs i could but the warden refused to implement programming classes as it was a ""security risk."" But for years that is all I have wanted to do. I've been out for months now and I finally have a laptop and have installed idle3. I am working on Automate the Boring Stuff and feel overwhelmed. I keep reading  people saying you have to have a project in mind. Or at least an end goal for why you are learning programming. But all I've known for years is violence and isolation and despair. I can barely imagine a future, let alone think of a project. I live in a poor area and can't even get a job because of my record.

I want to be a programmer. But I need guidance and help. I feel overwhelmed and sometimes I just want to be back in prison with my friends.

edit: I am kinda choked up right now reading all the replies and PMs. Thank you all so much for your support and kind words.",1566936220.0
I want to start a blog for entrepreneurs to learn how to automate their business through Python,311,8gojss,learnpython,https://www.reddit.com/r/learnpython/comments/8gojss/i_want_to_start_a_blog_for_entrepreneurs_to_learn/,67,"I'm a big fan of Python and automation , I've been using to build scrapers and web apps for more than 3 years with Flask, Requests and more . 
I want to start a blog about my passion, I don't really care about money right now , I just want to know if there's some potential readers .

The goal of this blog is to teach entrepreneurs ( normal business humans :3 ) the basics of Python quickly and then show them step by step tutorials to build their own automated system with Python, scrapers and more .

But I don't know if there's like some demend for this type of blogs ? 

** Edit : Thank you so much for the great feedback, encouragements and thoughts  I will start it in June once all my exams are done, and I'll try my best to give you the best content I can ! **
",1525331820.0
"Took me 3 days to Finish DAY 2 of Angela Yu's 100 days of Python. Am I the only one? I'm bad at math, perhaps it's the main culprit.",313,w1hq77,learnpython,https://www.reddit.com/r/learnpython/comments/w1hq77/took_me_3_days_to_finish_day_2_of_angela_yus_100/,75,"Don't get me wrong, I'm in love with the course and highly motivated (still) but I'm not sure if its normal to experience this span of days just to finish the first few basics of her course. I'm a complete beginner BTW. I just finished learning HTML & CSS course by Jonas from Udemy and I dove right in to Angela's Python course on which, my first programming language.  


Thanks!",1658092695.0
Why isn't Cython more popular?,313,j20gj2,learnpython,https://www.reddit.com/r/learnpython/comments/j20gj2/why_isnt_cython_more_popular/,103,It runs at the speed of C (what I have read). Is it compatibility issues or just not worth it?,1601390339.0
What do I need to learn to do backend with python??,317,hlii49,learnpython,https://www.reddit.com/r/learnpython/comments/hlii49/what_do_i_need_to_learn_to_do_backend_with_python/,61,"I just finished learning the basics and now I'm doing coding challenges on [codewars.com](https://codewars.com).

I wanna do backend but I don't feel like learning javascript for the time being. A full path would be appreciated.",1593933269.0
"I made my first semi-big project, a pdf to csv converter.",313,cggb25,learnpython,https://www.reddit.com/r/learnpython/comments/cggb25/i_made_my_first_semibig_project_a_pdf_to_csv/,39,"I have made a lot of programs in python but all of them were either from a tutorial or somewhere else, except one or two. So yesterday, my dad asked me to make some graphs in excel for him, but the data was a pic scanned from camscanner and made into a pdf, so it took me a lot of time to copy all that in excel because I had to type it all out. This gave me the idea to make a program in python which converts pdf to csv, for the people like me in need, as a fun project.

It does the work in 3 steps,

**Step 1** \- Conversion of PDF to JPG

**Step 2** \- Conversion of JPG to TXT

**Step 3** \- ~~Conversion~~ Formatting of TXT to CSV

&#x200B;

I used modules like tesseract and pdf2image. Check out the code at [github](https://github.com/SahilChoudhary22/pdf2csv-converter). Kindly review the code in your free time and tell if there's something i need to work on.

&#x200B;

**EDIT & UPDATE** \- As you guys suggested, i have added argparse and configparser, now users can convert file by setting path in config.ini and entering 'python [pdf2csv.py](https://pdf2csv.py) \-i filetoconvert.pdf' . Also, i have cleaned up the program a little bit and now it contains only 1 python file. Now improving the actual conversion and studying pathlib.

&#x200B;

**EDIT & UPDATE 2** \- Implemented pathlib to the code, now no more playing with filenames.",1563817023.0
"keep getting ""SyntaxError: keyword can't be an expression""",308,aq28nf,learnpython,https://www.reddit.com/r/learnpython/comments/aq28nf/keep_getting_syntaxerror_keyword_cant_be_an/,24,"    class Number:
        def __int__(self):
            self.value = 0
            self.even = True
            
    numberinstance = Number()
    print(numberinstance.value = 101)
    print(numberinstance.even = False)

why do i keep getting ""SyntaxError: keyword can't be an expression"" error on first print statement?

EDIT: below is the question

\#Write a class named ""Number"" with one attribute called ""value"" which defaults to 0 and another attribute called

even"" which defaults to True. Next, create an instance of this class and assign it to a variable called ""number\_instance"".

Then, set the value attribute to 101 and the even attribute to False.

&#x200B;

EDIT:

thank you all for support. i figured out the issue after 20 minutes of posting it. i was losing my mind. 

i want to thank callmelucky being champion for newbies.",1550029446.0
"I made my first program, a password generator.",309,yza83u,learnpython,https://www.reddit.com/r/learnpython/comments/yza83u/i_made_my_first_program_a_password_generator/,26,"I know it is probably very unimpressive, and the code is probably inefficient. But I wanted to post this first project somewhere, so I could get feedback on it.

[https://github.com/IceTheDev2/Passwordsy](https://github.com/IceTheDev2/Passwordsy)",1668858958.0
Review of MITx 6.00.1x Introduction to Computer Science and Programming Using Python,306,me6n5e,learnpython,https://www.reddit.com/r/learnpython/comments/me6n5e/review_of_mitx_6001x_introduction_to_computer/,18,"I just finished up this course a few hours ago. [Final was released earlier today and I got to it after work. Ended up with 99%
](https://imgur.com/k58vhFY)

**Summary**

Good intro course that gets you learning and implementing a lot of basic Python functions, then starts to get computer science heavy at the end, which was meh for me as I don’t have plans to be a programmer, just want to automate/script in my new IT career. In either case, it’s a good foundation to build upon with other material. I tracked my time with an app and ended up usually 8-12 hours per week.  

I’ll probably dabble a bit back into AtBS before thinking of a project to do. I have a decent enough foundation where I think Google and just experimenting will help take care of the rest.

**Background**

Econ major, went into manufacturing, then just started in IT.

I’ve failed to finish a Python course multiple times, I think I’m on my 4th attempt of Automate the Boring Stuff. Finally decided to commit to a class structure and paid for the cert mostly to support the class, but also for a little more motivation. Auditing the class gets you the finger exercises and problem sets, which are the meat of your learning. The midterm and final weren’t very vital, just additional reinforcement of material. If you can’t spare the money, you’re not missing much.

**Content Specifics
**
The course starts off slow as any intro undergraduate course does. I already had some basic knowledge from AtBS, but I will say I think Unit/Pset1 is one of the more difficult problem sets, and the TAs said as well. I think there are some things we haven’t yet been taught that made the questions harder unless you already knew other concepts. 

Unit/Pset2 was also fairly difficult. For both of those, I felt very stumped and not knowing how to move forward on finger exercises and problem sets. I posted in the discussions about the expectation of our time spent because I was spending way above the estimate, and they were estimating most people would be spending in 12-16 hour/week range, and I felt I was exceeding that (that didn’t end up being the case as time went on). Needless to say, I was very frustrated and banging my head against the problems but did eventually triumph and get the outputs that I wanted. It felt very rewarding to finally get there.

For Unit/Pset3, I really got into the flow and was proud of my work. [They had us write the internals for a hangman game \(which I eventually shared with programming friends.](https://imgur.com/3kGv7NR) 

The structure and docstrings of expected inputs and returns really helped solidify the lessons of abstraction and breaking down the work. That gave me a lot of confidence to move forward with the other problem sets. The later problem sets weren’t easy but I kept iterating and debugging and trying things(which is what Unit/Pset 4 is about), which made me feel less stumped and just gave me more practice and notice patterns on how to code. 

That said, Unit/PSet 5 was a doozy again with introduction to classes and some other topics I had never previously touched. Honestly, I still need a lot of practice on inheritance and how to use attributes but I feel that it will come with time as I practice more.

Unit/Pset 6 was entirely multiple choice and more about computer science and efficiency, primarily going into Big O notation. The intro to it was frustrating and IMO not very good because you had to come up with expressions for your code. Eventually, you end up with Big O notation (which throws away the need for the specific expressions and has you only focus on the largest) which is easier to understand IMO, and with more finger exercises/problem sets to practice through, you learn the patterns and the topic better to give you an idea on how to write more efficient code. However, I feel the topic is still meh if I just want to automate some basic things. I just don’t feel I’d bottleneck a modern PC. But, I could be proven wrong. It is still useful.

Last Unit 7 is kind of glossing over plotting, more of a lead up to 600.2x which I don’t plan on taking for now.

**Tests**

The midterm and final were alright. I don’t think it’s entirely necessary for your learning but it’s good structure and feedback.

In both cases, there’s some initial multiple choice questions before you get to the programming, that’s the only place I lost points cause that’s one try only. The actual programming exercises had a max 10 attempts. Since you should be testing your code with test cases beforehand anyway, I usually only need 1 or 2 attempts. Really, they aren’t too complex compared to the problem sets (although I will say, I just got stumped and spent about 2 hours on one problem before I skipped it and came back to it and got it done in less than an hour).

Overall, the grader and its feedback had a lot going for it that helped me learn, but they still need some minor improvements to reduce vagueness in the answer they expect since the grader pretty much expects an exact output in most cases.

Anyway, hope that helps people out there!

**Community**

Eh, not a big factor for me as I thought it would be. Forums are okay though awful to navigate IMO. TAs are helpful, but for the most part, I just experimented to work through issues. They are also available on discord.",1616819353.0
[Spotipy/Spotify API] Create Playlist with user's least played tracks,310,li9q2w,learnpython,https://www.reddit.com/r/learnpython/comments/li9q2w/spotipyspotify_api_create_playlist_with_users/,38,"I've been playing around with the Spotify API and Spotipy the last couple of weeks and I managed to set up a small program that creates a playlist from a user-defined number of most-played songs.

    import sys
    import spotipy
    import spotipy.util as util
    from spotipy.oauth2 import SpotifyOAuth
    from spotipy.oauth2 import SpotifyClientCredentials
    import json
    import requests
    
    
    
    client_id = ""xxx""
    client_secret = ""xxx""
    redirect_uri = ""https://google.com/""
    scope = ""playlist-modify-public, playlist-modify-private, user-library-read, user-top-read""
    username = ""xxx""
    
    
    
    #Create playlist from user-defined number of top songs
    
    playlist_name = input(""Enter a playlist name:"")
    playlist_description = input(""Enter a playlist description:"")
    
    spotifyObject.user_playlist_create(user=username,name=playlist_name,public=True,description=playlist_description)
    
    user_input = input(""How many of your most played songs do you want in your playlist?"")
    
    
    songliste = []
    
    
    
    #Add songs
    
    
    result = sp.current_user_top_tracks(limit=user_input, offset=100, time_range=""medium_term"")
    
    for item in result[""items""]:
        songliste.append(item[""uri""])
    
    
    
    
    
    prePlaylist = spotifyObject.user_playlists(user=username)
    playlist = prePlaylist[""items""][0][""id""]
    
    
    
    #Create playlist
    
    
    spotifyObject.playlist_add_items(playlist_id=playlist,items=songliste)

&#x200B;

Now what I would like to do, is create a program that does the same thing, but with a user's LEAST played tracks. From what I gathered, Spotipy doesn't have a direct way of grabbing a user's least played songs. Would there be any way I could go from this method and alter it in a way so it starts ""from the back"" and grabs the least played tracks instead?",1613131462.0
Raymond Hettinger is great: who else gives great Python talks?,313,kmgla7,learnpython,https://www.reddit.com/r/learnpython/comments/kmgla7/raymond_hettinger_is_great_who_else_gives_great/,35,"I've watched every Hettinger talk, and I've taken his online course.

Are there other great Python developers (ideally, core developers) who regularly give interesting talks about Python?

Thanks",1609256200.0
"Is there a ""Clean Code"" equivalent in Python",307,gfsvqe,learnpython,https://www.reddit.com/r/learnpython/comments/gfsvqe/is_there_a_clean_code_equivalent_in_python/,104,"I'm looking for a book that tackles software engineering best practices in Python. I like Clean code and code complete. The only  problem is that I don't know Java and so some of the concepts are lost on me and the examples are hard for me to follow along with.

I'm pretty decent with Python. I don't want something like 'Learning Python' that tells you about the language. I want a guide to development and software engineering that uses Python.

Anyone know of any books that deal with this?",1588943189.0
Data Analysis Resources for Python,313,g89tmh,learnpython,https://www.reddit.com/r/learnpython/comments/g89tmh/data_analysis_resources_for_python/,17,"# Data Analyst Course with Python
## Introduction
A few days ago there was a very well-meaning (and subsequently deleted) post outlining topics to enable people to become data scientists in 12 weeks. The post was heavily upvoted in spite of critical comments before it was deleted by the author. The principle criticism was that it was wholly unrealistic to learn the topics listed in the time available.

This post seeks to provide something more realistic—resources which in 12 weeks give you a flavour of data *analysis* with Python and a basis for further learning. Important notes:
- 12 weeks is nowhere near enough to become familiar with a language to the point of being consistently productive. You will get syntax errors. You’ll have to google. You’ll get dismayed at the callousness of stackoverflow users. This is normal and doesn’t indicate failing on your part—this takes a lot of time.
- Total time spent learning is important, but so is frequency. If this takes 12 weeks full time(ish), it might take 30 weeks part time because you forget things more quickly.
- Business domain knowledge is super important; if you’re learning stuff for a particular industry, try to get hold of data sets for that industry, and feel free to skip stuff if you don’t think it’s relevant (though at this level little is irrelevant)

## Credentials
I’m a data scientist with a maths PhD (unrelated to stats, but somewhat algebra-focused) and was a quantitative analyst before that. I work in the energy industry and spend a lot of time working with generalized additive models for time series forecasting, chucking stuff at random forests, doing Bayesian inference with pymc3, and survival analysis with lifelines. I don’t use a lot of Tensorflow or PyTorch because they tend not to fit the domain of my problems well, but I revisit them every few months to pit them against our existing models.

### Disclaimer
This post is purely my opinion, and in particular reflects my view that too much data science is more complicated than necessary, perhaps because people don’t have sufficient grounding in traditional statistics. In *my* work, this is hugely important; if you’re wanting to identify pictures of cats, it really isn’t!

# Learning Resources
## Python Basics
Nothing here is specific to data analysis, so just take a look at the [r/learnpython FAQ](https://reddit.com/r/learnpython/w/index?utm_source=share&amp;amp;utm_medium=ios_app&amp;amp;utm_name=iossmf).
## Data Analysis
There’s no getting away from the fact that mathematics is at the core of data analysis, but you don’t have to be John Conway to be useful. In addition, statistics is by far the most important at this level and you don’t need to understand the minutiae of the subject (which is based in measure theory and is *tough*). Unfortunately I’ve never found a good introduction to statistics with Python (there are plenty for R!), so you have to dip into a number of different resources.

### [Python Data Science Handbook](https://jakevdp.github.io/PythonDataScienceHandbook/)
Jake VanderPlas is the author of the excellent [altair](https://altair-viz.github.io/) plotting library and a pretty bright chap. This book serves as a good introduction to NumPy, Pandas, Matplotlib and Scikit-Learn, and the link includes its full text as Jupyter Notebooks, which is awesome. You needn’t bother with the Scikit-Learn chapters unless you want to jump ahead.
### [All of Statistics](https://www.stat.cmu.edu/~larry/all-of-statistics/)
Perhaps not *all*, but Larry Wasserman has written a very approachable introduction to statistics here. The link includes the few data sources given in the book, but it’s very much a textbook. At 500 pages it’s a bit daunting, so I recommend focusing on chapters 1–11 first, then the chapters on linear regression and multivariate models, which is about 200 pages total. Read along with the [SciPy docs](https://docs.scipy.org/doc/scipy/reference/); in addition take a look at [pythonfordatascience.org](https://pythonfordatascience.org/inferential-statistics/) which calls out useful functions in SciPy and statsmodels. Now available as a free PDF here: https://link.springer.com/book/10.1007/978-0-387-21736-9 (thanks /u/sududxb!)
### [OpenIntro Statistics](https://www.openintro.org/book/os/)
An alternative (and possibly a better alternative) to AoS, this textbook is available with an optional contribution, and used by a number of colleges in the U.S. I’ve not read it, but a closer look, it appears to be pretty great. As with AoS you’ll have to read along with the SciPy and statsmodels docs.
### [Python for Data Analysis](http://shop.oreilly.com/product/0636920050896.do) and the [pandas docs](https://pandas.pydata.org/docs/user_guide/index.html)
Which of these you prefer is largely a matter of preferring one medium over another, but PfDA’s second edition is already slightly outdated for pandas 1.0.3, though certainly not enough that it’s not a very useful resource.
### [Data Science from Scratch](https://www.oreilly.com/library/view/data-science-from/9781492041122/)
Joel Grus’s book kinda *does* do what I assert isn’t possible—take you from zero to data scientist hero in a relatively short text. The criticism I would level at it is that it (necessarily) doesn’t go into sufficient depth everywhere, but what it does brilliantly is implement most things from scratch (duh!) to give you a good grounding in the basics.
### [Anatomy of Matplotlib](https://youtu.be/6gdNUDs6QPc)
This is a great video to get a better understanding of how to work with Matplotlib, which is definitely the least Pythonic library still in use by data analysts today. It’s also slightly outdated, but hugely valuable.
### [Introduction to Survival Analysis — lifelines docs](https://lifelines.readthedocs.io/en/latest/Survival%20Analysis%20intro.html)
Great introduction to survival analysis, which will either help you look like a superstar or be completely irrelevant.
### [Winning with simple, even linear models](https://youtu.be/68ABAU_V8qI)
I was at this talk at PyData London a few years ago and it was the best of the conference in my opinion. Vincent makes the argument that people are too quick to leap to ML/DL methods when simpler models could do as well or if not better.

## Data Science
Briefly, here’re a few resources that cover data science proper, but don’t expect to get here any time soon!
- [r/datascience](https://www.reddit.com/r/datascience/wiki/resources?utm_source=share&amp;amp;utm_medium=ios_app&amp;amp;utm_name=iossmf) (includes all the other resources in this section)
- [The Elements of Statistical Learning](https://web.stanford.edu/~hastie/ElemStatLearn/) and [An Introduction to Statistical Learning](http://faculty.marshall.usc.edu/gareth-james/ISL/) (the former goes into more detail on the maths than the latter)
- [Pattern Recognition and Machine Learning](https://www.springer.com/gp/book/9780387310732)
- [Andrew Ng’s Machine Learning course](https://www.coursera.org/learn/machine-learning)

## Data Sources
As mentioned before, if you’re interested in a particular industry then see if you can get data related to it. Otherwise, these are some general sources of good-quality data.
- [Scikit-Learn data](http://scikit-learn.org/stable/datasets/index.html) has some really good ‘toy’ datasets that are useful for playing around with descriptive and inferential statistics, besides the skl estimators
- [data.gov.uk](https://data.gov.uk/) and [data.gov](https://www.data.gov/) have hundreds of thousands of data sets. Many of these offer a great opportunity to practice cleaning up data with pandas because they come in all shapes and sizes
- [OpenIntro Statistics](https://www.openintro.org/data/) data sets used in this textbook",1587883914.0
Python MOOC Helsinki is an excellent free learning tool for beginners.,307,vm78c0,learnpython,https://www.reddit.com/r/learnpython/comments/vm78c0/python_mooc_helsinki_is_an_excellent_free/,38,"Just wanted to say this resource is incredible. 

It comes with 

-  Class Lectures from earlier this year 
- Many beginner exercises you start with in a browser 
- Encourages you to move to a code editor and then still checks your answers via a server 
- Difficulty scales to what you were taught
- Provides model solutions. I always suggest looking at them for cleaner and more concise code. Code that you’ll understand because they never use a method or function you haven’t learned yet in the model solution 
- Has a discord you can join 
- Very strong focus on repetition to learn how to do things 


I’ve been using for a month and I love it. Wanted to suggest it for other beginners. 

https://programming-22.mooc.fi",1656368782.0
Do I lack critical thinking skills to do programming?,305,sxeph4,learnpython,https://www.reddit.com/r/learnpython/comments/sxeph4/do_i_lack_critical_thinking_skills_to_do/,172,"I bought Dr. Angela Yu's course to try and learn python. One of the challenges for day 1 was to switch positions of variables when printed. 

a = 5

b = 3

Should be

a = 3

b = 5

She gave the example of thinking about how to switch two liquids between cups. I knew to get a 3rd cup but didn't know how to put into practice. I feel so dumb failing a day 1 challenge.",1645400127.0
Who wants to learn python from the beginning with beginners like me?,307,bm2iw2,learnpython,https://www.reddit.com/r/learnpython/comments/bm2iw2/who_wants_to_learn_python_from_the_beginning_with/,133,I am looking for a partner to learn python from the beginning. I m completely new in programming.,1557302469.0
Python Multithreading for Beginners,312,6u2opf,learnpython,https://www.reddit.com/r/learnpython/comments/6u2opf/python_multithreading_for_beginners/,27,"Hey guys, this playlist covers Python multithreading aimed towards beginners.  I worked really, really hard to create demonstrable examples that show what each aspect of Python multithreading does. 

Threads, Locks, Events, Deamon Threads, Queues, Subclassing threads are all covered. 

In the future I will cover :
Multiprocessing, Coroutines, Aysncio and have more
practical examples. 

https://www.youtube.com/playlist?list=PLGKQkV4guDKEv1DoK4LYdo2ZPLo6cyLbm


Hope you can guys can get something out of it and let me know if there is anything you want me to work on =)",1502896412.0
"Experienced Python Programmers, what are your key tips to getting better at Python, apart from saying practice?",303,rg6tgm,learnpython,https://www.reddit.com/r/learnpython/comments/rg6tgm/experienced_python_programmers_what_are_your_key/,101,Any key tips and detail will be appreciated!,1639486261.0
"After studying Python for months, I am switching over to JavaScript (for school) and I'm not liking the differences so far. Python seems simpler and more elegant.",309,k85qh5,learnpython,https://www.reddit.com/r/learnpython/comments/k85qh5/after_studying_python_for_months_i_am_switching/,113,"I just barely started studying JavaScript and I'm wondering why JavaScript isn't more like Python. 

&nbsp;

Just look at the differences in variables.

&nbsp;

**Python:** randomVariable = ""Hello.""

&nbsp;

**Javascript:** var randomVariable = ""Hello."";

&nbsp;

So, why is JavaScript and other similar languages so cluttered with unnecessary characters? Is there a purpose for having to type ""var"" and "";""?",1607301019.0
"Created my first web application using Python, Flask, and AWS",307,s2nbj9,learnpython,https://www.reddit.com/r/learnpython/comments/s2nbj9/created_my_first_web_application_using_python/,83,"Hi All,

After many months of trial and error I finally created my first flask application. Is it pretty? Not really but I learned a shitload along the way. I would say the most annoying part was setting up the Amazon EC2 instance, injecting my Python/html code, and linking the Google domain to it.

What is it? It's another Gif maker, I did not like the functionality of some other online gif makers so I created one that gives you 3 options to create gifs from a YouTube link. This allows you to select 2 start and end times to return one gif, or two gif files. The ""home"" page has absolutely nothing on it because I cannot figure out for the life of me what to put there... maybe I should have just removed it. But the ribbon up top has a few different pages for different ways to slice up a YouTube link.

Please let me know what suggestions you may have on how I can improve this website and let me know of any questions you have.

The website: [http://giffoundry.com/about](http://giffoundry.com/about)

(adding the ""about"" page because the home page is more barren than the Sahara dessert and my confuse people)

&#x200B;

Edit: Thanks everyone for your input/support! A couple of you noted the website was no longer working and I assume it was because of the CPU usage maxing out a few times during the day... though I am not sure if that is the true reason",1642038941.0
What are your top signs of an inexperienced Python developer?,311,qo6172,learnpython,https://www.reddit.com/r/learnpython/comments/qo6172/what_are_your_top_signs_of_an_inexperienced/,174,"What are your top (five?) signs of an inexperienced Python developer?

I am hoping to avoid these signs as I progress in my career before becoming *the* experienced developer at any team.

Thank you!",1636222771.0
I finished my first project in python and I’m so happy!,306,qtcpms,learnpython,https://www.reddit.com/r/learnpython/comments/qtcpms/i_finished_my_first_project_in_python_and_im_so/,21,I started learning this summer with Automate the Boring Stuff with Python’s Udemy class and book. I didn’t get all the way through but got a great introduction.  I’m an architect and python can be used to build tools to extend our software and automate a ton of repetitive tasks. I started a new job recently that would let me heavily apply these skills and I just finished my first python project! A help button in our 3D modeling software that pulls project information from the API and sends it to me in slack. I also got a basic Ui working using wpf. I’m hooked this stuff is so much fun. I can’t wait to keep learning. I haven’t been super active in this community but shadowing it has kept me engaged. I’ve enjoyed following along and seeing what I can understand. So thank you all for being a resource to us students!,1636845746.0
Free Python books [xpost from /r/Python],306,annc6w,learnpython,https://www.reddit.com/r/learnpython/comments/annc6w/free_python_books_xpost_from_rpython/,21,"From https://www.reddit.com/r/Python/comments/anfdyh/free_python_books/

* [Python 101](https://python101.pythonlibrary.org/)
* [A Python Book: Beginning Python, Advanced Python, and Python Exercises](https://www.davekuhlman.org/python_book_01.html)
* [Boxes: Your Second Python Book](https://ralsina.gitlab.io/boxes-book/)
* [The Hitchhiker’s Guide to Python!](https://docs.python-guide.org/)
* [Automate the Boring Stuff with Python](https://automatetheboringstuff.com/)
* [Problem Solving with Algorithms and Data Structures using Python](https://interactivepython.org/runestone/static/pythonds/index.html#problem-solving-with-algorithms-and-data-structures-using-python)
* [Python for Scientists and Engineers](https://www.pythonforengineers.com/python-for-scientists-and-engineers/)
* [Think Python: How to Think Like a Computer Scientist](https://greenteapress.com/wp/think-python-2e/)
* [Clean Architectures in Python](https://leanpub.com/clean-architectures-in-python)

These were added in comments:

* [Obey the Testing Goat](https://www.obeythetestinggoat.com/)
* [Program Arcade Games](http://programarcadegames.com/)
* [Learn Python with Arcade Academy](https://arcade-book.readthedocs.io/en/latest/)
* For the data folks - [Bayesian Methods for Hackers](http://camdavidsonpilon.github.io/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/) - [Neural Networks and Deep Learning](http://neuralnetworksanddeeplearning.com/) - [Natural Language Processing with Python](http://www.nltk.org/book/)
* making desktop apps with Python, [PyQt book is available to read free online](https://leanpub.com/create-simple-gui-applications/read)
* [Python Data Science Handbook by Jake VanderPlas](https://jakevdp.github.io/PythonDataScienceHandbook/)
* [Making Games with Python & Pygame](https://inventwithpython.com/pygame)
* [Cracking Codes with Python](https://inventwithpython.com/cracking/)
* [free-programming-books on github](https://github.com/EbookFoundation/free-programming-books/blob/master/free-programming-books.md#python)
* interactivepython also has [How to Think Like a Computer Scientist: Interactive Edition](https://interactivepython.org/courselib/static/thinkcspy/index.html)
* [A Whirlwind Tour of Python](https://github.com/jakevdp/WhirlwindTourOfPython)
* [A Byte of Python](https://python.swaroopch.com/)
* [Non-Programmer's Tutorial for Python 3](https://en.wikibooks.org/wiki/Non-Programmer%27s_Tutorial_for_Python_3)
* [Dive Into Python 3](https://www.cmi.ac.in/~madhavan/courses/prog2-2012/docs/diveintopython3/table-of-contents.html)

I also wrote an [example based tutorial](https://github.com/learnbyexample/Python_Basics), which is pending a revision from long time :-/
",1549429684.0
Practice Python by fixing errors,302,a48r7h,learnpython,https://www.reddit.com/r/learnpython/comments/a48r7h/practice_python_by_fixing_errors/,58,"I have created a GitHub repository to help absolute beginners practice Python by fixing errors. The exercises are meant for absolute beginners only. The errors have been designed to be extremely simple so that beginners can develop the momentum and confidence that comes from a series of small wins.

&#x200B;

By working through these examples, a beginner can hope to get better at:

* reading errors
* debugging
* reading and editing other people's code
* Googling for specific issues
* solving errors on their own

You can get detailed instructions on how to use the repository in the README section of the **GitHub repository:** [**https://github.com/qxf2/wtfiswronghere**](https://github.com/qxf2/wtfiswronghere)",1544254099.0
"From beginner to pro: Python books, videos and resources",307,5sjt3l,learnpython,https://www.reddit.com/r/learnpython/comments/5sjt3l/from_beginner_to_pro_python_books_videos_and/,49,A curated list of Python resources: http://pybit.es/python-resources.html,1486448203.0
"""for x"", ""for i"", ""for n"", for what?",303,mnfszu,learnpython,https://www.reddit.com/r/learnpython/comments/mnfszu/for_x_for_i_for_n_for_what/,120,"When writing  ""for x in"" or ""i"", ""n"", ""j"" etc... can someone explain what x, n, i or j stand for? are they interchangeable or do they each have a specific use?  
  
**EDIT**  
  
Thanks everyone. Your answers have all been super informative. Special thanks to u/netneoblog for really digging into it.  
  
This has seriously been a barrier to my understanding for some time as it's not something that ever really seems to be explained in tutorials.",1617970171.0
A Collection of Resources to learn Python,303,6zv0e0,learnpython,https://www.reddit.com/r/learnpython/comments/6zv0e0/a_collection_of_resources_to_learn_python/,14,"Hey, I have created this [MindWeb Board](https://mindweb.network/board/python-complete-master-python3) with a bunch of videos, articles, tutorials and exercises to learn python. It covers many things from the basics to machine learning. I hope it helps. I would also like to hear about great resources I have missed? ",1505314122.0
Is anyone using GPT or AI to help with learning?,303,12e078t,learnpython,https://www.reddit.com/r/learnpython/comments/12e078t/is_anyone_using_gpt_or_ai_to_help_with_learning/,144,"This shit is my 1 on 1 tutor right now and it's insane.

Will this be detrimental to my learning? Because I'm not really asking for answers, just asking about errors I'm getting, or what specifically I'm doing wrong and have it explain it to me, and I look for similar/new problems.",1680819878.0
it is my turn to announce that i have made my own project months after following tutorials :),302,l387ff,learnpython,https://www.reddit.com/r/learnpython/comments/l387ff/it_is_my_turn_to_announce_that_i_have_made_my_own/,17,"first of all i want to thank this subreddit in that it have been very helpful in my learning journey

what i made is a personal project to remind me to go walking few minutes before sunset everyday. this is the very first project i made in which i was not following a python tutorial. it's purpose is to remind me to walk outside a couple of minutes before sunset(which i obviously don't do now because of the quarantine) i use windows task planner to activate the script about a safe distance away from sunset in order not to waste resources on my computer by running it all day. then i normally set the alarm to 25 or 20 minutes before sunset using a simple GUI.

 sunset times vary on a week by week(or even day by day) basis which is why i cant use my normal alarm to do this

\#pull requests are welcome whether you are trying to learn pull requests or you have a helpful insight

[https://github.com/selehadin-cyber/sunset-alarm/tree/master](https://github.com/selehadin-cyber/sunset-alarm/tree/master)",1611389502.0
I’ve been on the Automate The Boring stuff textbook since April and I just got past Regex.,303,ilp4mi,learnpython,https://www.reddit.com/r/learnpython/comments/ilp4mi/ive_been_on_the_automate_the_boring_stuff/,90,"However, I’ve read a couple of posts where people gave advice; especially making a project to help capture the important python ideas. Or better still, branching to DS/ML or Web Development aspect of it to specialize in a particular field rather than learning it all because that’s difficult.                                             

1) Should I complete the ATBS textbook before diving into any of these other aspects, as above mentioned.

2) Do I need to know HTML, CSS and JavaScript before entering the Django/Flask world?

3)Since ATBS centers around just automating some tedious processes, can one just learn what’s in that book and claim to know Python? Is it valid in the job world? Most of these processes are being done by bots now [correct me if I’m mistaken], so isn’t ML/DS much more appreciated instead of knowing how to automatically open Zoom on your computer and stuff like that?

Thanks for your views.",1599119005.0
What's the point of Tuples?,302,u4qzai,learnpython,https://www.reddit.com/r/learnpython/comments/u4qzai/whats_the_point_of_tuples/,141,"I get that they're immutable, but so are lists that you don't perform modifications on. Are they just to fool proof not messing up your list accidentally, or do they serve some other purpose?",1650087401.0
It's not much but I'm proud of myself!,303,mbmuhz,learnpython,https://www.reddit.com/r/learnpython/comments/mbmuhz/its_not_much_but_im_proud_of_myself/,45,"Story from lurker.
I've decided to start and put in motion leaving my current job and move into a job I have a passion for. This happens to be IT or more specifically Network Security / Pentesting.
So I looked around and people where saying I should also learn a programming language so I chose python even though I was told rather to learn JS or C#. I started and I felt I could rule the world and started to love it but as I progressed I started to feel dumber and dumber not getting anything.

But today I really suprised myself in a test. 
I was asked to create a function that would only return unique numbers in a list and was trying to figure out a for loop.
And then suddenly it clicked I don't need to do that I could just return a set! This was a big win and massive moral booster. 
So to anyone in my shoes, if you feel you're not learning or nothing is going on, keep at it it's worth it for the small wins on the journey to learning this amazing language!

Ps thanks to this forum of great and informative people!",1616528242.0
My first python project,304,g60qui,learnpython,https://www.reddit.com/r/learnpython/comments/g60qui/my_first_python_project/,32,"Hi, r/learnpython!

I just finished my first python3 project!

It a web-scraper that scrapes the website [booking.com](http://booking.com/)  and it saves the result in a file.

You can set different parameters to  help in the search, to have less or more details in the output, change  output dir/filename and so on...

here is the repo [link](https://github.com/HexNio/booking_scraper)

I'm a beginner in python, so every advice is welcome!

PS: it's an **educational purposes only repo/project**

&#x200B;

edit: Thank you to everyone for your support and for your suggestions. I started implementing the easiest of your suggestions and i added a new feature (see the pinned entry in the ToDo List inside the repo). I will finish to implemets all the suggestions tomorrow. Thank you again for your support!

edit2: just refactored the code to made it more clean and partially adapted to the PEP-8 style",1587560690.0
"Today I learnt, 0.02 is not equal to 0.02",301,ppyek4,learnpython,https://www.reddit.com/r/learnpython/comments/ppyek4/today_i_learnt_002_is_not_equal_to_002/,90,"Try this:

    import decimal
    
    print(decimal.Decimal(0.02))

And the result will look like this:

    0.0200000000000000004163336342344337026588618755340576171875

&#x200B;

Like, what even..?",1631878323.0
How concerned should I be that I got a 53% on a Python interview challenge,298,oosibn,learnpython,https://www.reddit.com/r/learnpython/comments/oosibn/how_concerned_should_i_be_that_i_got_a_53_on_a/,133,"Hi, I've been a professional software developer in Python, PHP and JS for 2 years. I've built APIs and jobs using message queues in Python.

I'm looking for a new job in Python/Django/AWS and one of my interviews was a technical challenge. I got a 53% on it, which ironically was the 70th percentile LOL.

I feel bad and feel like I lost a good opportunity. The test was a quick 30 minute section all on fundamentals, which is something I don't really know very well because I program python in a specific way and I don't use all the features of Python.

For example, some of the questions were - if you set a = \[1,2,3\] and b = a, and do **del a**, what is b? I thought that since lists are mutable that it means b equals none. I don't know, I never use the del keyword. There were different permutations of class A {}, class B {}, what happens when you assign a new object, assign a reference, assign from within a function, what double underscores mean, etc...

Other questions were like what happens when you modify a class variable from within a constructor. Or how does \_\_setattr\_\_() work and you set the values inside using self, and whether it infinitely recurses. Some other questions were how does **with** work. I'm not sure, I always use try/catch.

I feel really bad and I know I could get better and stuff (every day is a new day and all that jazz), but I don't know why OOP in Python is so hard for me. It said I got a 20% on OOP section specifically LOL! I'm in shock right now! I've programmed in Java and PHP too. I wonder if maybe I'm mixing up languages in my head. I don't know if this stuff is better to study or dynamic programming is more important, that stuff I find really hard. But this I thought this would be a cinch.

On the other hand... I find I take a long time to debug applications in django. Empty POST responses, database exceptions, None references. Perhaps this is related... LOL.

How can I get better at this? Perhaps a study on the architecture of Python in terms of stack and heap. Maybe conversations with others about the Python language. I find I can learn things on my own... but to master something I really have to talk to others and ask questions, or I end up being skillful but carrying false facts with me for eternity.",1626882194.0
"ELI5 the purpose of ""self"" in a class.",301,ghln0h,learnpython,https://www.reddit.com/r/learnpython/comments/ghln0h/eli5_the_purpose_of_self_in_a_class/,71,"I've read and watched multiple tutorials on creating classes but still can't wrap my head around ""self""",1589195736.0
Do you write code out of your memory?,305,ta7qd5,learnpython,https://www.reddit.com/r/learnpython/comments/ta7qd5/do_you_write_code_out_of_your_memory/,122,"Hello guys,

I am learning programming at the moment and I am really struggling with writing code out of my memory.

I am doing python crash course and I am at the capital about pygame creating ships and so on. There are so many new elements that I have to learn about creating ships, how to create the ships, with classes that I never heard of.

How do you manage to learn those classes. How to create stages and so on. Do you have any advice for me?",1646832340.0
When do you know you're supposed to use a function?,298,hcy7rt,learnpython,https://www.reddit.com/r/learnpython/comments/hcy7rt/when_do_you_know_youre_supposed_to_use_a_function/,100,Noob programmer here. Now I'm wondering when you know that you have to define a function. I'm kind of in the tutorial hell and am in the process of escaping it. I know how to do things but I don't know WHEN to do things. Please help. I really like to code and want to get through these challenges that I'll face everyday when learning.,1592703349.0
"I wrote a beginners Guide to Python, might as well share it :P",299,6ioe5g,learnpython,https://www.reddit.com/r/learnpython/comments/6ioe5g/i_wrote_a_beginners_guide_to_python_might_as_well/,29,"https://github.com/fluffy-hamster/A-Beginners-Guide-to-Python

Hi guys, over the past month I've been busy hammering out an introductory guide to Python. We start out with the basics and over time move onto more advanced stuff (like any other course then, lol).

 What I do a bit differently though from most introductory guides i've seen is that instead of sticking to syntax discussions I spend a good deal of time focusing on some of the ""soft skills"" related to Python (i.e. a beginner friendly intro to coding style/readability, and Python Philosophy). 

Its not completely finished yet (I still have to do the final project stuff) But there is currently about 30 lectures of quality content (well, I hope its quality anyway :P).

As a disclaimer, I have about 3yrs experience with Python and I'm not (yet) a professional developer so please bare that in mind when you read it.  In fact, I'd very much appreciate experienced Python users checking it over for bugs/flaws and such.

On that note, if anyone wants to contribute please by all means. Beginners can help by pointing out what I can to better in order to teach.

Anyway, I'm starting to ramble now, I'll let you guys check it out and see what you think. peace.",1498075446.0
I created a website for learning finance and python together,299,68jxc1,learnpython,https://www.reddit.com/r/learnpython/comments/68jxc1/i_created_a_website_for_learning_finance_and/,35,"I recently created this website as a way to teach the two together, the hope being that the user learns how to apply python to solving finance problems. I'm hoping I can get feedback from people, or get the word out to anyone who is interested in these topics. The website is: http://financeandpython.com/

Edit: It's in Python 2 right now, but I'm re-writing for python 3 after feedback from everyone. Thanks to everyone for their suggestions.

Edit 2: Everything is in Python 3 now",1493611534.0
The old guy wants to be a python developer.,303,eeto7x,learnpython,https://www.reddit.com/r/learnpython/comments/eeto7x/the_old_guy_wants_to_be_a_python_developer/,71,"Am I taking too big of a bite?

I'm 59, I've been in IT since 2000, got ""typecast"" into call center work early on.  
Don't get me wrong, I'm good at it, and I learn fast but I may have played it safe for too long.  
Or maybe not.

In any case, I'm not a total stranger to coding, I've even built a couple of websites and made some money off of them. That didn't seem to lead anywhere but it was a long time ago too. I've been kind of playing around with Python and I find it kind of...intriguing, maybe even exciting, so I thought I would toss a few questions out to the community here.

1. Are there other technologies that I should learn along with Python?
2. What skill sets should I emphasize as I learn?
3. Is the Python API documentation robust enough that someone could function more or less independently if they understand it?
4. What areas should I expect to apply Python to as a job hunter? (Later on.)
5. Am I making a good choice as far as a skill that will be in demand?

Or is this just a bad idea and I should do something else?  
I'll know pretty soon if my desire to do this is sustainable, outside of that I am confident that I can develop the needed skills I just can't afford to go back to school where I would have more guidance so I have to build my learning structure from scratch. I suppose that has a sort of fatigue of its own built into it too though.

Thank you for any answers you give me.",1577149241.0
Here's a tutorial I made on creating a reddit bot using Python,300,5ury27,learnpython,https://www.reddit.com/r/learnpython/comments/5ury27/heres_a_tutorial_i_made_on_creating_a_reddit_bot/,81,"I've been making reddit bots for a few years and thought others might be interested in learning how to do so. I actually learned Python by making a reddit bot and just Googling things as I went along. You can watch the video here: https://www.youtube.com/watch?v=krTUf7BpTc0

Feedback is appreciated! Let me know if you have any questions.",1487414888.0
I'm trying to learn Python but the info isn't sticking in my head!,301,orfgye,learnpython,https://www.reddit.com/r/learnpython/comments/orfgye/im_trying_to_learn_python_but_the_info_isnt/,75,"Hello everyone, as the title suggests I'm trying to learn Python through a Udemy course online, but the info just aren't sticking in my mind! After I finish watching the subject and do a few excersises all the info feels like they just fly from my head in an hour or two, can anyone give some tips? Or point out what I'm doing wrong?

Edit: Wow didn't expect the post to blow up like this, thanks everyone for the help and tips, I'll keep notes of everything that you guys said and will resume my Python practice and studies. Thanks a lot again ❤️",1627232955.0
I fixed my resume with python,296,fd2ol0,learnpython,https://www.reddit.com/r/learnpython/comments/fd2ol0/i_fixed_my_resume_with_python/,33,"I made a PDF resume with google docs, but for the life of me I couldn't get rid of this blank 2nd page.  I would lower the fonts to where there wasn't anything close to the 2nd page, it wouldn't delete anything that was close tot the bottom of page 1, but nothing would get rid of it.  I looked into PDF editor tools, but most of them cost money to do anything more than read a PDF.  I'm not paying adobe 40$ a month just to edit one blank page off of one document.  Anyways, here is a simple script that will separate your PDF into individual pages and save them. I know its simple, but its nice to use a free resource and a little tinkering to solve your own problems.  Here's the code!

 [https://pastebin.com/NhLEvC3g](https://pastebin.com/NhLEvC3g) ",1583274131.0
"Learning Python 3? Our book, The Python Apprentice is free (as in beer) for today only.",298,5fajq0,learnpython,https://www.reddit.com/r/learnpython/comments/5fajq0/learning_python_3_our_book_the_python_apprentice/,92,"It's no longer Monday in the UTC timezone so the offer has now ended, but you can still get the book for a 75% discount until the end of November (UTC) with this link:

http://leanpub.com/python-apprentice/c/cybermonday2016

* * *

It's Cyber Monday so we're offering our book *The Python Apprentice* for free today with this link:

http://leanpub.com/python-apprentice/c/cybermonday2016

The authors of The Python Apprentice have well over two decades of Python experience between them. We started way back with Python 1.5.2, used Python extensively throughout the Python 2 era, and we've been using Python 3 on high-value commercial systems for five years.

*The Python Apprentice* covers the topics you will need to use daily to be effective with Python. The forthcoming books [The Python Journeyman](https://leanpub.com/python-journeyman) and [The Python Master](https://leanpub.com/python-master) will respectively cover techniques you need to use every few weeks and every year, and will be published during 2017.

We hope you find our book useful.",1480320332.0
I still don't understand the benefit of lambda functions,299,sat0l5,learnpython,https://www.reddit.com/r/learnpython/comments/sat0l5/i_still_dont_understand_the_benefit_of_lambda/,116,"Hi all,

I've read about lambda functions (for python and other languages), I can WRITE lambda functions just fine, but it seems to me that most places I use them they're just...functions with different syntax. I mean they take args, they return values sometimes. What am I missing here? If anyone has examples of problems they've solved with lambda functions that would also be very helpful.

Thanks!",1642942335.0
Is there's a Big O tutorial that will teach me like I am 7 years old?,297,ijasio,learnpython,https://www.reddit.com/r/learnpython/comments/ijasio/is_theres_a_big_o_tutorial_that_will_teach_me/,49,"Hi all,

I went online and tried to look after good tutorials that will help me get an understanding of Big O and how to tell what is the time complexity of the code I am writing (or any other code) and so far, I noticed that either the tutorials/articles are very good and easy to read but they end at a very basic coverage of the topic or they are too complicated and defiantly requires some kind of prior knowledge.

Is there's a tutorial or course that will teach me Big O and all the topics around it, preferably with Python from the ground up?

Thanks!",1598784046.0
How do I detect when someone joins a WiFi network?,300,ia4wgi,learnpython,https://www.reddit.com/r/learnpython/comments/ia4wgi/how_do_i_detect_when_someone_joins_a_wifi_network/,56,I was watching a Kalle Hallden video ( [https://www.youtube.com/watch?v=imN-vhi5ZWQ&t=82s](https://www.youtube.com/watch?v=imN-vhi5ZWQ&t=82s) ). The first idea that he creates is a really neat script that detects when someone joins the wifi network and tells you who it is. The actual code that he shows does not work and I was wondering if someone could tell me what I need to change to get it working.,1597486498.0
Coding practice,295,e60iao,learnpython,https://www.reddit.com/r/learnpython/comments/e60iao/coding_practice/,58,I recently completed a course on Python and straightway jumped to Hackerrank for practicing whatever I have learnt. But everything was going over my head. Can you all suggest some websites where I can start from basic problems and then gradually level up the difficulty?,1575471923.0
Update on my first Python interview to share my humble experience,297,qwt2uj,learnpython,https://www.reddit.com/r/learnpython/comments/qwt2uj/update_on_my_first_python_interview_to_share_my/,100,"Hello everyone. Last week I had a [post](https://www.reddit.com/r/learnpython/comments/qsfcsa/thanks_to_this_amazing_sub_i_got_my_first_job/) on this sub to thank everyone being active and helpful on this sub, so that I landed on my first Python interview. I'd like to share my little experience here for people who are in the same boat with me.

I got hired!

Disclaimer: it is only a part-time student job (80 hours/month) and also requires knowledge in game theory and behavioral economics. Still, working with Python is the main task where I will assist the lab experiment. 80% of the interview was about Python.

Question 1: Code a FizzBuzz sequence which prints 'Fizz' if the number is divisible by 3, 'Buzz' if divisible by 5, and 'FizzBuzz' if both, otherwise prints the number. I got through this one quite smoothly.

Question 2: Define a function that summarizes the value of all digits of a given number. This one is not easy one, at least for me. I stuttered a little bit, but tried to keep my cool and eventually used a while loop. 

Question 3: Check if a string is a palindrome or not. This sounded really hard because I didn't know what a palindrome was. So I had to kindly ask them. For those who don't know, a palindrome is a word that reads backwards exactly the same, like 'ahaha'. Once you know it becomes easier as it's just about slicing. I was nervous whether I got minus as I had to ask them its meaning.

Finally they asked if I worked with something using Python before, anything. I gladly showed them my small project on GitHub which I happened to [post](https://www.reddit.com/r/learnpython/comments/qjbk4p/my_first_useful_python_project_on_github/) 20 days ago in this sub and received so may helpful advices. I know, the concatenation of events sound like a dream but it really did happen. This was their response: ""Your dedication to the projects and its usefulness is beyond our expectation \*for economics students\*"". I breathed a load of relief and couldn't help feeling a rare iota of joy. Guys! If you are not trained academically in programming, develop your projects and build up your profile. They will certainly pay off somedays.

That's pretty much all about it. Once again I humbly thank everyone who did leave any comments or advices on my post and on other posts. These benevolent actions yielded you nothing but the sheer gratefulness from us learners, yet you are noble enough to continue doing so. You helped foster dreams more than you could know. 

I humbly know that it is just a very basic entry level student job where the questions are childplays for many of you experts. The job also requires advanced level of economics knowledge and speaking the local language, and not just Python. But without Python 100% I could never get the job. So I hope you don't mind me posting it here.

TL;DR: I got a basic entry level student job in Python thanks to learning daily from this sub and developing my projects following the advices of great people in this amazing community.",1637251789.0
Where do I actually begin with Python?,296,nm6gik,learnpython,https://www.reddit.com/r/learnpython/comments/nm6gik/where_do_i_actually_begin_with_python/,92,"Since 2018/2019, I've been trying to get myself to learn Python. I do not use it daily, but the possibilities of learning the language have constantly struck me. I tried using Datacamp; I've been attempting to learn via Automate The Boring Stuff. I've been trying Python Crash Course (the book), and it seems that nothing is going into my mind; I don't feel like I understand on absorbing anything.

What's my purpose for building Python? Generally upskilling myself. I use spreadsheets for data analysis and monitoring daily, and I'm currently using a manual data entry method. However, I don't expect Python to be helpful to my daily work. I want to explore the possibilities of what I can do with it.

In my mind, I have three end goals I wish to pursue or make from Python:

1. With some spreadsheet data, play around with Data Visualisation and see charts ""come to life"". (aka some form of Data Analysis)
2. I would like to build at least one Web App from Python
3. Telegram bots are a milestone I want to build - to automate specific prompts.

My struggles involve getting the fundamentals and understanding them. Even as I learn with the other methods, I can't even build a simple calculator on Python.

So my question to this subreddit is - what am I doing wrong to fully not comprehend this language, and how do I fully begin to grow progressively?",1622118978.0
I'm interested in programmers' workflow. Any programmers here can share your workflow?,296,iw1mvp,learnpython,https://www.reddit.com/r/learnpython/comments/iw1mvp/im_interested_in_programmers_workflow_any/,47,"**I'm so curious about how you programmers can code so fast and solve the problems so efficiently:**

* How do you usually approach a problem? When do you use pen and paper?
* In what situations and how often do you use Google and StackOverflow? Can you share some tricks about this?
* How do you tackle those unexpected things like errors and bugs? Also, if you got stuck, what'd you usually do?
* What if you couldn't fix the issues for the moment? What'd you do?
* If you're working on a big project, how do you manage the progress and prioritise tasks?
* Last but the least, how do you guys make clever use of IDEs?

*By the way, do you guys know any programmers streaming live, like on Twitch and Youtube?*",1600552706.0
"I've been using PyCharm to manage my project environment locally on my pc, but how do I get the project onto github in a way where others can try out my project without needing to pip install every external module I'm using in my python scripts?",296,hfjiwo,learnpython,https://www.reddit.com/r/learnpython/comments/hfjiwo/ive_been_using_pycharm_to_manage_my_project/,64,"I don't think I can just upload the entire project folder with venv folder and everything because github tells me there's too many files, and it's probably unnecessary to upload everything in its entirety to begin with. I'm just not sure where to start. I know that pycharm has git support but I don't know how to use it yet, or what that would mean when interfacing with github, or how I would accomplish what I want to in the title of this post with that support.",1593079478.0
Created random password generator in python. Your inputs are appreciated!!,295,ha5r85,learnpython,https://www.reddit.com/r/learnpython/comments/ha5r85/created_random_password_generator_in_python_your/,129,"    I read about python project ideas here yesterday and since I am a beginner , I liked the idea of random_password_generator. So here is my attempt. Please give me your insights. Thank you!!
    
    
    small = []
    big = [] 
    numbers = [] 
    special = []
    
    smallletters = 'abcdefghijklmnopqrstuvwxyz'
    bigletters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 
    digits = '0123456789' 
    special_char = '~`!@#$%&*()-=_+{}[]|:;""\',.<>/'
    
    for i in smallletters:
        small.append(i)
    for i in bigletters: 
        big.append(i) 
    for i in digits: 
        numbers.append(i) 
    for i in special_char: 
        special.append(i)
    
    the_big_list = small+big+numbers+special
    
    
    length = int(input(""How many characters long password do you want? ""))
    
    if not length or length < 0:
        exit()
    
    import random
    password = ''
    
    if length < 4:
        while True:
    	password+=small[random.randint(0,len(small)-1)]
    	length-=1
    	if not length:
    		break
    	password+=big[random.randint(0,len(big)-1)]
    	length-=1
    	if not length:
    		break
    	password+=numbers[random.randint(0,len(numbers)-1)]
    	length-=1
    	if not length:
    		break
    	password+=special[random.randint(0,len(special)-1)]
    	length-=1
    	if not length:
    		break	
    
    	print(password)
    
    elif length >=4:
        from_each_list = length//4
        remaining = length%4
    
    	for i in range(0,from_each_list):
    	    password+=small[random.randint(0,len(small)-1)]
    	    password+=big[random.randint(0,len(big)-1)]
    	    password+=numbers[random.randint(0,len(numbers)-1)]
    	    password+=special[random.randint(0,len(special)-1)]
    
    	if remaining and from_each_list:
    	    for i in range(0,remaining+1):
    		password+=the_big_list[random.randint(0,len(the_big_list)-1)]
    
    	print(password)

&#x200B;",1592319997.0
"My dog's daycare dumped about 800 pictures for her (and other dogs') ""camp day"". I used this as my first personal python project!",296,g5eox3,learnpython,https://www.reddit.com/r/learnpython/comments/g5eox3/my_dogs_daycare_dumped_about_800_pictures_for_her/,28,"So my pupper's doggy day care has ongoing camp days for the next 4 weeks, each week they dump all the pictures from that week onto a Flickr album, a singular album for all five days per week, potentially all coming days will also be dumped in that same album.

I found that the pictures has a ""date captured"" on each picture. Since I've only ever used Python for small things at work to automate some work for my coworkers, I took this opportunity to make my own personal use case for Python!

I'm still trying to figure out GitHub to share it on there for others to use, but in the mean time, the code is here:

[Updated code on PasteBin](https://pastebin.com/Wg7UBSne)

I know you can get a request from REST as etree, but I used JSON because I'm more familiar with it at this point, I might look into using etree instead later.

Any criticisms/recommendations are very welcome!

Edit: code improvements thanks to /u/toastedstapler and /u/Ran4

Edit 2: [Doggo tax](https://imgur.com/mzqwt5C)

Edit 3: Resolved issue where I had to create a new photoset call for every page, I now get the number of pages and loop over that. Also now I supply the URL and split to get the username and album.

[Original code here](https://pastebin.com/asgRHYUn)",1587473686.0
So Grateful!,299,f9ggqj,learnpython,https://www.reddit.com/r/learnpython/comments/f9ggqj/so_grateful/,22,"Ok, so over the last few weeks, I've been a fairly frequent poster in this Sub and would like to take a minute to thank everybody here for the helpful feedback and support! While I still have some time to knock out my CS minor, as a Math major at university, I will be using Python, NumPy or SymPy, Pandas, and Matplotlib, R and SQL heavily in the future. While somewhat intimidating to list, the great support you've all given has shown me that with enough time, practice, and feedback in the early stages of learning the base language, I can do it.  So, thanks to Mods and commenters alike for this awesome resource.",1582662043.0
Having to google every smallest thing while working on python,296,c8lit9,learnpython,https://www.reddit.com/r/learnpython/comments/c8lit9/having_to_google_every_smallest_thing_while/,107,"I am rather new to python and programming. While I have finished some introductory videos, I find that I can't remember the concepts very well at all. Currently, I am working on a small project using scipy and numpy. I find that I have to google every smallest thing! Is this the right way to learn? I found that my first response to something I am unsure of is not to think of solving the problem myself, but to google it. How can I build a strong foundation in this way?",1562142136.0
Why his code is better than mine?,291,sfnvs6,learnpython,https://www.reddit.com/r/learnpython/comments/sfnvs6/why_his_code_is_better_than_mine/,102,"Hello everyone!

My boyfriend and I don't have any cs background and currently we are learning python together. Today we got a quiz about function:  
""Take a **text** and a **word** as input and passes them to a function called **search()**; The **search()** function should return 'Word found' if the word is present in the text, or 'Word not found', if it's not.""

Here is my code:

    text = input()
    word = input()
    def search(text):
        if word in text:
            print(""Word found"")
        else:
            print(""Word not found"")
    search(text)

And here is the code of my boyfriend:

    text = input()
    word = input()
    def search(text, word):
        if word in text:
            return(""Word found"")
        else:
            return(""Word not found"")
    print(search(text, word))

Even though both of them can run with expected result, but with comparing, all of you can see it clearly that the code of my boyfriend is much more better than mine. 

So I'm confusing and need your help: 

What basic knowledge do I lack and what should I learn for better coding? Math, logic, syntax of python, experience(practise) or anything else? 

I'd appreciate any suggestions you could give me.",1643479793.0
Take the time to learn how to learn,295,9aez4b,learnpython,https://www.reddit.com/r/learnpython/comments/9aez4b/take_the_time_to_learn_how_to_learn/,19," When I was in high school, I never really challenged myself. Now this isn’t a bid to say “look at me, I’m smart”, because I wasn’t particularly smart. My parents had high standards, and I would work just hard enough to get grades that would keep them off my back.

**The downstream effects of this were terrible.** I was lazy in college, got grades “good enough” to stay in school, and my extracurricular activities consisted of playing way too many video games and occasionally drinking and partying with friends.

I found that I had started coasting in life: I was doing well enough to feed myself and put a roof over my head, but my guitar was collecting dust, my lack of financial planning was sabotaging my future, and my my scrawny frame and lack of self-care wasn’t turning any heads.

Cut forward a decade and I’ve been studying every productivity method under the sun for the gamified task/habit tracker I’m building. In other words, these days it is my job to learn, test and improve everything productivity. When I reflect on all I learned, I realized that I wish I had these resources when I was learning to program, so I thought I would share the best I've found with you:

* **First, learn how to learn.** It turns out that learning is a skill itself; a skill that, when practiced, can make you more efficient at learning anything. Coursera has a fantastic class called [“Learning How to Learn”](https://www.coursera.org/learn/learning-how-to-learn) that teaches how the brain learns efficiently, how to better remember what you learn, and how to avoid procrastination and “fake learning”.
* **Second, your mindset is essential.** Being kind to yourself is imperative to your success. I cannot emphasize enough how important it is to be kind to yourself, especially when you fail or fall off the bandwagon. The more you are mean to yourself, the more you build a habit of avoiding important things in your life. Here’s an example of how this works: when I would avoid working out, I would often think things like ""I can't be disciplined enough to workout consistently, what's wrong with me?"". Instead of those thoughts, I changed my narrative to ""It's OK that I missed a workout, everyone skips a workout day sometimes. All that matters if that I will get better if I keep trying"", or ""It's alright that I'm not doing the optimal workout program, if I show up and workout that's great"".
* **Third, add emotional journaling.** This 3 minute activity had a huge impact on my mood and willingness to learn when I wanted to. All you do is sit, observe your feelings, and try and label them as accurately as possible. This works because it allows you to understand your emotions. When you understand your emotions, you can take more control over your life: instead of your emotions leading your actions, you can lead them. [Pacifica](http://www.thinkpacifica.com/) is a great app that makes it easy to start and stick with emotional journaling.
* **Fourth, get a task/habit tracker.** It’s hard to see just how much learning you accomplish day-to-day until you start tracking what you do. It is also hard to keep yourself focused when you carry everything you have to do in your head. But to make using a tracker really effective, you need to take the time to congratulate yourself for you successes.

A point about congratulating yourself on your successes: there are many ways to do this, and you should try multiple strategies until you find one that works for you. One strategy is to take a moment whenever you cross off an item and consider how hard you had to work to earn it. If you like video games another is to use a gamified task/habit tracker. I currently use the one I’m building because I love the feeling of getting rewards in a video game.

If you'd like to try it out, you can do so [here](https://www.taskheroics.com/signup/3PgojJ7wCDAQbMd86?utm_source=reddit&utm_campaign=r-productivity).

**Tl;dr:** I've studied and testing tons of productivity methods. I wish I had the resources I have now when I needed to study, so I thought I'd share the best of them with you.",1535284077.0
Can someone tell me what are the best resources to master data structures and algorithms in Python.,295,scde6w,learnpython,https://www.reddit.com/r/learnpython/comments/scde6w/can_someone_tell_me_what_are_the_best_resources/,49,Can someone please tell me where I can find the best resources to study and master data structures and algorithms in Python.,1643116277.0
Am I the only one?,290,xdo7oo,learnpython,https://www.reddit.com/r/learnpython/comments/xdo7oo/am_i_the_only_one/,55,"Am I the only one that makes someone try out each and every project they code?

Every time I complete a new project, no matter how small, I have to show my wife. 

I know she doesn’t really care about the timer I coded or the potential drinking game I coded, but she always tests my code. Sometimes, she even offers suggestions that make me go a step or two further with the code, making me practice more. 

Im just so appreciative that she is willing to say “wow” just to make me feel good and to help push my learning.",1663117621.0
Seeing progress,295,lt3xhm,learnpython,https://www.reddit.com/r/learnpython/comments/lt3xhm/seeing_progress/,33,"Please forgive me if this isn’t the right spot, but I feel I need to say it for fellow beginners.

I’ve been going at this for about 5-6 months pretty steadily. Lately I have wondered how much I’ve actually learned or if I’ve been wasting my time.

Then I opened my very first project. I remember all the frustration I experienced, all the Google searches I did during the near month it took to complete. And how proud I was to complete it.

Today I was able to rework my code to make it not only run faster, but required half the lines. That has been an even more amazing feeling. And in hours vs weeks and days.

Just keep on pushing. Even when it seems like you’re not making progress. Odds are you’re doing so much better than when you started.",1614363145.0
This is fun!!!,291,k6cu8c,learnpython,https://www.reddit.com/r/learnpython/comments/k6cu8c/this_is_fun/,53,I recently decided to learn python. Today I did my first two lessons and then messed around a bit with what I’d learned. This is awesome! Now I’m mad I didn’t start until now. Can’t wait to learn more.,1607052395.0
"2,000 free sign ups available for the ""Automate the Boring Stuff with Python"" online course. (March 2023)",294,11famwf,learnpython,https://www.reddit.com/r/learnpython/comments/11famwf/2000_free_sign_ups_available_for_the_automate_the/,15,"UPDATE: The codes are used up. You can still watch [the first 15 videos on YouTube](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW). You can also go to [the course page](https://www.udemy.com/course/automate/) and click ""Expand All Sections"" and click the ""Preview"" link for each video to watch them on the site.

If you want to learn to code, I've released 2,000 free sign ups for my course following my Automate the Boring Stuff with Python book (each has 1,000 sign ups, use the other one if one is sold out): 

~~https ://udemy. com/course/automate/?couponCode=MAR2023FREE~~

~~https ://udemy. com/course/automate/?couponCode=MAR2023FREE2~~

Udemy has changed their promo code and severely limited the number of sign ups I can provide each month, so only sign up if you are reasonably certain you can eventually finish the course. [The first 15 of the course's 50 videos are free on YouTube if you want to preview them.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

YOU CAN ALSO WATCH THE VIDEOS WITHOUT SIGNING UP FOR THE COURSE. All of the videos on the course webpage have ""preview"" turned on. Scroll down to find and click ""Expand All Sections"" and then click the preview link. You won't have access to the forums and other materials, but you can watch the videos.

**NOTE: Be sure to BUY the course for $0, and not sign up for Udemy's subscription plan. The subscription plan is free for the first seven days and then they charge you. It's selected by default. If you are on a laptop and can't click the BUY checkbox, try shrinking the browser window. Some have reported it works in mobile view.**

Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.

Some people in India and South Africa get a **""The coupon has exceeded it's maximum possible redemptions""** error message. [Udemy advises that you contact their support if you have difficulty applying coupon codes, so click here to go to the contact form.](https://support.udemy.com/hc/en-us/requests/new?type=student) If you have a VPN service, try to sign up from a North American or European proxy.

**I'm also working on another Udemy course** that follows my recent book ""Beyond the Basic Stuff with Python"". So far I have [the first 15 of the planned 56 videos done. You can watch them for free on YouTube.](https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&index=1)

Side note: My latest book, Python Programming Exercises Gently Explained is a set of 42 programming exercises for beginners [for free](https://inventwithpython.com/pythongently/) or as a [99 cent ebook](https://www.amazon.com/Python-Programming-Exercises-Gently-Explained-ebook/dp/B0BGYJ7G6T/).


**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",1677693873.0
Like Duolingo but for Python?,293,ygazgb,learnpython,https://www.reddit.com/r/learnpython/comments/ygazgb/like_duolingo_but_for_python/,75,"Looking for recommendations on the best resources for learning Python in a similar format as Duolingo. Doesn’t have to be the exact same, but resources that break lessons up into basic and repeatable exercises.",1667021128.0
my first 150 hours of programming and my flask project,289,f2cveb,learnpython,https://www.reddit.com/r/learnpython/comments/f2cveb/my_first_150_hours_of_programming_and_my_flask/,48,"hi 2 months ago i wrote a post about my first 100 hours of programming which you can find it here 

 [https://www.reddit.com/r/learnpython/comments/e8uo6c/my\_first\_100\_hour\_of\_learning\_programming28\_days/](https://www.reddit.com/r/learnpython/comments/e8uo6c/my_first_100_hour_of_learning_programming28_days/) 

&#x200B;

photos: [https://imgur.com/gallery/59SIuwM](https://imgur.com/gallery/59SIuwM) 

Due to work and some minor health issues i couldn't keep up with my coding streak (100 hours of coding in 28 days). So here is what i have done so far.

100-105 hours : i rewrote my pyqt5 gui this time without using qtdesigner. qtdesigner created some unreadable and complicated for me code so in order to learn better i had to delete my program and rewrote it from the first line this time using my own code. The final product was almost half the lines of the original one. The problem is that even thought people say that qt is a powerful gui creator i never managed to create complicated stuff with it.Maybe i don't have the coding knowledge, maybe the documentation isnt't noob friendly and rich i had to give up and leave my project unfinished. 

this is where i decided that learning and writing gui in the form of a webapp might be more efficient and greater skill to have, so i started reading about python's web frameworks with the goal to write my fitness app in mind. The 2 obvious choices where flask and django, i picked flask cause i heard that is more begiener friendly.

105-106: intalled flask and found some tutorials online, so excited to learn something new. One hour later i had to give up cause i realized that i need to know even some basic html and css to write a web app. 

106-115:found a udemy course in front end web developing and started learning about html and css. in  the meantime i watched millions of youtube videos on the subject and started to design on paper how i want my app to look like. i decided i want an admin dashboard look with a sidebar and graphs and data on the central body. i watched more videos about flask and html when i found about bootstrap. 

115-119: for the next 4+ hours i tried to download and use premade bootstrap dashboard templates but for some reason i couldnt make it work with flask. i tried various fixes but due to being a noob i decided to give up complicated premade templates and create my own ugly and chaotic front end.

119-123: created the front-end of my web app.

123-132: started a youtube flask course by corey schafer. i tried to watch this tutorial before when i knew the basics of flask with no success it was too complicated for me. Now that i knew the basics of flask and also html and css this tutorial was the best thing i could find. i coded along watching corey's tutorial but instead of creating the blog he was making i used the same techniques to write my own app. i created an sqlite database where the user can log in his past activities data. Then i used this data to create some very complex graphs and tables about the runners fitness

132-147: it took me 15 hours maybe more to create 3 graphs. i used pygal in the begiening but due to a bug i had to switch to bokeh. i consider this graphs very complex and i learned many things in the process. in one graph i created 3 different lines with show the fatigue form and fitness every single day until today. This was quite hard for me cause not only the equations were not simple but also i wanted my graph not to show one dot for every activity but one for every single day even if that day you didn't exercised at all. so i had to create a dataframe with one entry per day from the first activity until today and then check which of these days there is a logged activity. i also created some tables in which you can see your aerobic and tempo speed depending on your current fitness level. all these ideas weren't mine to start with, there are apps that do pretty much the same but they are not open source for me to get some ideas on how they work. also the table with the speeds is something all these apps don't have and i am happy that i created that for mine.

So what's next

1) i want to make the front end prettier

2) learn how to use github and share the code with you. People can benefit from it and also you might give me some good insights about how to write my code and what to do from now on

2) add  ""delete activity"" functionality, right now i cant delete past activities

3) create one more page with a personalized running programm depending your current fitness level and past weeks activities

4) create a register and log in for new users page and functionality. This will be the hardest, i dont even know if a noob like me can pull this off. 

5) gather data from real runners and make better equations about the training speeds and zones. Right now i used data from my own runs to create a scatter plot about different speeds and heart rates. i created a linear fitting line and found it's equation. with this equation i can give you running paces and heart rate zones depending on your fitness level.

&#x200B;

right now my app can only work on local host cause i dont have multi users functionality. So in the future i want to either host it online if i manage to do (5) or somehow package it to work offline with an sqlite database with only one user

some people might think that i am obsessed with running. well i am not! i workout only recreationaly but i love data and i have a fitness watch and heart rate monitor. when i started learning programming i realized that i can use all this data to create apps as i learn, i dont like the idea of using weather data and other online dummy data. i like to create apps and scripts which i can actually use. i am an amateur photographer so maybe my next step will be to learn how to compine this with programming.

sorry for typos and bad english!

I hope this post will give you the motivation you need to go on in your coding journey, also any insights about how to proceed would be very helpful especially from people with more experience than me.  Feel free to reply or send me pm about anything, please just don't send me pms like ""help me learn code"" i would love to help you but please say at least ""hi"" first!!!


!!!!
EDIT: i managed to learn the basic of github and uploaded my project there, feel free to check it out, someone told me about having a dependancy file or something, i don't know how to do that so for now check my imports

https://github.com/Constantinepapp/FitnessBot
!!!!",1581446898.0
"Self-taught people, how did YOU learn Python?",290,609p5x,learnpython,https://www.reddit.com/r/learnpython/comments/609p5x/selftaught_people_how_did_you_learn_python/,184,"You can also add at what ""level"" you are/what you are doing with the knowledge. Thanks!

Edit: Didn't expect for the thread to have this many answers. I learned a lot. I especially appreciate the many perspectives and learning paths. Thank you, everyone!",1489924178.0
Why is Python so used in the machine learning?,291,rqmuxl,learnpython,https://www.reddit.com/r/learnpython/comments/rqmuxl/why_is_python_so_used_in_the_machine_learning/,100," 

I'm trying to make a program, that uses machine learning, and even just googling ""best language for machine learning"" will lead me to Python.

Why Python?",1640717817.0
Tips on getting job as a python developer,292,mybjj8,learnpython,https://www.reddit.com/r/learnpython/comments/mybjj8/tips_on_getting_job_as_a_python_developer/,70,"Hi all, I am currently into sales and marketing for 10 years. Prior to that I was a c++ developer for 3 years and hold an engineering degree. I am trying to build my knowledge so I can get a job as a Python developer. I am currently reading Python crash course book and have completed the first 11 chapters. I would really appreciate some tips on finding a job. Thanks a lot in advance.
omplete this book ?",1619367404.0
Tip that took me too long to realize:,291,km2axg,learnpython,https://www.reddit.com/r/learnpython/comments/km2axg/tip_that_took_me_too_long_to_realize/,34,Make template files that have your imports ready and notes included for similiar projects,1609199895.0
How can I be motivated while learning Python?,289,i7ly97,learnpython,https://www.reddit.com/r/learnpython/comments/i7ly97/how_can_i_be_motivated_while_learning_python/,87,"I have been learning Python for the past 5 months. Recently, due to examinations, I took a break for about 20 days. Now I am really unmotivated to do it again. Please let me know how I can regain my motivation.

Thank you!",1597123855.0
Made my first python project,292,fr7ypq,learnpython,https://www.reddit.com/r/learnpython/comments/fr7ypq/made_my_first_python_project/,57,"This is my first project after studying python for 20 days. I tried to use everything I learned as a beginner. With this project, I tried to scrap a website ([http://patorjk.com](http://patorjk.com/)) to get and create a database for ascii arts. Then wrote another python program to print the collected ascii arts.  I have included around 50 different fonts. Although it has a lot of issues :( , I am very proud that I built this without referring anything related to my project. Clone or download my git repository [https://github.com/Henoxx/ASCII-ART.git](https://github.com/Henoxx/ASCII-ART.git) and try it. I would love to hear any comment from you as this is my first project and am a total beginner. This community helped me a lot in learning python. Love you all!

    from ascii_art import art
    
    print(art('hello'))",1585497163.0
"What is the meaning of ""python is a script based language""?",287,17pr835,learnpython,https://www.reddit.com/r/learnpython/comments/17pr835/what_is_the_meaning_of_python_is_a_script_based/,271,I was talking to someone (who claimed to be a programmer) about my personal journey on learning python. He said something like this: python is not worth learning because it is a script based language. You can learn another language instead. What does that mean actually?,1699352526.0
I was learning Python 2 for a week and didn't know Python 3 was out there,287,wiysvl,learnpython,https://www.reddit.com/r/learnpython/comments/wiysvl/i_was_learning_python_2_for_a_week_and_didnt_know/,73,I was learning Python 2 at codecademy currently but I got curious about Python 3 and people say it's better than Python 2. Should I drop Python 2 and learn Python 3 instead?,1659930826.0
Where and how can I find some projects with steps to get more experience coding more than terminal programs,291,n9tnut,learnpython,https://www.reddit.com/r/learnpython/comments/n9tnut/where_and_how_can_i_find_some_projects_with_steps/,39,"More specifically, I really want something that walks me through how to write and otherwise develop some kind of program to get hands-on experience in what python can be use to do.

I am, for all intents and purposes, between novice and intermediate when it comes to python. I know the language, but I'm only familiar with the standard library. 
I finished the codecademy python course over a year ago now, but didn't get much further into it because I was more or less left in the dark as to the more advanced functionality of python, like where to find and learn new libraries and read and write files more systematically. 

I really want to get my feet wet when it comes to software development, but I'm a terrible self-teacher, so what would really help is something to help me see just what this incredible language can do (and do some of it myself!)",1620727986.0
I’m definitely starting to warm up to Python,292,h7e21n,learnpython,https://www.reddit.com/r/learnpython/comments/h7e21n/im_definitely_starting_to_warm_up_to_python/,71,"I’ve finally taken the plunge into Python and it’s been about a week so far. Coming from JavaScript, I initially couldn’t stand how there’s no semi-colons, curly braces, parens, etc. because personally, I like sectionalized code blocks and explicit ends to statements/expressions. 
It wasn’t until today that I finally began to see the true beauty of Python. I was solving a challenge that I had previously seen as a JS challenge a few weeks back. I had to make a dictionary from a string that had each letter of the string as a key and the number of times they occurred as the key’s respective values. 
I remember in JS, I had to write a couple of lines code to solve it. However, with Python it was a one-liner dict comprehension. That’s when everything clicked. I can’t wait to learn more and dive in deeper.",1591936553.0
"Almost finished 'Automate the Boring Stuff with Python', What to do from here?",289,f0u0q8,learnpython,https://www.reddit.com/r/learnpython/comments/f0u0q8/almost_finished_automate_the_boring_stuff_with/,94,"As title says, with zero programming background I nearly completed the book. (Had hard time with some parts but managed get over them after some time, had to pass some projects too...)

Yesterday I started codecademy's python exercises and at around 60%'ish... I'm interested in data science and wanna work with 'pandas' etc. But I still don't know if my knowledge is enough to start that.

So question is, shall I install 'Conda' and start working on data sheets and risk myself to get overwhelmed or what excercises I can do before I get more fluent with the language...

Any recommendations?",1581180220.0
"To admins: is it possible to add a ""please be precise"" and a ""please use code formatting"" reminder for new posts?",290,e3cpnm,learnpython,https://www.reddit.com/r/learnpython/comments/e3cpnm/to_admins_is_it_possible_to_add_a_please_be/,28,"Dear [wub\_wub](https://www.reddit.com/user/wub_wub) ,  [xiongchiamiov](https://www.reddit.com/user/xiongchiamiov) ,  [novel\_yet\_trivial](https://www.reddit.com/user/novel_yet_trivial)  :-)  


There are many ""new to Python please can you help me?"" post with 20 lines of not formatted code and ""it gives an error"" without giving the accurate error, and I think this could be partially fixed by adding 2 reminders. One saying ""please be precise: which library do you use? which error do you get?  etc..."" and ""please use line or block code formatting so other can easily understand your code. Look for the 'inline code' and 'block code' buttons"".

(Someone will probably phrase it way better as I'm not a native speaker.)

&#x200B;

I also think placing the ""code block"" button beside the ""inline code"" button with vertical separators around would be a good idea to encourage proper code formatting.

&#x200B;

Anyway: thanks for moderating this subs, as I really enjoy participating in it! :-)",1575020645.0
"While I am learning Python, what else should I be learning to supplement my resume?",289,acz07w,learnpython,https://www.reddit.com/r/learnpython/comments/acz07w/while_i_am_learning_python_what_else_should_i_be/,119,"I plan to spend the next year filling my resume with relevant experience so I can begin to apply to Python Developer positions. I am currently a Computer Science student and have two years until I finish my degree, I would like to get a JR Python Developer position with one year left of schooling. 

&#x200B;

I just recently started reformatting my resume to be more targeted towards the role I am trying to get (current career is in finance so my resume was highlighting some pretty irrelevant facts). I noticed as far as my technical experience goes I am quite limited.

&#x200B;

I also noticed that application knowledge along with language knowledge is severely lacking. I chose to learn GIT and GITHUB in order to start building out my portfolio and be able to write on my resume I am experienced in repositories.

&#x200B;

What else would you recommend I look into, should I experiment with some Python modules and list them on my resume? Should I work on SQL if I want to be a python developer? I am open to suggestions, thank you very much.",1546726792.0
So I’ve been teaching myself python for 7 months,289,ngq66p,learnpython,https://www.reddit.com/r/learnpython/comments/ngq66p/so_ive_been_teaching_myself_python_for_7_months/,95,"
What started out as quarantine boredom and discovering michael reeves turned into so much more I want to make this into a career path but because I’m self taught I have no idea if I’m making good progress or am I just doing the same thing.

I’ve been having loads of fun watching tutorials,taking notes, and making self projects to prove to myself I’ve learned something other than just blindly copy and paste code.

I know it’s a lot to ask but can someone look at my GitHub and see if I’m on track to getting a job by the end of the year maybe next year I would really appreciate this I am very comfortable with pythons syntax and basics but I don’t think that’s enough to become a full stack dev.

I also read on here that creating a online presence would help so I made a business Instagram account to show off my projects that link to my portfolio website and my GitHub.

P.S. my portfolio website is responsive but I’m still working on making it look better 

https://dartsams.github.io/main_index.html

https://github.com/DartSams

EDIT
Thanks to everyone for the advice and the compliments I did not expect this many people to look at my projects thanks u all very much.

Because everyone keeps asking on how I started 

In the beginning I watched https://youtu.be/rfscVS0vtbw it’s a 4 hour video but I split it up to 4 days of taking notes and studying.After that I spent sometime on edabit,w3schools,codewars,and other websites I don’t remember edabit and codewars give a bunch of practice problems and u can sort them out in difficulty at first even the easiest problems we very difficult and I couldn’t answer any of them without looking at the comments to see the answer.

this made me feel like I wasn’t actually learning anything but I knew I had to keep at it because so far I was struggling with everything but I was also having fun a couple months went by and I was starting to get better turns out this knowing some stuff then struggling and then starting to get better again was the dunning Kruger effect so after I was kinda comfortable writing the basics of python I looked at many websites of beginner python projects I was able to do some of the beginner ones.

so I looked at the advanced projects and 1 of them was blackjack so I tried to make that but quickly learned I was not ready for it because I had no clue how to start do I have up on it for a while and spent my time watching more YouTube videos taking notes a few of the yourubers I subscribed to were tech with Tim,randy,webdev simplified,codemy,the codex,and many others during this I learned about OOP and this was amazing I knew this could open many doors to future projects and it has so eventually I tried my hand at blackjack again this time I knew to divide up the project into smaller task like defining what a card was this was a easy task for OOP and I just did that everything like dealing the cards,standing,double down so I finished the basic console version of blackjack.

after that I just spent some more time looking at beginner or intermediate projects on random websites trying to do them for a while it felt like I wasn’t making much progress but I just kept at all the whole still taking notes and loving every second so long story short I have a lot of time on my hands because of the way my college handles classes so I use that time instead of watching gaming videos which I still do but now most of the time I’m just taking notes so really I just spend time on YouTube and here Reddit looking at others code and finished projects and try to do them myself.",1621483274.0
Are there any books or videos that describe how to organize large projects?,287,mxwdpj,learnpython,https://www.reddit.com/r/learnpython/comments/mxwdpj/are_there_any_books_or_videos_that_describe_how/,35,"Just what the title says. It's incredibly easy to find basic programming tutorials, but I feel I'm moving beyond them. What I need is a guide to creating large code bases, so that they are well organized and maintainable. I honestly don't know where they teach this stuff. Maybe I should be able to just deduce what I need to know from looking at large projects on Github, but I think some further clarification would be tremendously helpful. Surely some entrepreneuring individual must have created some content to address this issue by now.

EDIT: Python specific resources would be great, but I'm willing to be language agnostic for the sake of learning this stuff.",1619309071.0
Can I directly jump into a python project if I am proficient in C and can just look up syntaxes and stuff in python along the way?,290,kt0uij,learnpython,https://www.reddit.com/r/learnpython/comments/kt0uij/can_i_directly_jump_into_a_python_project_if_i_am/,96,"I never formally learnt python but I know C and I need to work on a project to implement curve fitting in python. Can I directly jump into this or are there any basic concepts in python I should master first? If so, what are they?",1610106090.0
I wrote a Program to scrape Prices of Computer Parts and sort them according to their price,286,f02ver,learnpython,https://www.reddit.com/r/learnpython/comments/f02ver/i_wrote_a_program_to_scrape_prices_of_computer/,38,"I found myself checking the following websites almost everyday and comparing the prices (as I am going to be building a Computer some time soon), and decided to automate that task.

 [https://github.com/VighneshPath/Content-Aggregator](https://github.com/VighneshPath/Content-Aggregator) 

Any suggestions/crticism/feedback?",1581038670.0
Python project ideas for upper beginner/intermediate,287,t9jjyy,learnpython,https://www.reddit.com/r/learnpython/comments/t9jjyy/python_project_ideas_for_upper/,68,Does anyone have some projects ideas to recommend or some kind of sites/resource to get inspired?,1646754138.0
Made my first GUI using Tkinter,285,hksrmr,learnpython,https://www.reddit.com/r/learnpython/comments/hksrmr/made_my_first_gui_using_tkinter/,57,"the app calculates Lean Body Mass, TDEE, and Macros for the type of diet you select.

It's my first attempt at GUI and would love to hear any feedback.

[https://github.com/bexxmodd/MacrosCalculator](https://github.com/bexxmodd/MacrosCalculator)",1593816973.0
Is it legal to write a Python script that fills job application forms on a website?,291,smhc2m,learnpython,https://www.reddit.com/r/learnpython/comments/smhc2m/is_it_legal_to_write_a_python_script_that_fills/,99," 

Hi,

I decided to write a python script that can automate some portion of the job application process. But I do not understand the legality of automating website tasks. I will not be requesting any data from the website's server, so I think there should be no risk of getting banned. However, most of the articles and discussions that I have read tell me that the use of a script on any website is illegal. But all of those scripts focused on requesting data from the servers. So I am a little confused on whether or not my script belongs in the same category. Can you use a script to interact with a website and perform an action without any negative consequences?

An individual already made exactly this project and published a youtube video about it that became semi-viral.

[https://www.youtube.com/watch?v=nRmrEC5WnzY&t=162s](https://www.youtube.com/watch?v=nRmrEC5WnzY&t=162s)

So based on that precedent, I feel my project idea is in the clear. But I would like an expert's opinion.",1644208664.0
"I am on day 8 of 100 days of code on Udemy. I made a project where I've inputted all my receipts of purchases from grocery stores, The point of this project is to input my grocery list before I go s hopping and have it give me an estimated cost. This is my first project, but make me cry :)",285,qquvp5,learnpython,https://www.reddit.com/r/learnpython/comments/qquvp5/i_am_on_day_8_of_100_days_of_code_on_udemy_i_made/,41,"    #This proram the user (me) inputs their grocery list prior to going shopping, and is able to veiw an estimate of the total stores.  This program assumes they are shopping from the same stores each week.  A dictionary containing items and their prices I believe is important to use in this program.  I am willing to input all my own weekly grocery items alogn with their costs.#
    
    
    
    
    #Check to see if key exists in dictionary
    #add key and value to dicitonary
    from itertools import repeat
    
    grocery_index = {""instant oatmeal"": 2.49, ""buffalo chicken tenders"": 6.23, ""banza pasta shells"": 3.00, ""spoon roast"": 25.00, ""chia seeds"": 4.99, ""olive oil"": 7.49, ""mini peppers"": 3.99,  ""balsamic vinegar"": 2.29,  ""vitamin d"": 4.99, ""almonds"": 5.99, ""riced cauliflower"": 1.99, ""rice"": 4.49, ""frozen blueberries"": 2.49,
    ""chicken breasts"": 9.79, ""eggs"": 3.79, ""gf bread"": 4.49, ""grassfed milk"": 4.99, ""kerrygold butter"": 3.49, ""carrots"": .89, ""dish soap"": 2.99,
    ""honey"": 5.99, ""potatos"": 3.49, ""celery"": 2.69, ""red onion"": .99, ""bag of onions"": 2.99, ""onion"": .69, ""tomatos"": 2.99, ""artichoke hearts"": 2.49,
    ""multivitamin"": 11.99, ""jalapeno peppers"": 1.69,""gf chicken nuggets"": 3.69, ""mandarins"": 3.29, ""lemon"": .39, ""asparagus"": 2.29, ""avocado"": 1.49, ""salmon"": 9.39,
    ""iceberg lettuce"": 1.69, ""whole chicken"": 15.22, ""hummus"": 3.69, ""garlic"": 3.18, ""snow peas"": 2.49, ""kale"": 3.69, ""bananas"": 1.75,
    ""heavy cream"": 2.29, ""peppers"": 3.99, ""mini cucumbers"": 1.99, ""beef broth"": 2.49, ""broccoli"": 2.49, ""ground beef"": 6.99,
    ""chicken pot pie"": 11.99, ""baby spinach"": 5.29, ""pepper jack cheese"": 2.5, ""df ice cream"": 4.69, ""hard goat chedder"": 2.99,
    ""kefir"": 2.99, ""cottage cheese"": 2.39, ""milk"": 1.79, ""raos sauce"": 8.99, ""chick pea pasta"": 2.5, ""dark chocolate chips"": 4.99,
    ""banza pasta shells"": 3.49, ""gatorade powder"": 2.99, ""macaroni and cheese"": 2.59, ""breakfast sausage"": 2.5, ""df butter"": 4.39,
    ""true lemon"": 2.00, ""tea tree soap"": 4.99, ""paper towels"": 12.99}
    
    #I open the program and am assined a list for input
    my_list=[]
    
    #Havent purchased anything yet
    cost = []
    
    #function to view their total cost
    def grocery_total(grocery_index, my_list, cost):
      while True:
    
        for x in my_list:
    
            if x in grocery_index.keys():
                cost.append(grocery_index[x])
    
            elif x not in grocery_index:
    
                break
        amount = (sum(cost))
        print(f""${amount}"")
        prompt = input(""Enter 'quit' to exit"")
        if prompt == 'quit':
            return cost
    
    # function to veiw or remove items from their list
    def grocery_list(my_list, grocery_index):
      while True:
        print(my_list)
        prompt = input(""Enter 'remove' to remove an item or 'quit' to return\n"")
        if prompt == 'quit':
          return my_list
        elif prompt == 'remove':
          while True:
            item_removal = input(""Enter an item to remove, or 'quit' to return\n"")
            if item_removal == 'quit':
              return my_list
            else:
              my_list.remove(item_removal)
              print(my_list)
    
    
    #Sets main menu
    def main_menu(my_list, grocery_index, grocery_total):
    
      while True:
    
        menu = input(""Enter\n'list' to view your list\n'input' to add items to your list\n'total' to view your current cost\n"")
    
        if menu == 'input':
          make_a_list(my_list)
    
        elif menu == 'list':
          grocery_list(my_list, grocery_index)
    
        elif menu == 'total':
          grocery_total(grocery_index, my_list, cost)
    #able to enter amount so I am not typing cottage cheese 5 times. code should add 5 cottage cheeses if I input a qty of 5
    
    #function to make a grocery list
    def make_a_list(my_list):
      print(""Enter list\nType 'quit' to exit to main menu.\nType 'remove' to remove the last entered item."")
      print(""Type 'qty' to input multiple of a single item."")
      print(""Type 'search' to verify an item in list."")
    
      while True:
        unfounded_items = []
        item = input()
        my_list.append(item)
    
        if item == 'remove':
            my_list.pop() #removes 'remove' from list
            my_list.pop() #removes the last inputted foor from list
    
        elif item == 'qty':
          my_list.pop()
          item = input(""Enter the item\n"")
          if item not in grocery_index:
           unfounded_items.append(item)
           print(f""{unfounded_items} not found"")
           break
           make_a_list(my_list)
          qty = int(input(""Enter the qty\n""))
          my_list.extend(repeat(item,qty))
    
        elif item == 'search':
    
          my_list.pop()
          search = input(""Type item to search.\n"")
    
          if search in my_list:
    
            duplicates = my_list.count(search)
            print(f""Yes, {search} has been added {duplicates} time(s)."")
    
          else:
            print(f""No, {search} has not been added."")
          print(""Enter items to add to your list."")
    
        elif item == 'quit':
            my_list.pop() #This line is to remove quit from the list
            return my_list
    
        elif item not in grocery_index:
          unfounded_items.append(item)
          my_list.pop()
          print(f""Undefined entry\n{unfounded_items}"")
    
          #Should be a function asking yes/no whether or not to add inputted item and price.
    
    #calls main menu.
    main_menu(my_list, grocery_index, grocery_total)",1636552256.0
How do you know when you know python?,287,mpl8wc,learnpython,https://www.reddit.com/r/learnpython/comments/mpl8wc/how_do_you_know_when_you_know_python/,118,"Kind of stoopid question but yeah, how do you measure your python knowledge?",1618255442.0
I feel stupid and incompetent on Codewars. Does that say something about my decision to choose programming for a career?,290,d6cdzw,learnpython,https://www.reddit.com/r/learnpython/comments/d6cdzw/i_feel_stupid_and_incompetent_on_codewars_does/,125,"It sets me back when I solve a ""Kata"" in 6 lines or more, and then see that someone solved it in one line. Can such thing be trained or is it just that the person is clever?

I've been learning Python for more than 3 months now.",1568890815.0
"My first truly useful project, completed.",285,axyjw3,learnpython,https://www.reddit.com/r/learnpython/comments/axyjw3/my_first_truly_useful_project_completed/,86,"Hey all, so today after about 2 years of learning Python in my spare time, I've finally built a little tool that, rather than being a 'nice to have', or a little project just to help me learn, is something I will actually use in my job on a regular basis, and that will definitely save me more time than the time I invested to build it.

Since the IT team at the company I work for, don't have time to build everything I request, I did it myself. The tool takes an excel file as input, converts to a pandas DataFrame, then uses Selenium to open a browser and put the data into our internal Admin website, looping through each of the hundreds of rows, and logging any errors.

None of my previous projects have been a waste of time as they have all been educational and satisfying, but this one is particularly satisfying! The feeling of learning, the focused and productive flow state, satisfaction of building something and frequent feelings of elation with each little problem solved during the coding process, were all packed into a 3 hour coding session today, from conception of the idea to completion and implementation.

Sharing as I'm sure others will remember their equivalent 'first useful project', and others still will be yet to experience theirs. A great feeling.

EDIT: Here's the code: [https://pastebin.com/dntGmiQ1](https://pastebin.com/dntGmiQ1)

EDIT: Whoa, gilded by a kind stranger!! Thank you so much, that is an item ticked off the bucket list. I am humbled.",1551877152.0
Real world problems to solve,288,eku9dt,learnpython,https://www.reddit.com/r/learnpython/comments/eku9dt/real_world_problems_to_solve/,73,"By real world I mean something like from ""[Automate the Boring Stuff with Python](https://automatetheboringstuff.com/)"" [course](https://www.udemy.com/course/automate/) where you had to scrape all the emails and phone numbers from a text. So something useful, interesting or challenging.

I am fully aware that this thread was here before, but there weren't many answers, and it was a long time ago, so I'm making a new one.

Thanks in advance!",1578317953.0
I give serious props to people who can read programming books,286,d1rfne,learnpython,https://www.reddit.com/r/learnpython/comments/d1rfne/i_give_serious_props_to_people_who_can_read/,60," I just cannot learn programming languages/new technologies like that. And it’s weird because I LOVE to read otherwise. I have been on this new python journey for a couple months coming from full stack JavaScript, and I’ve tried reading 2 different books and I struggled getting through both. But I’ve finished 2 video courses on it and read countless blog posts.

The official python docs and docs for the frameworks I’ve tried (Django/Pygame) have also been much easier than cracking open the old tomes. Anyone else struggle reading technical books? I feel like I need to stop buying them because I have a shelf of half finished books in my office that are mostly outdated now lol",1568038353.0
So where can i find python coding challenges for amateurs?,289,av5c3o,learnpython,https://www.reddit.com/r/learnpython/comments/av5c3o/so_where_can_i_find_python_coding_challenges_for/,54,I was trying to look for python challenges to help pratice but i can't find any? is there a place other than project euler where i can do challange coding exercises. I think project euler can be very complex and isnt suitable for me who's still trying to get familiar enough with the language ( coding on and off with python for a year ),1551219198.0
How tf do you learn Python?!?!,281,1cjj2pm,learnpython,https://www.reddit.com/r/learnpython/comments/1cjj2pm/how_tf_do_you_learn_python/,352,"Okay, so I have taken Python twice, studied consistently, and I even have two tutors to help me. But I STILL don't know Python! I am so confused about how everyone is learning it so easily. None of my Professors have given me a specific way to accomplish learning it, and despite my efforts, I still struggle a lot with small and large programs, quizzes, and exams. What am I doing wrong? How do I learn it properly? Do I take a course online? Is there someone I should talk to? Is there a book that will teach me everything? I feel so defeated because everyone says it is so easy, and it so isn't for me. Am I just a lost cause? 

Edit: A lot of people have asked me this, but my motivation to learn Python is for my degree and for my career afterward, that requires me to know how to at least read documentation. I don’t have an innate interest in it, but I need to know how to do it.

Another edit: I already started on a game, and it was a lot more fun than the way I was trying to learn in the past. I definitely made a bunch of mistakes, but it already clarified a few concepts for me. So, I think it is a promising start. I truly appreciate everyone’s helpful advice and constructive criticism. I definitely won’t give up, and I will lean into the struggle. ",1714770197.0
What resources should i AVOID when learning python?,282,ptaw65,learnpython,https://www.reddit.com/r/learnpython/comments/ptaw65/what_resources_should_i_avoid_when_learning_python/,192,"Everyone always asks for the best resources, how about the worst?",1632327216.0
"To Learn Programming, Do Projects You Actually Care About",284,5cxnk6,learnpython,https://www.reddit.com/r/learnpython/comments/5cxnk6/to_learn_programming_do_projects_you_actually/,45,I wrote a [short post](https://datarebellion.com/blog/to-learn-programming-do-projects-you-actually-care-about/) on what's worked best for me in learning how to program. I'm curious if most other people have had the same experience. ,1479149912.0
Web scraping with Beautiful Soup 4 Miniseries,285,59ok7h,learnpython,https://www.reddit.com/r/learnpython/comments/59ok7h/web_scraping_with_beautiful_soup_4_miniseries/,55,"Easily one of the most requested series, I decided to go ahead release a quick miniseries on basic web scraping with Beautiful Soup 4. 

1. [Intro, installation, and some quick basics](https://pythonprogramming.net/introduction-scraping-parsing-beautiful-soup-tutorial/)
2. [Navigating tags](https://pythonprogramming.net/navigating-pages-scraping-parsing-beautiful-soup-tutorial/)
3. [Parsing tables and XML](https://pythonprogramming.net/tables-xml-scraping-parsing-beautiful-soup-tutorial/)
4. [Scraping Javascript/dynamic data.](https://pythonprogramming.net/javascript-dynamic-scraping-parsing-beautiful-soup-tutorial/)

That's all for now, if you have any requests or suggestions for more BS4 content, let me know here or on the respective videos. ",1477581863.0
Python trading bots,283,jfbq4e,learnpython,https://www.reddit.com/r/learnpython/comments/jfbq4e/python_trading_bots/,67,I thought it would be a fun project to try to build a trading bot.  Does anybody have any experience or recommendations for tutorials and learning resources which might start as a good guide for building a trading bot in Python?  Thanks for the advice,1603282800.0
Best Django Tutorial I Have Found,283,9ivlpz,learnpython,https://www.reddit.com/r/learnpython/comments/9ivlpz/best_django_tutorial_i_have_found/,36,"First off, let me say that I make tutorials, but I did not make this one. It's just so good that I had to share.

&#x200B;

I found this one when I was learning Django, and it stands up as one of the best tutorials I have found on YouTube. It is clear, concise and easy to follow. I highly recommend it.

&#x200B;

[https://www.youtube.com/watch?v=n-FTlQ7Djqc&t=14s](https://www.youtube.com/watch?v=n-FTlQ7Djqc&t=14s)",1537906091.0
What are some beginner python projects you’d recommend for a beginner?,284,ywls13,learnpython,https://www.reddit.com/r/learnpython/comments/ywls13/what_are_some_beginner_python_projects_youd/,87,I’m a beginner and I want some ideas for a project.,1668579397.0
what did you automate with Python to speed up your your productivity ??,283,k78pjl,learnpython,https://www.reddit.com/r/learnpython/comments/k78pjl/what_did_you_automate_with_python_to_speed_up/,164,"Any suggestions for Automating tasks in Linux Desktop to speed up the productivity
 
any ideas will be helpful too
 
thanks in advance",1607179705.0
I wrote my first useful script after 4 months of programming!,282,cpnkft,learnpython,https://www.reddit.com/r/learnpython/comments/cpnkft/i_wrote_my_first_useful_script_after_4_months_of/,46,"Hey /r/learnpython, first of all, I owe it to this community for providing so many great teachers. Being subscribed to a hub where so many people in one place are focused on learning has honestly improved my mental health. Thanks!

Anyway, I was hired as an intern at a small hedge fund a month ago and have only been programming since May. My boss wants me to be the ""data guy"" and I agreed, so he showed me this xeroxed page of formulas in a spreadsheet he wanted recreate to measure stock performance with, and then, he said, if I could automate that procedure across the S&P500, ""that would be great"". I produced two modules that do just that [here](https://github.com/VincentGW/Momentum-Ranking/blob/master/run.py) and [here](https://github.com/VincentGW/Momentum-Ranking/blob/master/excelmanip.py).

I'm honestly stoked I got this far and I'm amazed it works. I'm convinced I can really change my career if I keep practicing. Anyway, if there are things terribly wrong with my formatting I'd love to hear feedback. I know there's still improving to be done but I'm not sure where to start. Handling exceptions? Implementing classes? Recursion?

Here's the whole project with all the files:  [https://github.com/VincentGW/Momentum-Ranking](https://github.com/VincentGW/Momentum-Ranking)

Thanks!",1565667762.0
i just did a list comprehension with no problem,281,cg2uz1,learnpython,https://www.reddit.com/r/learnpython/comments/cg2uz1/i_just_did_a_list_comprehension_with_no_problem/,70,"I am sorry. I have not been able to do this before without messing some part up and having to google it AGAIN. Feels so good, but had no one to share it with.

&#x200B;

Thanks :)",1563736790.0
"Learners with full-time jobs, how do you maintain the energy to learn after a long day of work?",283,bdn9f8,learnpython,https://www.reddit.com/r/learnpython/comments/bdn9f8/learners_with_fulltime_jobs_how_do_you_maintain/,136,,1555373318.0
Python practice website,279,wvpe07,learnpython,https://www.reddit.com/r/learnpython/comments/wvpe07/python_practice_website/,34,I’m looking for a python website filled with challenges to practice my coding skills. Any suggestion is a great help!,1661262719.0
Finished making a tic tac toe game :),280,lxvumk,learnpython,https://www.reddit.com/r/learnpython/comments/lxvumk/finished_making_a_tic_tac_toe_game/,40,"Took me around 7 hours because I spent most of that time trying different solutions and fixing bugs just because I didn't want to have to write a bunch of if and elif statements.

But I'm now finally done!

Edit:

If you want to have a look at it here's a github link: [https://github.com/Jamie2345/Tic-Tac-Toe-vs-Computer](https://github.com/Jamie2345/Tic-Tac-Toe-vs-Computer)

Edit 2:

Here's a trinket link if that's easier for you:  https://trinket.io/python/26d332b331 

&#x200B;

&#x200B;",1614893127.0
Will I ever be good if I am not good at math?,280,gontjy,learnpython,https://www.reddit.com/r/learnpython/comments/gontjy/will_i_ever_be_good_if_i_am_not_good_at_math/,89,"I have been learning for about 1 month now and I know almost all basic syntax for python. Learned basics of HTML/CSS and now I am following Corey's Flask tutorial to make websites. 

Am I doing this right? Will I need math for web development?

I plan on learning  bootstrap on the side aswell since Corey uses it a lot in his flask tutorials. is that good idea? Or should I do something else?",1590168888.0
There is no “trick” to getting better.,281,eo6wne,learnpython,https://www.reddit.com/r/learnpython/comments/eo6wne/there_is_no_trick_to_getting_better/,65,"This is for anybody that has been learning or trying to learn how to become better as a programmer (as I am). I think a lot of us beginners / intermediate programmers try and find some “trick” to getting better at programming. Something along the lines of “If I watch this YouTube series then I’ll really be able to code”, \*google searching how to become a better coder*, “when does all of this finally click?”, \*asking good programmers how long it took for them to get better*.

What I’ve realized is there is no “magical moment”. There’s no trick to getting better. There’s nothing that will suddenly make you 10x better within a short amount of time. There’s no specific Google search that you can type where it will lead you to a link that gives you some “crazy secret”.

The only solution to the problem that I’ve found of “how do I really get better?” is to simply **code more**. I’ve been learning how to program for a few weeks now, and before I didn’t even really know exactly how for loops worked, what zip() or map() was, and how list comprehensions worked etc. 

The only way I managed to start understanding these things was to pick up one of the **main books** **or resources** that covered the language in its entirety, go on a programming website, practice writing code, and making 10+ line scripts that used these different functions, or things I learned. 

There’s not gonna be any “click” where you suddenly know 100% of how to do these things, there’s just gonna be multiple “clicks” where things you didn’t understand start to make sense. I think that’s the biggest problem I see with people who want to learn to program, they give up too quickly because they’re expecting these “clicks” to happen overnight.

TLDR: Open the text editor, code more, stop searching for the pill. You’re never gonna find it.

Sidebar: IMHO what has really helped me is getting **one** resource that covered the language in it’s entirety, and code more, simple.",1578935159.0
Want to practice writing code.,284,oa5gnf,learnpython,https://www.reddit.com/r/learnpython/comments/oa5gnf/want_to_practice_writing_code/,30,I recently came across about a website where you are presented a challenge to write/edit a piece of code and after you are able to see how other took to the challenge. I can't remember the name of the website and was wondering if anyone knew about similar websites.,1624962108.0
Why do some programmers codes if __name__=='__main__'?,281,st5n2o,learnpython,https://www.reddit.com/r/learnpython/comments/st5n2o/why_do_some_programmers_codes_if_name_main/,78,"i have been programming for 1 year, but dont know why they do this, i think, code is perfectly works w/o this, isnt it?

i know, i shoud know that, but i dont. thx",1644939342.0
"I am excited to share my 9th published book, Pillow: Image Processing with Python",279,mlcumi,learnpython,https://www.reddit.com/r/learnpython/comments/mlcumi/i_am_excited_to_share_my_9th_published_book/,17,"I made several of the chapters of the book into articles on my blog so you can get a preview of the content in the book:

* [Drawing Shapes on Images with Python and Pillow](https://www.blog.pythonlibrary.org/2021/02/23/drawing-shapes-on-images-with-python-and-pillow/)
* [Drawing Text on Images with Pillow and Python](https://www.blog.pythonlibrary.org/2021/02/02/drawing-text-on-images-with-pillow-and-python/)
* [Getting GPS EXIF Data with Python](https://www.blog.pythonlibrary.org/2021/01/13/getting-gps-exif-data-with-python/)

In this book, you will learn about the following:

* Opening and saving images
* Extracting image metadata
* Working with colors
* Applying image filters
* Cropping, rotating, and resizing
* Enhancing images
* Combining images
* Drawing with Pillow
* ImageChops
* Integration with GUI toolkits

You can order the eBook versions on [Leanpub](https://leanpub.com/pillow/) or [Gumroad](https://gum.co/pypillow). When you purchase through either of these websites, you will receive a PDF, epub and mobi version of the book.

The paperback and Kindle versions are now available on [Amazon](https://kdp.amazon.com/amazon-dp-action/us/dualbookshelf.marketplacelink/B08ZCQM1C1).

The paperback version of the book is in **full color**. That is why it more expensive than any of my other books to purchase.",1617719108.0
I'm just stuck as being the beginner who only uses if/elif/else statements. How do I stop?,280,f77s7h,learnpython,https://www.reddit.com/r/learnpython/comments/f77s7h/im_just_stuck_as_being_the_beginner_who_only_uses/,106,"Like, I made a program that can solve any math problem within my math book. It worked, sure. But it was just 700 lines of if statements and I showed it to another programmer, he went ""wtf? Why?""(he could probably make with less than 100 lines) I just find them too familiar and 'safe' even though they take little to no actual skill to do and take way too long to write.

So, how do I learn to actually use classes, .txt files and other stuff in my code? It feels really hard for me when I even try it.",1582270654.0
Essential Reads for Any Python Programmer,280,7mvh9h,learnpython,https://www.reddit.com/r/learnpython/comments/7mvh9h/essential_reads_for_any_python_programmer/,16,"Lately I have been writing more and more python code for my projects and my research. Therefore, I have encountered many interesting articles about underlying structures and workloads in Python. Stuff that I find really helpful to have a good understanding about but I sometimes I notice that even many of my friends who are more experienced in Python don't know.

I though I compile the list and share it here with others. 

http://notesbyanerd.com/2017/12/29/essential-reads-for-any-python-programmer/

If you find it interesting please let me know it will make me happy. Also, if you think there are more articles on any of the topics or you think there are important subjects that I'm missing, I'll be happy to read them and add them to collection

",1514566895.0
New edition of Python Crash Course comes out in 5 days: vis chapter now uses matplotlib and plotly!,280,1044wlq,learnpython,https://www.reddit.com/r/learnpython/comments/1044wlq/new_edition_of_python_crash_course_comes_out_in_5/,60,"This is my favorite book, hands down. It covers OOP, is project based, covers Django, visualization (and the new edition will cover matplotlib/plotly which is awesome!).  I can't wait to see it!

If you haven't used Django it is hard to overstate [how heroic it is](https://www.youtube.com/watch?v=bWcASV2sey0) to teach it to beginners. Most beginner classes avoid OOP. This one is like ""Yeah let's cover that, and here's a Django project let's go over hosting and server-side scripting and how to launch an application to production.""

Edit: I am not affiliated with the book, but I did learn Python with it, and it helped me get a job and I really just love the 2nd edition, so can't wait for the 3rd edition. :)",1672940292.0
How can I store a password properly so that it is not visible in source code.,278,ogm2ta,learnpython,https://www.reddit.com/r/learnpython/comments/ogm2ta/how_can_i_store_a_password_properly_so_that_it_is/,103,"I know the title is a bit confusing but I have this problem:

so in my code I need to login to an STMP server so that a bot can send an email to the user. My code is put on github where my friends and a few other people can see.

(this is a part of the code that is relevant)

`server_email = 'this_email_doesnt_exist@gmail.com'`  
`server_password = 'this_is_a_placeholder_password'`

`def sendmail(server_email, server_password, recieving_email, msg):`

`'''code for sending email'''`

&#x200B;

if my code is open source, how can I make it so that the people looking at the code can't see the password. I can't store it as a hash because if I do, I won't be able to revert it back to the original password. 

I could also not store it and put an input:

`server_email = 'this_email_doesnt_exist@gmail.com'`  
`server_password = input(""Enter Password: "")`

`if bcrypt.checkpw(server_password, password):`

`'''code for sending email'''`

however that wouldn't work because I can't have an admin typing in a password everytime a bot needs to send an email to users.

&#x200B;

How could I make it so that the bot is able to send the emails without the source code actually showing the password?",1625797362.0
How much learning do you do per day?,283,mm7ygh,learnpython,https://www.reddit.com/r/learnpython/comments/mm7ygh/how_much_learning_do_you_do_per_day/,77,"I've been learning python on and off for a while now would say almost a year if you add it all up that includes some rather large breaks and starting course again.

I'm working my way through Automate the Boring stuff I find I struggle to keep focus and attention on the subject matter alot of the time if its not something i already knew I wanted to learn (Just got to webscraping seems very interesting)

I wonder how much time people are putting in each day to really learn this with the idea of turning it into something more then just a skill possibly a job.

Is an hour a day really going to be enough to get things going in any meaningful way? I understand rates of learning are subjective just wondering if anyone has any insight.",1617818430.0
How to think Like an Object Oriented Programmer??,278,bby5d5,learnpython,https://www.reddit.com/r/learnpython/comments/bby5d5/how_to_think_like_an_object_oriented_programmer/,52,"So, I’m just getting started trying to teach myself Python... mostly because I want to make a Raspberry Pi that I just bought (and am also learning about) act as a controller that died on my wife’s AeroGarden (basically - I want to control, an LED light, water pump, and water fill level sensor). 

I’ve spent some time trying to understand the basics of Object Oriented Programming. Here’s what I (think) I know so far...

Many “objects” can be defined by a “class”. A class is basically a template or recipe for creating an object. You can make sure your object all have similar attributes. 

Some objects can inherit those base attributes, and can be assigned additional attributes through “inheritance”.

I can define a function in a class which is called a method. The methods can tell all of the objects in the class what to do or how to behave. 

Some attributes and functions/methods can be hidden by encapsulating them. What we are hiding them from, or why - I really don’t know or understand. 

Polymorphism is creating a method or function that can apply to different types of objects in the same manner. 

Now, I’m sure I’m not 100% on all of this yet - but I sure think I know more than I did last week. 

I’ve seen lots of programming examples with objects such as cars, coffee machines, TVs, etc. But, those programming examples don’t really do much more than output different attributes about the objects on the screen. 

I’m just not grasping a real world “problem” and what a real world “solution” is behind this information.

I’m looking for an example that starts with a “problem” that needs to be solved, and I need to see how a set of steps is formulated to solve that problem - and how the code is then implemented to execute those steps to a real “solution”. And, I need to see how the OOP philosophy applies within the solution creation - especially prior to the code being written. 

In other words, how does the programmer decide “OK, to solve this problem - these will be my “objects”. I will create a “class” with these “attritbutes”. I will created these functions/methods. These objects need to be “inherited”. And this information needs to be encapsulated because __________.

I think maybe for my own problem, it may help me understand better. 

I want to create a program that turns the LED lamp on based on a schedule. However, I also want to be able to override that schedule and be able to push an onscreen (I have a mini touch screen for my Pi) or physical button mounted in the Pi to override that schedule and turn the lamp off for 1 hour. I want the screen to indicate when the light is on, and when it is off. I also want the screen to show the schedule when the light will be on or off next.

Also, I want to turn the pump on or off by a schedule (a schedule different than the lamp). I want a button (onscreen or physical) to override the schedule for 15 minutes. Again, the screen should indicate the pump on/off status, and should let me know when it will be on/off next. 

Finally, I want the water level sensor to indicate on screen when the water level is low. I want to be able to clear the alarm with a button push (onscreen or physical) and I want the screen to indicate when the water level is normal. 

For now... I don’t necessarily need the ability to edit and input changes to either schedule through the application. But, I may wish to do that again in the future. 

So... how do I look at the problem with the mindset of an experienced OOP programmer to start writing my solution?

Do I create a class for the buttons I want on screen? Are those my “objects”? What attributes do I want them to have? What methods do I need to create? What information do I need to encapsulate? Who/what am I encapsulating it from? Why? Where does polymorphism play into my solution? Do I need my objects to inherit any attributes?

Are my devices (lamp, pump, level meter) another class? The only real similarities they appear to have is that I want them to turn on/off. The pump and lamp need schedules, but they need to be different (the lamp and pump will have different run times).

Maybe the GPIO pins on my Pi are also objects of another class? They need to command my relays to open/close to physically turn the pump and lamp on and off. The GPIO pin assigned to the water meter will need to trigger the alarm. Nd, it will need to clear the alarm when the button is pushed or when the water level is back to a normal state. 

I assume before a programmer begins writing code... there is some sketching of ideas (I’m a very visual person) to put some framework to the application. Maybe this is easy if you’ve done it a thousand times... but as a beginner I kind of know what I want my program to do... I’m just not sure how to get started thinking it out like an experienced programmer would. 

I realize my program doesn’t need to incorporate all aspects of OOP, but I don’t know which ones I should use, nor which ones I don’t need. 

If anyone has any good resources that show how this is done, or can explain it here, I would be very grateful.",1554977739.0
"Amazing list of beginner-intermediate python educational talks, learned more in this list than I have in weeks on my own",281,2we87d,learnpython,https://www.reddit.com/r/learnpython/comments/2we87d/amazing_list_of_beginnerintermediate_python/,23,"I was very surprised at how good the talks were, if you're looking to improve your python, these talks are for you


https://github.com/hellerve/programming-talks#python


^^Ps. ^^If ^^you ^^start ^^liking ^^a ^^talk, ^^come ^^back ^^and ^^upvote ^^the ^^post ^^so ^^others ^^can ^^see ^^you ^^liked ^^it

^^^pps. ^^^I ^^^totally ^^^forgot ^^^who ^^^linked ^^^me ^^^to ^^^this ^^^list, ^^^if ^^^anyone's ^^^seen ^^^it ^^^shared ^^^recently ^^^let ^^^me ^^^know, ^^^I ^^^want ^^^to ^^^give ^^^credit ^^^to ^^^whoever ^^^introduced ^^^it ^^^to ^^^me, ^^^it's ^^^actually ^^^that ^^^good",1424318896.0
"Wife found python, but needs a direction to head in.",273,1b8dz67,learnpython,https://www.reddit.com/r/learnpython/comments/1b8dz67/wife_found_python_but_needs_a_direction_to_head_in/,156,"Here goes, wife is 41 she has never been a tech savy person until she started working at her new job a year and a half ago. She loves the challenge of figuring out problems and finding errors.  
I have tried to help her, I do not have the attention for python or much coding for that matter.  
She started some courses online through her job and doesn't know what she wants to do with it.  
Any pointers to push her in some direction?   
I was skeptical of her actually learning it, but she says she just understands what she is learning and likes it so far. She really likes figuring out problems, and finding mistakes.   
Is there a specific area she should look into? I haven't been able to steer her in any meaningful way, and don't want her to give up.   
Like I said I don't have the attention span to code myself, I am a hardware guy not software.  
Any help would be much appreciated.  
Thanks!",1709765671.0
Best online course to learn the basics of Python,279,y8rhss,learnpython,https://www.reddit.com/r/learnpython/comments/y8rhss/best_online_course_to_learn_the_basics_of_python/,97,Hi I really want to learn how to use Python. I don't have any idea at all on how to use it. Does anyone know the best online course to take to learn it? Preferably for free? though if paid I don't mind,1666250763.0
I built an app to automatically overlay baseball pitch motion and trajectory with ML.,275,kgu5i5,learnpython,https://www.reddit.com/r/learnpython/comments/kgu5i5/i_built_an_app_to_automatically_overlay_baseball/,12,"This project takes your baseball pitching clips and **automatically** generates the overlay in realtime. A fine-tuned Yolov4 model is used to get the location of the ball. Then, I implemented SORT tracking algorithm to keep track of each individual ball and filter out the misdetection noise. Lastly, I have applied some image registration techniques to deal with slight camera shift on each clip.

I'm still trying to improve it! Feel free to follow this project, also check out the Todo list.

Source code: [https://github.com/chonyy/ML-auto-baseball-pitching-overlay](https://github.com/chonyy/ML-auto-baseball-pitching-overlay)

&#x200B;

BTW, I just want to point out that did anyone notice that the pitcher throw the ball with the **exact same** posture but it turned out to fly on a completely different path. It's just amazing! ",1608471610.0
"This trick I learned, after YEARS - I feel so stupid",280,ah1t7v,learnpython,https://www.reddit.com/r/learnpython/comments/ah1t7v/this_trick_i_learned_after_years_i_feel_so_stupid/,67,"OK so PLEASE don't send hate for this, I know that more experienced programmers will probably know this, but still...

I've been programming in python for years and I have just learned:

`try:`

`pass`

`except:`

`pass`

So, in short, this will try what's indented after try, and if at any point there is an error then it will do the except.",1547755381.0
Keep Going!,279,pslmgp,learnpython,https://www.reddit.com/r/learnpython/comments/pslmgp/keep_going/,23,"Just a quick note for all you relatively new learners out there.

I started learning Python about six weeks ago, mostly because I had to use it for a pre-written script at my job and I wanted to understand wtf the code meant. I tried to learn Python before, but it just didn't stick.

Anyway, fast forward to today. I have written multiple small scripts. Mostly automating work tasks. Sometimes, the task probably would have been done faster if I had just done it by hand. But every time I see something in Excel that needs to be updated or reformatted, or we have some data we're trying to wrangle and compare, my brain now goes to wondering if writing a script might solve my problem (hint: it usually can).

For all the newbies out there like myself -- don't give up! I had a hard time wrapping my head around functions for a while. Then today, I remembered in Charles Severance's course PY4E, he specifically said in the lesson on functions, ""Don't worry too much about functions. One day, you'll write the same line of code over and over again and you'll think 'Hey I could use a function for this!'"" 

That's *exactly* what happened today. And when I wrote it, debugged, and got my script working, it felt pretty rad.

Keep going friends. Even if it's small. Even if it doesn't do much. Even if it might have been faster in the short run to do whatever you're doing manually. It'll pay off.",1632239748.0
Lost my job to the virus. Some help would be great right now,277,g3ck5n,learnpython,https://www.reddit.com/r/learnpython/comments/g3ck5n/lost_my_job_to_the_virus_some_help_would_be_great/,93,"So yeah I'm currently free lancing because I have lost my job. F' corona. I could never accurately describe how much your help would mean to me right now.

Full disclosure: am noob. Please dont be mad at my code. I added as many comments in the code as I could so as to help you help me.

&#x200B;

So here's a description of what I'm trying to do:

**I need to obtain every single street name in New Jersey and the corresponding zip code for each street name.** I hope to be able to store these into a pandas data frame, with 1 column for street names and another column for the zip code of each street name. I'll probably convert this to a CSV later but once I have the pandas data frame then I think I'm good.

In order for you to understand my code, I think it would be best for you to familiarize yourself with [this](https://geographic.org/streetview/usa/nj/index.html) website. Don't worry, the site it extremely simple. 

It has each county in NJ, and when you click on a county, it brings you to a page that has all the municipalities found in that county. Clicking on a municipality will bring you to a page that displays all the street names in that county and their corresponding zip codes.

**There is a minor glitch on the site:** Every zip code in NJ begins with a zero. However this site is not showing the leading zero for any of the zip codes. However, I've come up with a solution that you will see in the code.

I'm aware there is a Google Maps API but I've never worked with an API before and I am an extremely slow learner. In fact, it has taken me over 3 years to learn this much about python. Grabbing street names and zip codes from this site is probably the only way I can complete this project as of right now.

I made a github for the first time just so I could show you guys my code instead of a pasting it into this post.

The github code can be found [here](https://github.com/TheoMcWillow/Pull-NJ-Street-Names-And-Their-Corresponding-Zip-Codes/blob/master/NJstreetnamesAndZips.py) 

&#x200B;

To sum up my code, it uses selenium, Requests and Beautiful Soup to grab the street names and zip codes from the site. There is a regex towards the end to find the zip codes in the soup and store them. I apologize for the hideous nested for loop but it's the only way I could get selenium to click on each municipality in each county.

To my surprise, I have successfully managed to get this far, but I'm stuck at storing the street names into a pandas data frame. I'd like to just have 1 massive data frame instead of one for each municipality. That way, I can iterate through the data pretty easily.

&#x200B;

Honestly, I seriously need a break in my life so some help from you guys would really mean a lot to me right now. **As stated above, the end goal of this code is to obtain a pandas data frame and/or CSV file that has 2 columns: 1 column containing every street name in NJ and another column for each street name's corresponding zip code.** Trying not to tear up right now but obtaining this data would be the best thing to happen to me in weeks.

Thanks and love you all. Stay healthy please

EDIT: Wow! You guys are seriously heroes right now. For real it’s like doctors, nurses and then you. I really hope to one day return the favor, or at the very least, I hope you all get the help you request in your hour of need. Love all of you",1587164351.0
I need to learn Python as quick as possible.,274,d0h4t1,learnpython,https://www.reddit.com/r/learnpython/comments/d0h4t1/i_need_to_learn_python_as_quick_as_possible/,151,"Hi. I'm a non-programmer, I don't know any kind of programming language. Still, I signed up to a internship (it's more like a course, I'm not gonna get hired after it's finished) at a software and hardware development company. I did it because I wanted a goal to aspire to, I wanted to get outside of my comfort zone (and my house, I've been a couch potato for weeks) and I also wanted to learn some things about programming. It went well just until yesterday, when in our penultimate meeting, the boss said that we should start developing our first app/program (well, we were planning it from before, but that was the moment we started taking things seriously). I chose to work at the back-end part of our app in the Python programming language. Thing is.... no one in that room (except the boss) and maybe a few others knew anything about how to code in Python. 

So now I am scared but also determined. I installed Python 3.7.4, I found a book named *Automate the Boring Stuff with Python* by Al Sweigart, and now I'm starting to learn bit by bit. I succesfully wrote a program that says hi and asks for my name (and age), but I'm gonna need a lot more than that. I feel like it's too much to learn in a very short amount of time (the next meeting is next Thursday). 

Given this backstory, can you please help me? Courses, books, tutorials, videos, blogs, other subreddits, anything that can be of use to a non-programmer in need to learn Python. I need to learn Python as quick as possible.  


\*I apologize for any grammatical mistakes.\*",1567778829.0
[Update]Few days ago I had posted here whether I should go to a Personal technical Interview I was not prepared for.,278,bmq133,learnpython,https://www.reddit.com/r/learnpython/comments/bmq133/updatefew_days_ago_i_had_posted_here_whether_i/,153,"Well, I did go to that interview and I killed it. I was asked 4 programming questions, I solved 3 of them. The last one I couldn't solve.

I don't care what the result would be. I just wanted to say thank you guys for pushing me to just go through it. It was all in my head, I was way more prepared than I thought.

I was also surprised with my confidence, I did not have an ounce of nervousness. I would not have known that about me, if you guys hadn't pushed me for it.

&#x200B;

So thanks a lot guys.  :)

&#x200B;

tldr: Was nervous to go for an interview thinking, I am not prepared. You guys pushed me for it, I did go and totally killed the interview!

Edits:
1: I am not confidently spreading misinformation. I just posted my solution until u/joeflux pointed out that it was wrong. 

2: The Python course apparently is not free anymore..it is still a good course as it makes you think in terms of interviews.

3: someone blamed me for writing C style solution, I do best with what I got. Please present a better solution so I can share it here for other folks..",1557439669.0
TIL that google offers a free online jupyter notebook service!,276,7winkf,learnpython,https://www.reddit.com/r/learnpython/comments/7winkf/til_that_google_offers_a_free_online_jupyter/,46,"If any of you guys use notebooks for documentation, learning, or experimenting, this is a really great tool. It has python 2 and 3 kernals as well as gpu support! Additionally, its totally integrated with Drive! Check it out [here](https://colab.research.google.com/notebooks/welcome.ipynb#recent=true)!",1518229586.0
Built my own apartment search bot with Python — sends me text when it finds something worthy,275,6bowht,learnpython,https://www.reddit.com/r/learnpython/comments/6bowht/built_my_own_apartment_search_bot_with_python/,52,"So... The best way to learn is to code and solve real problems.

We were looking for a new apartment in Paris (--> to basically get our daughter her own room). 
Offers are numerous but is so is the demand, so we went the _rental by owners_' route using a well known website (think Craigslist but tailored for apartment rentals in France).

We still couldn't get one because we weren't replying fast enough to listings.

So I decided to build myself a bot that would:

  - Scrape data from private individuals apartment listing website ([PAP.fr](http://pap.fr))
  - Store the results in a spreadsheet (gSheets)
  - Run automatically via a cron job
  - Text me back the results so we could react to offers *ASAP*

I used [CALLR](https://www.callr.com/?utm_source=reddit&utm_medium=social&utm_campaign=hhbot) (disclaimer - I had just started working there) for the last part.

It was successful and I decided to share it on the company's blog. 
[Read it here](https://www.callr.com/blog/python-house-hunter-bot/?utm_source=reddit&utm_medium=social&utm_campaign=hhbot)

Libs used:

  - [Requests](http://docs.python-requests.org/en/master/): HTTP requests

  - [BeautifulSoup4](https://www.crummy.com/software/BeautifulSoup/bs4/doc/): HTML scrapping

  - [PyGsheets](https://github.com/nithinmurali/pygsheets): Google Sheets handling

  - [Pyshorteners](https://github.com/ellisonleao/pyshorteners): for URL shortening on the fly

  - [CALLR SDK](https://www.callr.com/?utm_source=blog&utm_medium=callr&utm_campaign=hhbot): to send texts

The code is available on Github. I don't have a lot of experience writing technical-ish content for the crowds, so I'm eager to get your feedback (I'm thinking right now it's too long, a little hard to read and follow).",1495030038.0
"How can you turn a rock, paper, scissor code as a one liner?",274,nf9920,learnpython,https://www.reddit.com/r/learnpython/comments/nf9920/how_can_you_turn_a_rock_paper_scissor_code_as_a/,68,"Is there a way to turn my rock paper scissor code into a 1 liner code? I am a middle school student just started learning python not too long ago. Recently I just started learned how to code the Rock, Paper, Scissor game. Now is there a way to simplify my rock, paper scissor code? Or is it better to turn it into a one liner?


    import random
    
    def num():
        i = 0
        answer=[""rock"",""paper"",""scissor""]
        c = 0
        u = 0
        d = 0
        while i<3:
    
            user=str(input(""Enter rock, paper or scissor:""))
            ans=random.choice(answer)
            print(""computer="",ans)
            if (user==""rock"" and ans==""scissor"") or (user==""paper"" and ans==""rock"") or (user==""scissor"" and ans==""paper""):
                print(""win"")
                u=u+1
            elif (answer==""rock"" and user==""scissor"") or (answer==""paper"" and user==""rock"") or (answer==""scissor"" and user==""paper""):
                print(""lose"")
                c=c+1
            else:
                print(""draw"")
                d=d+1
            i=i+1
        print(""computer wins ="",c,""user wins ="",u,""draws ="",d)
    num()




This is my rock, paper, scissor code that I made, if there is any idea that can simplify my code or turn it in to a one liner, please write the answer below.",1621340393.0
Most efficient way to do lots of if-elif statements?,275,iq5qhl,learnpython,https://www.reddit.com/r/learnpython/comments/iq5qhl/most_efficient_way_to_do_lots_of_ifelif_statements/,118,"ive noticed that whenever i write code and i a lot of the time need lots of if elif statements

&#x200B;

    self.choice = input(""number.. "")
    if self.choice == '1':
        self.whatever
    elif self.choice == '2':
        self.whatever2
    elif self.choice == '3':
        self.whatever3
    else:
        print(""Try again"")

here's an example of how id do my code, i feel there's a much more efficient way to do this though?",1599752378.0
""" "" or ' ', which one is your default?",276,gq6eec,learnpython,https://www.reddit.com/r/learnpython/comments/gq6eec/or_which_one_is_your_default/,192,"So, I guess in Python everyone should choose "" "" or ' ' when it comes to strings. And you have to be consistent. Which one is yours? and why?",1590390759.0
Humble Bundle is having a sale of O'Reilly python books. Which books are highly recommended from this bundle?,274,bl6z1w,learnpython,https://www.reddit.com/r/learnpython/comments/bl6z1w/humble_bundle_is_having_a_sale_of_oreilly_python/,47,"[Humble Bundle](https://www.humblebundle.com/books/python-oreilly-books?hmb_source=humble_home&hmb_medium=product_tile&hmb_campaign=mosaic_section_1_layout_index_1_layout_type_twos_tile_index_1_c_pythonbyoreilly_bookbundle)

***Pay $1 to unlock***

* Introducing Python 
* The Hitchhiker's Guide to Python 
* Elegant SciPy 
* Natural Language Processing with Python 

***Pay $8 or more to unlock***

* Think Python Second Edition
* Think Bayes 
* Python Data Science Handbook 
* Thoughtful Machine Learning with Python 

***Pay $15 or more to also unlock!***

* Fluent Python 
* Web Scraping with Python Second Edition
* Test-Driven Development with Python Second Edition
* Flask Web Development Second Edition
* Twisted Network Programming Essentials Second Edition

Are any of these books recommended?",1557113392.0
A Python story,272,bhsk5k,learnpython,https://www.reddit.com/r/learnpython/comments/bhsk5k/a_python_story/,37,"5 weeks ago I bought my kid (7) a book named 'Programming Python games for kids'. I bought it because programming tickled my interest when I was that age (@echo off, Basic anyone?) and we both like gaming.
However, instead of him reading the book and learning Python, I digged into it and Python got me in it's grip...

Besides the book, I (ofcourse) checked a lot of tutorials and searched for documentation, because I was hungry for more! I am still, and the problem now is that I cannot stop (getting literaly tired here to solve code).

Me and my son, we make up stories together before bedtime and we also do a guessing game. The one where he gets 3 guesses to find a number between 1 and 10 and when he guesses 2/3, he wins for the night...

I actually made this program now! It's still in a console window but it works and it's super awesome that my son likes to play it! (we still have that game together before bedtime, this I don't want to be automated!)
Also I am working on a GUI version of the game with, ofcourse tkinter.

Talking about tkinter, I just made a GUI program to use at work.

At work we sometimes need to send a mail to 2 persons to ask for a transfer from one shop to another. Instead of writing a decent looking mail every time, my program just asks:

- Order nr.:    user input
- Article code:    user input
- From shop:    user input
- To shop:.   user input

There is a send button, that destroys itself after pressing (vs. spam) , creates the text 'E-mail sent' and an exit button that does root.destroy()

All the user input gets formatted in a proper e-mail and the 'From shop' input is used to send from that particular shop's e-mail adress and to end the mail with something like 'Thanks in advance, shop...'

I have no idea why I am so hyped and I am sorry for the wall of text, but I just want to say to everyone here that I love Python a lot and I have a lot of fun messing around with all the posibilities.

Thank you for being such an awesome and supportive community!

I also want to thank the YouTube channel 'Programming with Mosh' to help me on my way in an easy and understandable matter!

PS: sorry for my English.",1556319112.0
[How To] Stock Analysis in Python,276,8x6y7s,learnpython,https://www.reddit.com/r/learnpython/comments/8x6y7s/how_to_stock_analysis_in_python/,74,"Let me preface this by saying that I'm no investment guru. I just learn by trial and error, and by reading a lot. So if this sounds like a big pile of manure, my apologies in advance for the doo-doo.

I'm starting a youtube series on security analysis using Python / data science. It's completely free and doing it purely from the perspective of teaching. Maybe python is overkill but heck, i find it useful so maybe other people do too.

I used to be big into algorithmic trading, until one day, I looked at my algos returns and realized even though they did pretty decent, all the trading fees basically ate up big chunk of the returns to the point that there was no point in trading, and instead buying an index fund. ;/

Since then I've been more active in the 3 fund portfolio (VTSAX, VTBLX, and the VTIAX). But started moving slowly into my own portfolio of equities. This is some of the automation I've been working on as personal project.

If you don't like excel, or don't like doing manual data entry..

What I plan to cover:

* downloading / cleansing / aligning data
* using python / jupyter notebook to read in, comment, and visualize data
* analyzing financial statements - and how to connect the dots with charts / graphs
* how to automate the whole thing so you don't have to do this every time 10q/10k comes out
* how to templatize so you can screen stocks much faster

I don't know if this is interesting or useful, but I thought I would put it out there.

Oh yeah, and i'm doing this completely feed-driven - your feedback / ideas / suggestions will determine what I make.

If you like it, I would appreciate if you subscribed to my channel, as well as an upvote on reddit.

Here's the video

[https://www.youtube.com/watch?v=wwlHQ5CDtLM](https://www.youtube.com/watch?v=wwlHQ5CDtLM)",1531101808.0
I deployed my first fully functional python script at work today,273,13w6byb,learnpython,https://www.reddit.com/r/learnpython/comments/13w6byb/i_deployed_my_first_fully_functional_python/,39,"Background post [here](https://www.reddit.com/r/learnpython/comments/13d9hf3/critique_my_code_please/) and below:

I started working on this project a little over 30 days ago because it is something my team needed ASAP. I have no background in programming, nor any formal programming education/training, but I am well-versed in SQL.

In a nutshell, my script makes 3 calls to the API of a case-management software that we use (2 of which loop and pass data into the API call), unpacks the JSON results into 3 dataframes, merges the resulting dataframes, and finally does some cleaning up of the resulting dataframe before finally outputting the last dataframe to a csv.

We have the script deployed to a linux vm and use a workflow management software to SSH into the  vm and call a shell script that executes the python in the appropriate conda environment. The resulting csv is then returned back to the workflow management software where it is then inserted into our EDW for later use in tableau dashboards

I must say I am pretty proud of myself about this. This community definitely helped me out in a pinch a couple times so thank you to those of you who have the knowledge and freely share it. 

I told myself last year I wanted to dabble in python and a month ago I was thrown into it headfirst. It was frustrating at times, but I'm excited to see how far it has come in just a month's time. The journey continues!",1685491023.0
anyone else feel like they are not the ones writing the code when coding in python ?,278,pqgien,learnpython,https://www.reddit.com/r/learnpython/comments/pqgien/anyone_else_feel_like_they_are_not_the_ones/,156,"i've been doing C lately to learn algorithms and data structures in it and improve my ""communicate with the computer"" skils.

when i started doing some C and started realizing that there isn't a standard library that can do everything for me and i have to make my own stuff i started writing header files instead of having to write the same stock functions like \`in\_array()\` everytime.

im still at a very basic level in C and in programming in general and i don't do anything complex so writing these header files wasn't hard, now im currently doing a project in python involving a lot of interacting with the OS and using the os module and i don't feel like im the one doing anything.

want to check if a string is a directory ? type in ""os.path.isdir(string)"" and let the magic that you aren't actually writing happen.

writing in python makes me feel like im not learning anything except what magical commands in what library made by the efforts of someone else do what and how to stick them together to make something.

how do i stop this guilt ?",1631942851.0
Any sites where one can do python challenges?,277,jr5klc,learnpython,https://www.reddit.com/r/learnpython/comments/jr5klc/any_sites_where_one_can_do_python_challenges/,55,"Im new to python, mostly learning for pentesting purposes, and im following a tutorial on YouTube. Im learning a lot of concepts quite rapidly and while some of it is sticking some is lost. 

When learning hacking there are lots of resources for practice like hackthebox and overthewire that give you objectives that you have to complete using your knowledge. Im a hands on learner and this kind of thing really helps me retain knowledge. 

Just wondering if any such resource exists for python. Maybe something that gives you a program objective and you have to write the code yourself.

TIA!",1604953632.0
How easy is it to convert python projects to online web apps using Flask?,276,hzc5oc,learnpython,https://www.reddit.com/r/learnpython/comments/hzc5oc/how_easy_is_it_to_convert_python_projects_to/,51,"I’ve made a few projects, and I’m currently learning Flask. I’ve got to the point of a very simple blog-type website, with a test page that has a Comments Form and uses SQLAlchemy to store and display comments, all hosted on Heroku. 

My question is: how easy is it to transfer other projects to be viewable online? Eg a command line Hangman game, or some machine learning projects I’ve done? Will it require specific modules for each project?",1595931515.0
Best Online Python Courses?,272,gtccfs,learnpython,https://www.reddit.com/r/learnpython/comments/gtccfs/best_online_python_courses/,125,"Hi, I'm looking to upskill at the moment while I have spare time because of working from home.  
  
I'm a devops engineer with a lot of experience with Bash and some very minimal experience using Python.  
  
Pretty much just updated a few Lambda functions and added on (probably badly) to existing code.   
  
Code anyone recommend an online course that I could take to learn Python from beginner level?  
  
Thanks.",1590835592.0
This is maybe the fourth time I'm going to teach myself how to code in Python. I haven't touched any coding since February...,275,c2pofn,learnpython,https://www.reddit.com/r/learnpython/comments/c2pofn/this_is_maybe_the_fourth_time_im_going_to_teach/,119,"Yep, you read that right. It keeps being this on again off again thing for me although I know in the long run it would benefit my career greatly. Guess I'm relearning everything again...",1560994189.0
Thank you r/learnpython Mods,273,14732vv,learnpython,https://www.reddit.com/r/learnpython/comments/14732vv/thank_you_rlearnpython_mods/,19,"There's been a lot of discussion across Reddit recently about changes to the API, and how Reddit the company is treating its community, especially those whose work goes into maintaining all the subs.

I just wanted to take a moment to say thank you to the mods of r/learnpython. There's a saying in the larger Python community: ""I came for the language, I stayed for the community."" That reflects my experience here in r/learnpython as well. I came here a long time ago to ask some questions. I stayed because this is one of the most responsive online Python communities I've ever found, while being entirely welcoming to people of all skillsets and experience levels as well. 

The work that mods do to keep a community running like this is largely invisible. When a community is run well, it's easy to assume the moderators don't have a whole lot to do. Many of us know how hard and how intentionally you all are working to keep this such a healthy and meaningful community. Thank you so much for what you do here.",1686512248.0
My first proper game!,276,j6n50t,learnpython,https://www.reddit.com/r/learnpython/comments/j6n50t/my_first_proper_game/,46,"Hello! I've been trying to learn Python and I came up with my first guessing game. I got some help from a couple of online resources but that's about it. I'm super proud of it! Hope you guys enjoy it :)

    import random
    secret_num=int(random.randint(1,10))
    print(""Hello! Welcome to Proman286's guessing game! The aim of the game is to try and guess a number from 1-10 that the program is thinking of. You only get 3 chances!"")
    guess=int(input(""Guess the number: ""))
    num_chances=3
    num_limit=1 
    
    while guess!=secret_num:
        if num_chances==num_limit:
            print(""You didn't win :("")
        num_chances-=1
        print(""You have "" + str(num_chances) + "" chances left."")
    
        guess=int(input(""Incorrect guess. Try again: ""))
        
        
    if guess==secret_num:
        print(""You win!"")

Thanks!

&#x200B;

Edit: Woahhhh Silver, who would have thought? Thank You Reddit!

Edit 2: More awards whaaat???",1602058803.0
I am currently making a python version of the Processing language,276,ivddy4,learnpython,https://www.reddit.com/r/learnpython/comments/ivddy4/i_am_currently_making_a_python_version_of_the/,25,"TL;DR : [Here's the link to the repo](https://github.com/Dogeek/pyprocessing)

I watch a few programmers on YouTube, and most of them use [Processing](https://processing.org/). Channels like carykh, Coding Train or Code Bullet use that language. I got the idea while watching a video from that last youtuber, who had to code his AI again in python because of missing libraries for processing  (in this case, tensorflow). Thus began this project.

So far, the implementation is pretty bare bones, it doesn't quite work, but the framework is there. If you're looking for a fresh project to contribute to, and are not too spooked by OOP and metaprogramming, you're welcome to contribute.

I plan to support every feature from processing, as well as give the ability to render the app with tkinter, pyqt, pygame, or as a webserver. One of my goals is to keep the syntax as close as I can to the original language (albeit pythonized, for instance, snake_case instead of camelCase) and using the standard library as much as possible.

I am aware that [processing.py](https://py.processing.org) exists, but it doesn't seem to be maintained anymore (it only supports python 2), and it's not really a python package, but more of a syntactic change on processing, therefore one can not import it in a python script, or use third-party python libraries with it (it seems to be very limited)",1600459217.0
My first web-scraper! Pick it apart please!,269,h823cd,learnpython,https://www.reddit.com/r/learnpython/comments/h823cd/my_first_webscraper_pick_it_apart_please/,50,"I recently made the switch from JS to Python and holy cow I love it. This is my first python project and also my first web-scraper. I'd love it if anyone could visit my github and review my code/run the project and give me any tips on better practices, optimizations I could make or any other suggestions. I learned a lot from this project and am pretty proud of it but I feed off of criticism! Thanks in advance, Link below!  


 [https://github.com/tbednarz/codebat-scrape](https://github.com/tbednarz/codebat-scrape)",1592029476.0
So I guess I'm done learning the fundamentals of Python and yet it still feels as if I don't know programming.,274,bvptmy,learnpython,https://www.reddit.com/r/learnpython/comments/bvptmy/so_i_guess_im_done_learning_the_fundamentals_of/,92,"I can definitely code, given tasks I may know how to apply the basics. Did anyone feel this way? How did you overcome it? Did you jump into projects? How and which one's?",1559424598.0
"Fellow Beginners: you don't have to make something useful that ""you would use yourself""",272,b7by9p,learnpython,https://www.reddit.com/r/learnpython/comments/b7by9p/fellow_beginners_you_dont_have_to_make_something/,64,"Some advice I always came across when I was just starting out, looking for project ideas, was to engage in projects and to come up with something useful that can support you in your daily life. This never really helped me, because: I just learned about if-statements, how am I going to make something that all the software engineers in the world combined have never thought of and implemented way better than I could at my level?

Still, building your own stuff without the help of tutorials can teach yourself a lot that you wouldn't learn otherwise; so what should you make?

A simple answer is that what you build does not have to have to solve any problem; I for example made a webscraping/ twitter bot with my friend. After we tried to make an interesting application for a while, we just decided to fuck it and make a really shitty bot that still does something, but is not really useful and kinda bad on purpose –  we had a blast, and we even learned new concepts along the way!

So if you find yourself stuck in the same position, don't obsess over trying to find a good idea – make whatever you feel like – but make something.",1553956539.0
"Hey python community, my brother and I have the opportunity to learn python for the summer. We have been given a budget (so that means paid courses!!) What do you all suggest to be the best python courses?",276,nx6mct,learnpython,https://www.reddit.com/r/learnpython/comments/nx6mct/hey_python_community_my_brother_and_i_have_the/,100,"I will look at all repsonses, so feel free to explain from your expierence",1623383462.0
My journey so far and what I didn't like about it,275,mcn939,learnpython,https://www.reddit.com/r/learnpython/comments/mcn939/my_journey_so_far_and_what_i_didnt_like_about_it/,94,"I love learning python, it's fun and usually easy to understand while having powerful applications but throughout my journey I have have noticed some things that I have disliked...

FYI, I consider myself to be at a level form a scale from 1 to 10 being 1 complete noob to 10 God of programming something close to a 3 maybe.

1. starting to learn is overwhelming, there are so many resources, most usually bad (they don't hold your hand), it took me months to finally ""start"" learning

2. automate the boring stuff, is an amazing intro but once you reach a certain level they seem very simplistic and I dislike how the author doesn't use the base libraries and instead recommends others.

3. So much code online that uses depracated code that no longer works with python 3.7+ is annoying

4. likewise python 2 users, STOP using python 2, get with the times, there's python 3 and maybe a 4 soon. So much depracated code online meant for python 2 instead of python 3 and it usually doesn't work. making me bang my head against the wall for hours wondering why it doesn't. why still code in python 2?

5. unless my program is extremely simple, most of the times I have no idea how to program it, which lends to hours on the internet trying to find code that does what I want it to do or interpret snippets of code that is close to what I want to do and mold that crap onty My program and hope for the best, its extremely time consuming.

6. Coding isn't so obvious, and it's definitely not for everyone, there is a steep learning curve if you have never coded anything or even typed an if statement I  excel.

7. I only paid for one course, Python for research by hardvard, although I understand the concepts I takes me 10 times as long to test each program they talk about because I want to understand it and they go so fast , so a course that takes someone 2 months is taking me closer to 5. definitely not for beginners.

8. some documentation for how to use some libraries are extremely vague leaving you hunting for proper examples on how to use the damn thing.

9. there seems to be no easy way to share a program for people who are not programmers to use the program you made, I still struggle with this. 

10. sometimes my programs are slooowwww, for example an email program I'm writing, just getting it to list all the subjects of all the emails takes forever, and I'm sure there Is a better and faster way to code it but like I said documentation is extremely vague, that's the frustrating part, knowing there is probably a better solution but you have no idea what it is. 

11. actually finding a useful use for python is harder than most people think, you have to be really creative with and interesting problem to solve whose solution doesn't already exist with some other pre existing programs. My mantra lately has been ""python is usually the answer"" if they ask me to do something at work. sometimes it pays off, sometimes it doesn't, it's a huge bet usually. 

12. the example exercises bored the crap out of me, I wanted to run when I didn't even know how to walk and that was a rough road because my first usable program was using the API of the e-commerce site to make a report, it was the deep end of the pool and it was hard learning about it. 

13. Your Google-fu will fail you sometimes , because you are not sure how to ask the question you need the answer too because you still don't know the lingo. I want the ""thing"" to do the ""other thing"" is difficult to search for

14. when some courses show deprecated code and it doesn't work when you try it yourself and you waste hours trying to figure out why and then once you find out the code has an error, searching Google for the correct way to do it 

_______

what I do like so far :

1. people actually seem impressed when you know at least Some python (really stands out in an interview) and even more so when you used it to solve something at work 

2. it's fun and you have to be really creative (when shit works) 

3. it can be magical sometimes the range of functions python has. 

there's more points (I'm sure I'll edit this later) but , I don't regret it, I like python but it's definitely not for everyone. 
I hope to keep learning. 

thanks to everyone in this sub, they are very helpful to get me unstuck sometimes...",1616638121.0
How is the learning curve?,272,gih4s5,learnpython,https://www.reddit.com/r/learnpython/comments/gih4s5/how_is_the_learning_curve/,136,"I have very low motivation, and python, is not coming to me at all.

Its an intro class I'm in but the rest of the students have used python before,

and I have only done such little coding.

I feel like I will never get it and I just want to cry.

Do you guys know videos to watch?

I just have no clue what to do. In math or physics I just look it up on kahn academy,

but that is (seemingly) impossible. 

I could do what I need to code by hand, but I just don't get it.

I don't even know what questions to ask.

Advice for this vague ""I am so lost"" would be appreciated.

I'm sorry if this is common, I tried searching and I couldn't find it.",1589307999.0
Please let me know of other APIs that provides historical stock price data for free,272,fun4su,learnpython,https://www.reddit.com/r/learnpython/comments/fun4su/please_let_me_know_of_other_apis_that_provides/,47,I've found 9 already. Here's the link to it: [https://github.com/evonshahriar/stock-quotes](https://github.com/evonshahriar/stock-quotes). Please have a look and recommend if you see any missing API. It'll come handy later.,1585973482.0
Python Crash Course (Eric Matthes) vs. Automate the Boring Stuff with Python?,275,fi8kyb,learnpython,https://www.reddit.com/r/learnpython/comments/fi8kyb/python_crash_course_eric_matthes_vs_automate_the/,50,"Hi! :)
I'm trying to learn python this semester and I found these two books. 
I've read some comments in this sub recommending Automate the Boring Stuff with Python, but then I found Python Crash Course (Eric Matthes, Ed. No Starch Press) and I'd like to know what are your thoughts on this book and which one you prefer and why

Thank you :)

Edit 1: Thanks for all of your responses! I think I'll go for both as many of you suggested. First PCC and then ATBSWP. Wish me luck c:

Edit 2: Non English speaker. Didn't mean to say  pretending but trying :)",1584140262.0
What are some web scraping tricks everyone should know?,270,9ey53x,learnpython,https://www.reddit.com/r/learnpython/comments/9ey53x/what_are_some_web_scraping_tricks_everyone_should/,69,"I've been learning Python for sometime now. Every now and then I need to scrape stuff, what are some tips or tricks which might help me improve my workflow?",1536676889.0
"2,000 free sign ups available for the ""Automate the Boring Stuff with Python"" online course. (July 2023)",269,14pwetl,learnpython,https://www.reddit.com/r/learnpython/comments/14pwetl/2000_free_sign_ups_available_for_the_automate_the/,36,"EDIT: The codes are all used up this month, but you can still watch [the first 15 videos for free on YouTube](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW). I've enabled Preview on all the videos, so you can watch them from [the course page](https://www.udemy.com/course/automate/).

If you want to learn to code, I've released 2,000 free sign ups for my course following my Automate the Boring Stuff with Python book (each has 1,000 sign ups, use the other one if one is sold out): 

~~https://  udemy.com/course/automate/?couponCode=JUL2023FREE~~

~~https://  udemy.com/course/automate/?couponCode=JUL2023FREE2~~

Udemy has changed their promo code and severely limited the number of sign ups I can provide each month, so only sign up if you are reasonably certain you can eventually finish the course. [The first 15 of the course's 50 videos are free on YouTube if you want to preview them.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

YOU CAN ALSO WATCH THE VIDEOS WITHOUT SIGNING UP FOR THE COURSE. All of the videos on the course webpage have ""preview"" turned on. Scroll down to find and click ""Expand All Sections"" and then click the preview link. You won't have access to the forums and other materials, but you can watch the videos.

**NOTE: Be sure to BUY the course for $0, and not sign up for Udemy's subscription plan. The subscription plan is free for the first seven days and then they charge you. It's selected by default. If you are on a laptop and can't click the BUY checkbox, try shrinking the browser window. Some have reported it works in mobile view.**

Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.

Some people in India and South Africa get a **""The coupon has exceeded it's maximum possible redemptions""** error message. [Udemy advises that you contact their support if you have difficulty applying coupon codes, so click here to go to the contact form.](https://support.udemy.com/hc/en-us/requests/new?type=student) If you have a VPN service, try to sign up from a North American or European proxy.

**I'm also working on another Udemy course** that follows my recent book ""Beyond the Basic Stuff with Python"". So far I have [the first 15 of the planned 56 videos done. You can watch them for free on YouTube.](https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&index=1)

Side note: My latest book, Python Programming Exercises Gently Explained is a set of 42 programming exercises for beginners [for free](https://inventwithpython.com/pythongently/) or as a [99 cent ebook](https://www.amazon.com/Python-Programming-Exercises-Gently-Explained-ebook/dp/B0BGYJ7G6T/).


**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",1688421878.0
Help. Script folder is empty when installed python,267,rd6tat,learnpython,https://www.reddit.com/r/learnpython/comments/rd6tat/help_script_folder_is_empty_when_installed_python/,23,So I installed python and my script folder is empty there is no pip. There is another script folder in DLL. But I don't know what to do.,1639136383.0
Best honest resources to learn Python for beginners. Road map for python?,271,jgaflw,learnpython,https://www.reddit.com/r/learnpython/comments/jgaflw/best_honest_resources_to_learn_python_for/,52,"Hey guys, 

I am just starting to learn python since I want to give a complete 180º to my career, and I am trying really hard to learn the most everyday. I have search a lot through the internet but I just find that everything that you get recommended is not totally useful for someone that is just starting and has no previous experience programming. 

Could you guys recommend me some resources to starting learning from scratch? I really prefer courses that have videos explaining some theory and then having exercises to practice, because it is definitely the best way to learn and understand code. They don’t really need to be free as long as they are good to understand python. 

I have just finished Introduction to python online course from Stanford, and I think it was really good to learn the basic. But I don’t really know where to go from here. What roadmap should I take?

Thanks you guys!!!!",1603406546.0
How should I be organizing my code inside GitHub?,268,g6g2dw,learnpython,https://www.reddit.com/r/learnpython/comments/g6g2dw/how_should_i_be_organizing_my_code_inside_github/,32,"Hello all,

In the process of learning Python since early March.  I was doing some projects and using GitHub, but have slowly learned how much I really need to make my GitHub repositories ""pretty"" and readable.

I have a README, but usually other than that I just drop my code in as one giant .py file.  I usually have no other files in there except if it does something with data and there's also a csv.

When I see people who are experts they have a billion folders in their repositories and seem to separate out the code.  I realize my projects are simple and probably don't need many different files, but I feel like it might be good to get into the habit of doing it.

Like if I use classes should I have all those be defined in one file and then import it into anything that uses one to create an object?  Should I be breaking my code up or something?

Thanks in advance!",1587615207.0
"""J'Accuse!"" A text-based mystery game written in Python",273,b2nhcd,learnpython,https://www.reddit.com/r/learnpython/comments/b2nhcd/jaccuse_a_textbased_mystery_game_written_in_python/,35,"I'm creating a series of short, simple, text-based games in Python that beginners can look at to see examples of programming concepts being used to make actual programs. The complete repo is here: https://github.com/asweigart/pythonstdiogames

The J'Accuse game source code is here: https://github.com/asweigart/PythonStdioGames/blob/master/src/jaccuse.py

The game is similar to Homestar Runner's ""Where's an egg?"". Someone has kidnapped ZOPHIE THE CAT, and you travel to different locations to question suspects. Each location has a suspect and an item. Suspects either always lie or always tell the truth. You must deduce who has ZOPHIE THE CAT within 4 minutes, and you can accuse up to three people.


EDIT: A twitch stream of me making this game will up for the next couple of days here: https://www.twitch.tv/videos/397250824",1552940169.0
MIT's Intro to CS using Python opens May 30th,270,6afs8z,learnpython,https://www.reddit.com/r/learnpython/comments/6afs8z/mits_intro_to_cs_using_python_opens_may_30th/,76,"https://www.edx.org/course/introduction-computer-science-mitx-6-00-1x-10

thought some might benefit from enrolling. ",1494451850.0
"Is it weird that I NEVER use while loops? It’s just not something I’ve felt like I needed, ever. What are some situations where using a while loop is necessary?",274,xqn79y,learnpython,https://www.reddit.com/r/learnpython/comments/xqn79y/is_it_weird_that_i_never_use_while_loops_its_just/,190,"I’ve written a lot of python code over the last few months, but I can’t think of a single time I’ve ever used a while loop. I mean, I use for loops pretty often, but not while loops.

Is this just down to personal preference, and I’m just using what I’m comfortable with? Or can you guys think of some situations where a while loop would be the easiest way to do things, but it’s possible to do it with a for loop? Maybe I’m using for loops in situations that I should be using while loops.

EDIT: Thanks for the suggestions. I found a few places in my code where a while loop makes sense.

First, I check if a folder has any files in it, and while it does, I delete the first one in the list: 

    useless_files = os.listdir(""MGF_HR_Data"") # I think these are files it creates when downloading the MGF data but they are extra and don't do anything 
    while len(useless_files)>0: 
        os.remove(f""MGF_HR_Data/{useless_files[0]}"") 
        useless_files = os.listdir(""MGF_HR_Data"") 
        print(""Deleting useless file from MGF_HR_Data"") 

I also used a while loop to check if the data has been downloaded, and if it hasn't prompt the user to download it and then press enter to check again. This way, the code doesn't break if the user forgot to download the file first: 

    # Check if you downloaded the file in Matlab already. If not, ask the user to download it and try again. 
    while os.path.exists(file1)==False: 
        print(f""{file1} not found. Please open Matlab and run the following code to download the MGF data:"" )
        print(f""download({wstime.year}, {wstime.month}, {wstime.day})"")
        input(""Press enter to try again after downloading the MGF data. \n"") 

(Okay, I know this isn't the most efficient way to do this. There must be a way to use python to open matlab and run a matlab command, rather than asking the user to do it themselves. However, I don't know how to do that, so this works for now.) ",1664396312.0
What’s your salary?,273,x7iqqv,learnpython,https://www.reddit.com/r/learnpython/comments/x7iqqv/whats_your_salary/,373,"Those that use python, what do you do and what’s your salary?",1662490883.0
Writing clean code,269,jcrt5o,learnpython,https://www.reddit.com/r/learnpython/comments/jcrt5o/writing_clean_code/,56,"I’m getting good enough to write some really cool stuff, but I’m wondering if my process is normal. 

I always write a lot of messy code that do what I want it to do, and then clean up after. 

Basically this means that initially, my code is a mess of  functions, classes and just plain code outside any of the former. 

After things work, like some web scraping, I start to clean up the code. Simplifying, adding classes and removing a lot of prints. 

Is this normal or am I inefficient?",1602925109.0
My password generator is 1 character too long,272,cwzlpf,learnpython,https://www.reddit.com/r/learnpython/comments/cwzlpf/my_password_generator_is_1_character_too_long/,71,"Got this code

    lowercase = ['a', 'b' 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u',
                 'v', 'w', 'x', 'y', 'z']
    uppercase = ['A', 'B' 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U',
                 'V', 'W', 'X', 'Y', 'Z']
    special = ['$', '%', '*', '^', '@']
    
    characters = [lowercase, uppercase, special]
    
    password = random.choice(lowercase)  # Ensures password begins with a lowercase letter
    
    password_length = 7
    
    for x in range(int(password_length)):
        random_set = random.choice(characters)
        random_character = random.choice(random_set)
        password += random_character

So it basically assigns a random lowercase letter to password then cycles through if the next character will be lowercase, uppercase or special and then randomly selects a character from that list.

Issue I have is this is giving me a 9 character password instead of 8, initial character plus 7 from the for loop. So will the for loop be counting from 0 and not 1?

Also a better way to write this code?

&#x200B;

**UPDATE:** As pointed out by a couple of people this code gives an 8 digit password as expected but it seems if i keep running it I randomly get a 9 digit password now and again. At one point I even got a 10 digit password!

&#x200B;

    $ python password_generator.py 
    rSnxS$XN (8)
    
    $ python password_generator.py 
    iqGAPF$s (8)
    
    $ python password_generator.py 
    rO$Ik*NR (8)
    
    $ python password_generator.py 
    p^@XVz@F (8)
    
    $ 
    
    $ python password_generator.py 
    ne^^tPf% (8)
    
    $ python password_generator.py 
    tOEg@ZZbc (9)

&#x200B;

**UPDATE 2** \- Thanks for all the comments. Who would have thought a misplaced comma would lead to me learning so much :) Code is now as below

&#x200B;

    password = random.choice(string.ascii_letters)  #Ensures first character is not a symbol
    
    while len(password) < 8:
        password += random.choice(string.ascii_letters + string.digits + '$%*^@!')

PS the only reason why the character needs to start with lowercase is because this hands off to a program called GAM and that was crashing if password started with a $ symbol. I know I can write this better to stop that happening but just decided to put in a lowercase as first letter",1567078207.0
I wrote a script that downloads and saves all images from a subreddit to my computer to use as wallpapers and would love some feedback,268,c7vsa5,learnpython,https://www.reddit.com/r/learnpython/comments/c7vsa5/i_wrote_a_script_that_downloads_and_saves_all/,34,"I wrote this script because I realized there were a bunch of amazing pics on reddit that could be used as wallpapers. I did this mainly as practice, and I would love to get some feedback and suggestions from people.

current issues:

right now I am only saving pics that are from imgur. that is because this site was the most consistent in terms of hosting .jpg pics without raising errors.

another issue is not all the pics are the same size so on my computer there is black spaces cuz the size isn't the same. anyone know how to discriminate on pic resolution or something? 

anyways heres the code.

Thanks!

&#x200B;

    import praw
    import requests
    import urllib.request
    
    '''
    ==================User Input====================================================
    '''
    
    # Enter your app details below
    reddit = praw.Reddit(user_agent = '*******', 
    					 client_id = '**********', 
    					 client_secret = '********', 
    					 username = '*******', password = '******')
    
    #Enter Subreddit name here (Make sure name is between '' marks)
    
    subreddit_name = 'roadporn'
    
    
    
    
    '''
    ==================DO NOT EDIT BELOW THIS LINE===========================================
    '''
    
    
    def load_processed_posts(save_file):
    	try:
    		with open(save_file, 'r', encoding = 'utf-8') as temp_file:
    			return temp_file.read().splitlines()
    	except:
    		with open(save_file, 'r', encoding='utf-8') as temp_file:
    			return []
    
    def update_processed_posts(url_file, url):
    	with open(url_file, 'a', encoding = 'utf-8') as temp_file:
    		temp_file.write(url + '\n')
    
    def get_images():
    	for submission in posts:
    		url = submission.url
    		if url not in processed_posts:
    			print(url)
    			update_processed_posts('pic_url.csv', url)
    
    
    def download_images():
    	with open ('pic_url.csv') as urlfile:
    		counter = 1
    		for url in urlfile:
    			with open('downloaded_images_file.txt') as downloads_txt_file:
    				if url not in downloads_txt_file:
    					if 'imgur' in url:
    						result = requests.get(url, stream=True)
    						if result.status_code == 200:
    							url_split = url.split('/')
    							file_name = url_split[-1]
    							if '.jpg' in file_name:
    								file_name_split = file_name.split('.')
    								file_name_split = file_name_split[0]
    								print(file_name_split)
    								urllib.request.urlretrieve(url, r'C:/Users/sebas/OneDrive/Wallpapers/' + file_name_split + '.jpg')
    							elif '.' in file_name:
    								print('file {} has been skipped'.format(file_name))
    
    							else:
    								print(file_name)
    								urllib.request.urlretrieve(url, r'C:/Users/sebas/OneDrive/Wallpapers/' + file_name + '.jpg')
    							print('Images Saved = {}'.format(counter))
    							counter +=1
    					print(url)
    					update_processed_posts('downloaded_images_file.txt', url)
    
    
    subreddit = reddit.subreddit(subreddit_name)
    
    posts = subreddit.top(limit=None)
    
    processed_posts = load_processed_posts('pic_url.csv')
    
    get_images()
    print('='*50)
    download_images()",1562000557.0
Recently found a tool I find extremely helpful to visualize python code execution.,271,89p035,learnpython,https://www.reddit.com/r/learnpython/comments/89p035/recently_found_a_tool_i_find_extremely_helpful_to/,32,"I'm sure this has been mentioned here before but I've been doing 'Automate the boring stuff' and the author brought up this tool and it is fantastic!  

Enter your code in and will execute each step showing you exactly what is happening.  Great for figuring out why something isn't working how you expect it to.

[Python Visualizer](http://www.pythontutor.com/visualize.html#mode=edit)",1522844878.0
How to learn OOP properly?,267,11v3p28,learnpython,https://www.reddit.com/r/learnpython/comments/11v3p28/how_to_learn_oop_properly/,51,"Python is my first programming language, I've been studying for a while, but I still don't understand OOP properly. 

What tutorials or resources do you guys recommend?",1679180355.0
Python tutorials building large(r) projects,272,kyf3u1,learnpython,https://www.reddit.com/r/learnpython/comments/kyf3u1/python_tutorials_building_larger_projects/,21,"Hi Pythonistas, I am looking for some tutorials/ projects/ books focused on building large-scale project. One such example would be [Flask Mega tutorial](https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world) by [Miguel Grinberg](https://twitter.com/miguelgrinberg?lang=en). [Real Python](https://realpython.com/) tutorials offer good explanation on individual topics but there are not projects where full-scale projects are built. Blog posts and quick tutorials generally introduce the concepts but do not offer in-depth comparison of an approach with possible alternatives.   


Thank you for your suggestions :)",1610785089.0
How to become a 'real' programmer,267,17rhsov,learnpython,https://www.reddit.com/r/learnpython/comments/17rhsov/how_to_become_a_real_programmer/,71,"I can write (intermediate level) python code in Pycharm that does some things, if something doesnt work or I need new solutions/packages etc. I can google it and usually figure it out..

However.. 
It feels like the difference between programmers and people that 'know how to code' is the knowledge and skills about everything surrounding the code itself..
How to work with Git/Github, Versioning in General, things like docker, how do I run things on servers and so on.. how do I professionally role out new software..

I can hardly do any of those things and they feel really hard to learn and I feel like they are rarely talked about when people talk about becoming a programmer as a job opportunity.

Sorry for the long rant.. I hope some people get what I am trying to say :)

(about me: I work part time and (almost) got my Msc in pure mathematics ..so it's not like i have much experience^^)",1699549898.0
Can someone explain me why is it so beneficiary to create a virtual env for every project?,267,swsarl,learnpython,https://www.reddit.com/r/learnpython/comments/swsarl/can_someone_explain_me_why_is_it_so_beneficiary/,127,I still dont understand it.,1645329893.0
How to succeed as a Python programmer,269,ryhr48,learnpython,https://www.reddit.com/r/learnpython/comments/ryhr48/how_to_succeed_as_a_python_programmer/,93,"Hi, I'm Andy! My 2022 goal is to learn programming, with a focus (and great interest) in Python. 

If you are someone who hires, I'm asking for your help. Please, let me know what the strengths you look for in a candidate. It would really help to know what skills are in demand.

If you are someone who works with Python, I have some questions for you, too. Who offers high quality training? What skills have really prepared you for success in the workplace? What did you wish you knew earlier?

I'm looking forward to hearing from the community. 
Thank you for taking the time to read this.",1641589130.0
Can I (M30s) build a career off Python in the next 5 years with no prior coding experience?,268,11gavr5,learnpython,https://www.reddit.com/r/learnpython/comments/11gavr5/can_i_m30s_build_a_career_off_python_in_the_next/,137,"I got really fascinated with Chat gpt while seeking help in building vba scripts for excel and wanted to get into the field of programming. But I think I'm late. Would you recommend starting with Python directly to eventually make a career out of it in the next 5 years?

I absolutely have no coding experience.",1677783871.0
"If you had $3,500 to learn Python, how would you spend it?",263,twff28,learnpython,https://www.reddit.com/r/learnpython/comments/twff28/if_you_had_3500_to_learn_python_how_would_you/,178,"My company is giving me a $3,500 stipend for learning, and I’d like to apply that towards learning Python/programming. I’d like to focus on some work with APIs if possible. 

I’ve previously spent some time with programming (most of Automate the Boring Stuff and all of CS50x). 

I’m open to any suggestions!

Thanks in advance :-)",1649112298.0
I published my first Python package!,268,p0zoja,learnpython,https://www.reddit.com/r/learnpython/comments/p0zoja/i_published_my_first_python_package/,15,"EDIT: I'm currently applying the changes that you guys said, really thanks to everyone who spent a time posting a feedback here.

It allows you print a directory tree structure in your Python code in a nice way, like this:

    📂 C:
    |_📂 Users
      |_📂 User
        |_📂 Desktop
          |_📂 directory-structure
            |_📁 .git
            |_📁 dist
            |_📁 src
            |_📁 tests
            |_📄 LICENSE
            |_📄 pyproject.toml
            |_📄 README.md
            |_📄 requirements.txt
            |_📄 setup.py

Source Code on [Github](https://github.com/gabrielstork/directory-structure)  (Leave a star if you liked it :) ).

And you can see it on [PyPi](https://pypi.org/project/directory-structure/).",1628508910.0
any certification or exams for a python self learner?,270,nj24hi,learnpython,https://www.reddit.com/r/learnpython/comments/nj24hi/any_certification_or_exams_for_a_python_self/,47,I have been learning python for 3 months and wish to know if there is any certification or exams to take.,1621752890.0
How to run a python program in the background,265,l1b8ju,learnpython,https://www.reddit.com/r/learnpython/comments/l1b8ju/how_to_run_a_python_program_in_the_background/,43, Im using pyautogui to automate something when it clicks on the program its supposed to automate it stops nd only runs when my python intrepter is the current tab,1611156118.0
Why multithreading isn't real in Python (explain it to a 5 year old),269,fe80x9,learnpython,https://www.reddit.com/r/learnpython/comments/fe80x9/why_multithreading_isnt_real_in_python_explain_it/,101,"I'm really confused at all the explanations at why python can't achieve ""real"" multithreading due to the GIL. 

Could someone explain it to someone who isn't well versed in concurrency? Thanks!",1583468218.0
"I want to write a program that would allow me to search if a tv show/movie is in Netflix, Hulu, or Amazon Prime. How should I begin?",264,d869g2,learnpython,https://www.reddit.com/r/learnpython/comments/d869g2/i_want_to_write_a_program_that_would_allow_me_to/,52,"I have an ok familiarity with pandas, numpy, and regular expressions. I need some practice using web scraping and APIs. I’ve only written python code in a Jupiter notebook so I also need some practice using editors/IDEs as well. Is this a doable project? How should I begin?",1569243898.0
It's not much but I completed my first project yesterday after studying python for 2 weeks.,267,cmr680,learnpython,https://www.reddit.com/r/learnpython/comments/cmr680/its_not_much_but_i_completed_my_first_project/,66,"It's nothing major but I work in a gym where we have a daily quota of memberships we have to sell that's given to us in total dollar amount form. I just created a simple calculator tailored towards determining how many memberships that equates to needing at the beginning of the day and at any point in time during the day how many memberships we still have left to get in order to hit the daily goal. 

Again it's not much, nor is it anything spectacular but it's my first thing I've ever created on my own in Python after studying for two weeks and I'm proud that I was able to make it. I don't fully grasp all the concepts of python yet but making this project helped motivate me. 

PS. Python is the first language I'm learning. I have absolutely zero experience with programming and so I'm a complete beginner(I get jealous of some of you on here that can treat programming like it comes natural)

Edit: here's my script(typing it out). Open to all advice

eft_daily = input(""Enter your eft goal for today "") 

current_sold = input(""How many  sold today? "")

eft_calculator1 = int(eft_daily)  /  36.99 

print(eft_calculator1) 

print(""That is your total membership goal for the day "") 

print("" Therefore you still need... "") 

eft_calculator2 = int(eft_calculator1)  -  int(current_sold) 

print(eft_calculator2)

print(""You need to sell that many more today. "")",1565101162.0
What open source projects can I participate in as a learner?,265,ck698d,learnpython,https://www.reddit.com/r/learnpython/comments/ck698d/what_open_source_projects_can_i_participate_in_as/,23,,1564566329.0
I just wanted to let you all know how happy I am.,265,cegt8v,learnpython,https://www.reddit.com/r/learnpython/comments/cegt8v/i_just_wanted_to_let_you_all_know_how_happy_i_am/,94,"I just started learning Python today. I have bought a course on Udemy and I have been watching and practicing for about 6 consistent hours. Time flies when you have fun. I just reached the first major assessment and I did pretty well (1-2 mistakes). I'm so happy and I would continue to learn but all the new knowledge in my head starts to mix. Thanks to everyone for answering my questions in previous posts. <3

Edit: Thank you all for your support <3",1563388405.0
Totally blown away by python core libraries,266,1fmqke0,learnpython,https://www.reddit.com/r/learnpython/comments/1fmqke0/totally_blown_away_by_python_core_libraries/,28,"So recently found myself so thirsty to learn how things work under the hood in threading and websockets libraries of python and how python actually touches the system. It's a rabbit hole as most of you know, but I didn't, and I just found out. My gosh, can't even wrap my head around of the amount of work and complexity that has gone into those libraries. Up to a point my existential dread kick in xD. I felt so small and insignificant and that people do great things when they collaborate. Who does even architects or coordinates all this and also, I was wondering I might want to even contribute myself for both learning and giving back to the community. I just don't how/where to start. I used to know some C but nowhere close so I can contribute to a fucking core python lib. So any ideas on how I can start?",1727002549.0
Where do you usually go to ask dumb questions?,265,wyh8p3,learnpython,https://www.reddit.com/r/learnpython/comments/wyh8p3/where_do_you_usually_go_to_ask_dumb_questions/,122,"Hi there, I'm newly learning python, and rapidly learning that stack overflow is not super newbie friendly. I've only posted a couple questions and I've gotten super condescending answers, and usually had my question down voted and almost immediately closed. I literally had one guy say something like ""if you had just read the basics here"" and posted a link to a page I already had open. I really try my best to do my own research to figure things out, but sometimes I miss something or don't retain something and just need a hint.

I know my answer is some dumb little thing I've missed, but I searched for an answer and either couldn't find anything or didn't know what to search for to begin with. They usually mark it as a ""duplicate"" and refer me to a question they think will help, (sometimes it does, sometimes it doesn't). Most of the time it's something I couldn't find because it's only semi-related. Like it has parts of my question, but not the full context.

So where do you go for non-judgemental advice, when you just need a second pair of eyes on your code or a nudge in the right direction? Is this a good place? Or are there other more newbie-friendly forums out there?",1661540283.0
Best python GUI to learn?,266,lqbtxt,learnpython,https://www.reddit.com/r/learnpython/comments/lqbtxt/best_python_gui_to_learn/,82,Hey guys I was wondering what was the best python GUI to learn rn. Like easy/medium difficulty to learn and is aesthetic. Thanks!,1614063291.0
Python -- Don Knuth,265,gexlo4,learnpython,https://www.reddit.com/r/learnpython/comments/gexlo4/python_don_knuth/,39,"Most programmers have a favourite language, and that's more than OK. It's nice to know what a famous Mathematician / Computer Scientist said about Python:

Only ugly languages become popular. Python is the one exception  
\--Don Knuth",1588816541.0
Web Scraper,266,lz2ghi,learnpython,https://www.reddit.com/r/learnpython/comments/lz2ghi/web_scraper/,29,"I made a web scraper to scrape this subreddit (works with others as well) for the top 20 posts and plot them on a graph.

If you want to see the graph here's a link to a photo:  https://imgur.com/e9lEjkm 

&#x200B;

Link To Code: [https://github.com/Jamie2345/Reddit-Webscraper-for-most-popular-posts/blob/main/main.py](https://github.com/Jamie2345/Reddit-Webscraper-for-most-popular-posts/blob/main/main.py)

&#x200B;

Note: if your going to set it up it is a bit of a hassle because you have to change the headers to work with your system (steps to do this are included)",1615040342.0
New Computer Science Teacher Here,265,i3n7s2,learnpython,https://www.reddit.com/r/learnpython/comments/i3n7s2/new_computer_science_teacher_here/,151,"This summer, I got a job as a computer science teacher at my local high school.  I have a programming class, and decided that I will teach python as my main programming language.  I've been going through a course on skill stack (i dont recommend it) and reading some books on how to code python.  I find that it is so hard to find good sources of information.  I'd like to find a complete program to help me teach python, but i would settle for some sources of information and easy projects.  What would you have a class of high schoolers do to learn code?

print('thanks')

Edit: Man, I went from scrambling to find sources to a page of links full of FANTASTIC sources of information.  What a great community.  I'm glad I found you guys.  When i'm struggling with creating the projects that I expect my kids to do, I'll be back.

Second edit: Whoa that is my first reddit gold! I think you have to say thank you strangeer.
gold=true
if gold:
     print('Thank you Stranger!!!!"")
else 
     print('Sorry I'll do better')",1596560807.0
ELI5: How to structure a Python Project,266,azxgkn,learnpython,https://www.reddit.com/r/learnpython/comments/azxgkn/eli5_how_to_structure_a_python_project/,18,"What are\_\_main\_\_.py and \_\_init\_\_.py for?

&#x200B;

Where do I put really generic functions?

&#x200B;

Do I need to write the libraries I have used somewhere?

&#x200B;

What is the best way to split my code into files?

&#x200B;

Thanks",1552331863.0
Made a Linkedin Bot :),263,p08piy,learnpython,https://www.reddit.com/r/learnpython/comments/p08piy/made_a_linkedin_bot/,51,"So I am looking for a job and I thought what better way to do it than learning and using python to help me with it. 

I whipped up a simple python bot that uses selenium and beautifulsoup to get into Linkedin, search for people based on the keywords given as input and sends them a connection request along with a personalized note!

Please let me know what you think of it and any feedback would be appreciated.

You can find the code here: https://github.com/thebadcoder96/LinkedInConnectBot",1628399614.0
Can anyone please tell me what ' ~' does? I mean the logic behind that sign.,261,mulsg8,learnpython,https://www.reddit.com/r/learnpython/comments/mulsg8/can_anyone_please_tell_me_what_does_i_mean_the/,60,"What happens when anyone prints '\~' sign in python? I tried some example, like \~3.  After entering, it prints -4. I tried searching ""\~"" but the search engine completely ignores ""\~"". So, there is no possible way I can do it. I would be very thankful if anyone can tell me the logic behind ""\~"" in Python programming language in a simple way.

Note: I am afraid you can not see this sign in the post, so to tell you all, it is located on the left side of 1, you can enter shift and the key left side of 1.

And please don't be offended if you think that this post is not very mature. I am 13 and am a beginner in python. This has been a mystery to be since I started learning python. So I thought about making my first post about a question I feel very curious about.

Thank you so much",1618907089.0
"so I want to learn python, but no personal project interests me",262,m42l42,learnpython,https://www.reddit.com/r/learnpython/comments/m42l42/so_i_want_to_learn_python_but_no_personal_project/,93,"soft encourage overconfident chop worry bells insurance cooing crawl correct

 *This post was mass deleted and anonymized with [Redact](https://redact.dev)*",1615625634.0
"New to coding in general, apologies if this isn’t the appropriate place to ask this, just really want to get into learning Python and want a job that uses it.",267,j0swlh,learnpython,https://www.reddit.com/r/learnpython/comments/j0swlh/new_to_coding_in_general_apologies_if_this_isnt/,77,"Does anyone here work remotely? If so are you employed by a company and they give you tasks like creating interactive elements on websites (for example).

How long did it take you to learn enough to be employed and did you get a degree or a certificate of some sort? Is it even required?

What is your pay/salary? (Obviously don’t answer if you’re not comfortable with it)

If employed by a company what are your hours like? How often do you work?",1601220232.0
Thanks for guiding me when and why to use functions! (Appreciation post),265,fylukr,learnpython,https://www.reddit.com/r/learnpython/comments/fylukr/thanks_for_guiding_me_when_and_why_to_use/,36,"A couple of weeks ago I was asking when and why to use functions as my main work in python is in data analytics. You people gave me tons of insightful and practical advice.

So somewhere into the first quarter of my current project, I started looking where I'm repeating myself and where I would most likely benefit by using a function instead. The next thing I'm looking at is that I have to do the k-fold cross-validation for at least 10 different models.

Instead of just copying the piece of code and changing the dataset ten times I decided to write I function. It is a simple function that takes dataset and number of degrees for the polynomial model as an argument, splits data into the k-folds, transforms data and runs several polynomial models. Then prints the results(MSE and R-squared) of each model and plots the graph. The total for the function was just 20 lines, instead of what could have been over 200 lines instead.

After spending around 2-3 hours on it I'm super happy that it works the way I intended! thanks again for building my intuition and mindest!",1586544154.0
Webscraping - Playing with Beautifulsoup,265,a66wen,learnpython,https://www.reddit.com/r/learnpython/comments/a66wen/webscraping_playing_with_beautifulsoup/,45,"I've wrote another non-tutorial thing. Tell me how it reads.

https://recycledrobot.co.uk/words/?web-scraping",1544808705.0
What else can I do to not get caught web scraping?,259,119f43u,learnpython,https://www.reddit.com/r/learnpython/comments/119f43u/what_else_can_i_do_to_not_get_caught_web_scraping/,103,"I have a program that uses Selenium for web scraping, and scrapes the same website for about 300+ product prices. Right now I have it set to wait random intervals between some actions, and so far that has worked to not get caught. But I feel like I need to do more just in case. What would you recommend? Can rotating user agents work? Or should I research how to use VPN's?

Edit: I don't mean caught, I mean detected. I don't want the website to detect that it is a bot and start giving me errors and not loading.",1677103108.0
how do you transition from beginner to intermediate level,262,p9hgue,learnpython,https://www.reddit.com/r/learnpython/comments/p9hgue/how_do_you_transition_from_beginner_to/,51,right now i'm about done with beginner level python. Now i would love to get into intermediate level and start taking remote work. i would love to get into neural networks and web applications. In short i wanna make myself marketable to employers. How do i proceed? any help is welcome.,1629655488.0
Where to practice python ?,262,m07o4i,learnpython,https://www.reddit.com/r/learnpython/comments/m07o4i/where_to_practice_python/,103,"Hi all

&#x200B;

I am learning python through Udemy and Mimo and I need a place to practice it. Are there any good websites, where I can practice there? 

&#x200B;

Thanks",1615177367.0
extracting data from 100+ pdf files,264,kbxpps,learnpython,https://www.reddit.com/r/learnpython/comments/kbxpps/extracting_data_from_100_pdf_files/,89,"I just spent 3 hours doing this task(summing ""amounts"" from each pdf file) manually. 
Having heard that this task can be easily automated using python, I want to learn 𝙝𝙤𝙬 𝙩𝙤 𝙙𝙤 𝙩𝙝𝙖𝙩?

I spend an hour surfing Google, I came across some modules like pyPDF2, pdftotext but they didn't give me the right text formatted output. So then I manually converted all pdf files to .txt because they are easier to parse.

So the right procedure imo (which I'm not able to accomplish) would be : loop through each pdf -> convert pdf to text/string -> parse text -> use regEx to grab the data from each file

I think I wasted a lot of time doing things that were almost useless, so I wanted to know from people who have done this stuff before, how do I go about this issue?

*Edit 1* : Since many of you wanted to see what my PDF looks like, here's a sample
https://imgur.com/a/Xk0ksJF 
The highlighted part is the data needed to be extracted!
(Some info has been scratched for confidential purposed)

*Edit 2* : Thanks for the overwhelming response, I'm trying to reply to everything but there's a LOT! However, I'm reading everything and I appreciate each and everyone that has tried to help.",1607809602.0
"Listing ""Beginner Python"" in skills section of non-programming resume",263,jv8duh,learnpython,https://www.reddit.com/r/learnpython/comments/jv8duh/listing_beginner_python_in_skills_section_of/,66,"BACKGROUND

I am unemployed and have been learning python through DataCamp's 'Python for Data Scientists' program in the hopes of developing some marketable skills that can help me out in my job hunt, and my career. I studied finance in college and worked for a consultancy doing a lot of compliance-related work before I became unemployed. I am hoping to break into something more technical/finance-related like asset management, banking or even consulting.


GOAL

My goal is to be able to develop some python skills that will help me collect, clean, analyze (statistically), and visualize data more effectively and efficiently. So far I am in the second (intermediate) phase of the track. I have now worked with NumPy, Pandas, Matplotlib, DataFrames and Dictionaries. While I have completed the presented exercises, I have not ventured out on my own and completed projects yet. I plan on doing a few projects (creating a metronome that clicks up after a set time, and scraping + graphing some baseball statistics) once I finish the intermediate stage. After completing some projects, I will create a GitHub page that I will include on my resume. 


QUESTION

I want to know at what stage it would be acceptable for me to list my elementary Python skills on my resume. I am not targeting a dev. job and I know many firms have in-house dev. teams that handle the major/complex technical issues. So how proficient should one be before listing explicitly ""Beginner"" level skills? Would my progress through DataCamp's curriculum + my anticipated projects suffice?

Thanks.",1605539603.0
Learning Python for someone that already codes regularly,263,j9sv46,learnpython,https://www.reddit.com/r/learnpython/comments/j9sv46/learning_python_for_someone_that_already_codes/,48,"I might be beating a dead horse with this question, and if I am I apologize...

I've been trying to find a good project based approach to learning Python for someone that already knows how to program, vs just reading documentation - everything I have found has been geared towards complete beginners, talking about what a variable is, why to use certain data structures, flow controls/conditionals, etc.

If anyone has any suggestions for books or online pages to follow, I'm all ears!",1602516214.0
What are you doing in Python today?,266,iskhni,learnpython,https://www.reddit.com/r/learnpython/comments/iskhni/what_are_you_doing_in_python_today/,269,"I always find it interesting to see what people are working on each week, thought I'd ask here.

I am currently decoupling a very large class that writes a proprietary file format. It's about 3000 lines long and I'm splitting it into 3 different classes: composition class and 2 functional classes. Its a beast of a project for a Monday, but shouldn't be too bad and will be much easier to debug and test afterwards.

WRYD?",1600088818.0
How do you work freelance as a python programmer,261,d7o8qr,learnpython,https://www.reddit.com/r/learnpython/comments/d7o8qr/how_do_you_work_freelance_as_a_python_programmer/,30,How do people who know Python work freelance? Could be in any area like web development or mobile engineering,1569144856.0
How does “self” in a class work?,261,rm3zy3,learnpython,https://www.reddit.com/r/learnpython/comments/rm3zy3/how_does_self_in_a_class_work/,70,"You have to add “self” as an argument to a class method. Why this specific syntax and how does it get interpreted?  Is this because it inherits from the Python object model?

Is there any language where public methods do not contain “self” as an argument?

Thank you",1640175161.0
"Has anyone here taken the Udacity course ""designing programs""? Its free and taught by a master programmer that walks you step by step through his problem solving process.",262,kjqcek,learnpython,https://www.reddit.com/r/learnpython/comments/kjqcek/has_anyone_here_taken_the_udacity_course/,13,"Here is the class: https://www.udacity.com/course/design-of-computer-programs--cs212
I've watched the first few videos looks fascinating, but not sure how valuable it still is as it's in python 2. Has anyone here taken this? What were your thoughts and would someone who hasn't taken an algorithms course benefit from it? Specifically would it help build problem solving skills?",1608858078.0
Helpful thoughts on staying motivated to keep writing Python (and eventually land a job too),259,jcbg4z,learnpython,https://www.reddit.com/r/learnpython/comments/jcbg4z/helpful_thoughts_on_staying_motivated_to_keep/,54," 

Hey guys, as I've considered my own journey with Python I've realized there are at least two keys to staying motivated to keep coding.

On one hand I think you have to learn the fundamentals. Whether its online courses, tutorials, in-person classroom sessions (eh, maybe not during covid tho), or virtual meetups, you have to learn the fundamental programming principles. However, past the fundamentals, you have to start learning stuff and getting familiar with the domain that interests you. This will keep you engaged and motivated, but will also help you land a job.

When I was learning how to write Python I was excited to pick up variables, functions, and for loops via codecademy and coursera. But eventually I learned what I needed to, but really had no idea where to go next. I wasn't nearly as intrigued by intermediate or expert level courses (maybe I should have been?). Rather, I wanted to immediately apply what I was learning on the online courses. However, I didn't really know what domain to apply the coding fundamentals to.

A few years ago I attended my first Python meetup. After the first fifteen minutes of introductions, the facilitator told everyone to break out in interest groups, as if everyone knew what they were interested in. Everyone, but me had a premeditated topic they wanted to work on. I sat by myself sulking and feeling bad for myself.

But then the instructor walked over to me and asked, ""what do you want to work on"". I honestly didn't know. The instructor took me through a few cool applications. One of the applications was web scraping with the Beautiful Soup library. I'll never forget that day. Something lit inside me that I couldn't explain and I felt a genuine sense of interest. I spent the next six months working on web scrapers, trying to apply every Python fundamental I knew to simple web scraper projects. I ended up making a simple nasdaq web scraper using the Beautiful Soup library and url parser. Four months later, I used that web scraper for an interview talking point and landed the job a month later.

I think if you want to discover the right resources to help you land a job, you should understand the type of role and domain you want to work in. The only way to understand the type of role and domain you want to work in is by, in short, exploring what's out there. Pay close attention to your gut and how you react to certain applications, projects, and tutorials.

Anyway, hopefully these are helpful thoughts. I know there are so many resources out there and, honestly, the sheer number of resources can get overwhelming. I've come to realized it's not so much ""which"" resource I'll use, but how I'll use that resource to get to where I want to be. Let me know if you guys have any questions about learning to program in Python and landing a job and would love to help out in any way I can!",1602860753.0
Last week a finished my first project that I can actually use at my job,261,c64hld,learnpython,https://www.reddit.com/r/learnpython/comments/c64hld/last_week_a_finished_my_first_project_that_i_can/,38,"Hello everyone,

So I work as a Jr Sysadmin and decided to dive into my first project. It's simply enough but took me about 4 days to complete. Considering I worked on it at my desk and not at home, getting interrupted with real work stuff, it's a nice time for me :)

Our office manager is responsible for new employees welcomes. You know, prepare their desk with a bag, candy, pens, a greeting, etc. For a long time now she relies on me to remind her a week before they start, because I always keep my new employees tracked with notifications in my calendar (she could do the same but oh well...)

I keep all records of new employees in an Excel file. I wrote a script that reads that Excel file and sends an email if an employee arrives in less than 7 days. Then, I created a cron job that runs this script once a week at the same hour.

I know it's not much, but this script automates a small task and is helpful overall.

    import pandas as pd
    import datetime as dt
    import smtplib, ssl
    from email.mime.multipart import MIMEMultipart
     
    def sendEmail():
        sender_email = """"
        receiver_email = """"
     
        message = MIMEMultipart(""alternative"")
        message[""Subject""] = ""New Employees Reminder""
        message[""From""] = sender_email
        message[""To""] = receiver_email
     
        # Create the plain-text and HTML version of your message
        text = """"""
        Test
        """"""
        #Open the HTML file we created because we don't want to output raw HTML code. This adds the new employees table to the email.
        with open('employees.html') as fp:
            html = fp.read()
     
        part1 = MIMEText(text, ""plain"")
        part2 = MIMEText(html, ""html"")
        message.attach(part1)
        message.attach(part2)
     
        try:
            smtpObj = smtplib.SMTP('server')
            smtpObj.sendmail(sender_email, receiver_email, message.as_string())         
            print (""Successfully sent email"")
        except SMTPException:
            print (""Error: unable to send email"")
     
    #Read the Excel file, read the specific sheet we need and take just the column we're interested in: Start Date
    xls = pd.ExcelFile(r'testfile.xlsx')
    df = pd.read_excel(xls, 'New Employment')
    df['Start Date'] = pd.to_datetime(df['Start Date'])
    today = pd.Timestamp.today()
     
    #Calculate how many days are left til the employee starts working using Pandas. It's a delta from today's date and the date in the Excel file.
    df['Days Until Start'] = ((df['Start Date'] - today).dt.days)
    df['Days Until Start'] = df['Days Until Start'].astype(int)
    delta_df = df[['Name', 'Days Until Start']]
    close_delta = delta_df[delta_df['Days Until Start'].between(0,10)] #Make sure the employees delta is no bigger than 0 because that means he already started working and smaller than 10 (reasonable time to prepare for a new employee)
    close_delta.to_html('employees.html') #Output the data into a table inside the HTML file which we will use for the ""Send Email"" function.
     
    if len(close_delta) > 0: #Check if there are any employees queued up, so it won't send an email with an empty list in case there are no new employees soon.
        sendEmail()

Any feedback is welcome.

This sub is truly awesome!",1561635670.0
Python 101 on the web,261,6rcc6r,learnpython,https://www.reddit.com/r/learnpython/comments/6rcc6r/python_101_on_the_web/,21,"Last year I gave my book, **Python 101**, away for free on Reddit and then made it free on [Leanpub](https://leanpub.com/python_101/) permanently. I've been meaning to make Python 101 available as a website too but only recently have I gotten that accomplished. You can check it out here: http://python101.pythonlibrary.org/

For those of you who like the nitty gritty details, I ended up using Sphinx because I write all my books in ReStructuredText. Sphinx uses the Alabaster theme by default, which I didn't care for. I wanted a theme that has previous/next buttons on by default and that was mobile friendly. The only theme I found for that was the [Read the Docs](http://docs.readthedocs.io/en/latest/theme.html) theme. I will probably end up tweaking it a bit to make it look a little more unique. If you have any tips for that, feel free to let me know.

Cross-posted from r/Python",1501767578.0
"I was a beginner 6 months ago, this is how I levelled up.",263,65r29q,learnpython,https://www.reddit.com/r/learnpython/comments/65r29q/i_was_a_beginner_6_months_ago_this_is_how_i/,18,I'd like to firstly thank this subreddit for helping me out countless times. About 6 months ago I learnt python and was trying my way into open source. Today I published a [blog post](https://medium.com/stuffbylakshay/how-i-got-started-with-open-source-and-you-can-do-too-ea1b33c5fbd9) on how my journey was. ,1492372712.0
Who knew coding could bring such joy,265,uam0nq,learnpython,https://www.reddit.com/r/learnpython/comments/uam0nq/who_knew_coding_could_bring_such_joy/,38," 

So, I recently started coding in Python this February (I took a lot of breaks so I'm not that far in as yet) and I made a little project for myself and it made me so happy that I thought I would share. It's an album generator. My friends and I have this album review club and whenever it's my turn to choose an album I'm always so indecisive. Before I just used one of those online wheels but I decided to put the little coding skills that I learned to good use instead and just made my own generator. It's a simple program in which I made a list containing my favourite albums at the moment and used the random choice function so one can be picked. I hope to improve on this when I learn a lot more in Python. I want the program to read through my Spotify album library and choose from there instead, and maybe even display the album cover art along with the name. All that can be done with just Python and Pycharm right?

Anyways I'm really enjoying my lil coding journey so far. I can't believe how happy this one simple program made me. It's not even complex but it gave me this thrill. Ever since doing that mini project, I've had so many other ideas. I'm even thinking of trying out web development when I'm a lot more comfortable with python. This is so exciting omg",1650771840.0
where to start learning python?,260,iiadad,learnpython,https://www.reddit.com/r/learnpython/comments/iiadad/where_to_start_learning_python/,91,"Hi im a 16 years old boy from italy and i wanted to learn python , can you share me some websites that i can learn for free or share me some pdf books ?? Thanks",1598632407.0
Basic Python / Sql projects,262,fuz2fi,learnpython,https://www.reddit.com/r/learnpython/comments/fuz2fi/basic_python_sql_projects/,39,"Hey everyone!

I relatively new to Python, I can do alot with OOP, subroutines and things down that route. I am also extremely good at copy and pasting ;)

Had anyone got any basic project ideas that will build me into being able to grow and expand both my python and basic MySQL knowledge?

Something that I could actually have a use with aswell would be fun!

Thank you.",1586026295.0
A comprehensive book of Python for someone who wants to strengthen their foundational understanding,260,ek3h8y,learnpython,https://www.reddit.com/r/learnpython/comments/ek3h8y/a_comprehensive_book_of_python_for_someone_who/,42,"I’ve been using Python for a few years in my job in biotechnology so I have experience in writing different programs of various complexity. However since I’m self taught, and I’ve learned by basically trial and error, I’m looking for a book that can go through all of the aspects of the language so I can better understand how and why things behave the way they do along with example code for best practices and such things. I could just go through the Python docs, but I like to see the code along with real world examples and discussions on each topic. Like, why one way is better than another to obtain a certain outcome. 

I’m thinking that Learning Python by Mark Lutz is exactly what I’m looking for. Just wanted to get some thoughts on that book or any others that may fit what I’m looking for.",1578176316.0
I'm never going to stop learning am I?,260,c4ewuy,learnpython,https://www.reddit.com/r/learnpython/comments/c4ewuy/im_never_going_to_stop_learning_am_i/,64,"It feels like the more I learn about python and programming in general the more I realize how little I actually know and will *ever* be likely to fully understand. And this is just python. How many other hundreds of programming languages are out there that I can possibly learn, each with their own conventions and syntax? It's really hard not to feel hopelessly intimidated by everything, like I'll never be able to get past this feeling that I'll only ever be intermediate at best. 

And yet part of me relishes the idea of learning all of this, of puzzling everything out and understanding exactly what the code I'm copying from stackoverflow actually does. It's exciting to me in a way that few things in my life so far have been. As much I consider myself old compared to when others started, I'm only 24 and barely started learning any programming at all not even a few months ago. How much more will I know on my 25th birthday? My 30th? The best part about this is that there's always more to learn and understand and do, and to me that's the most wonderful thing imaginable. 

Maybe I'll never be a master, but that's okay. There's always something more. Something different. Something new to do. There's probably a word for what I'm feeling right now (most likely one of those awesome compound german ones) but I'm crashing from too much caffeine after working on a homework assignment and I'm gonna go watch today's episode of Attack on Titan.

Did any of you ever have or still have this feeling of hopeless wonder? Does it ever fade? I hope it doesn't.

Edit: Wow did this blow up. Thank you all for your reassuring comments, especially the guy that wanted to give me gold but was too poor to do so. I feel you man, I'm unemployed and doing a data analytics boot camp with the hope of turning it into a career. 

I honestly thought this post would get downvoted to hell because it's not a question, but the kindness and acceptance of this community very nearly brought me to tears. I've got some personal trust issues and the openness of people in this community and their willingness to help out shows me that we're all in this together. Again, thank you. It really means a lot.

It boggles my mind that I posted this after a stupid mistake while munging with pandas and finding that I wasn't so much frustrated as excited that I figured out the problem. And it really was a stupid syntax mistake too.",1561334477.0
i should have learned to code earlier in my life! coding with python feels so powerful!,261,xxrq9p,learnpython,https://www.reddit.com/r/learnpython/comments/xxrq9p/i_should_have_learned_to_code_earlier_in_my_life/,44,"i am early in following a python tutorial and i thought that i would try playing with some of the concepts i learned. python feels like a powerful calculator that can do anything. i created my first program without following a tutorial and it feels just so rewarding.

&#x200B;

    my_age = 25
    my_height = 54
    my_bank = 144849
    
    # find years that i grew
    growing_years = my_height / my_age
    
    # find money i have per inch
    money_per_inch = my_bank / my_height
    
    # find money i have per years
    money_per_year = my_bank / my_age
    
    print(growing_years)
    print(money_per_inch)
    print(money_per_year)

i can use a program like this to find out things about myself i never really thought about. solving actual problems can be pretty difficult tho. so i need to practice more.",1665124136.0
"[Meta] Should we enforce the ""Try to guide OP to a solution instead of providing one directly"" guideline?",260,w240v7,learnpython,https://www.reddit.com/r/learnpython/comments/w240v7/meta_should_we_enforce_the_try_to_guide_op_to_a/,103,"As a professional tutor, one of the things that was hammered home in my training was that simply giving out answers ineffective at aiding a student's understanding. And yet all too often I see comments on questions on this sub that are essentially just blocks of code, with no explanation of why that code is better than the original or what the original's problem was. So I just want to discuss whether we should allow such low-effort answers. 

IMO, comments like that are worse than useless: they encourage learned helplessness. If a student learns that whenever they get stuck, they can just come here and get an easy answer, what incentive do they have to actually learn? And because those comments provide no value to the learner, I don't think they have any place in a learning sub like this one. We're not here to help students cheat at homework, we're here to help them learn.

I propose a simple rule of ""No top level comments with only code/no explanation"" would be sufficient. I specify top level comments because deeper comments likely have at least some discussion leading up to them, so even if a comment 4 layers down contains only code, it's likely the student already learned from that exchange.",1658162731.0
I just passed the Python Associate (PCAP) exam. It was actually quite difficult.,261,uu1heh,learnpython,https://www.reddit.com/r/learnpython/comments/uu1heh/i_just_passed_the_python_associate_pcap_exam_it/,92,"I know that many developers eschew certifications, but the tech industry seems to think they’re great and there is a lot of gatekeeping regarding them.  And my employer actually reimburses all training and exam fees that we undertake.

I would say the PCAP exam is actually harder than some AWS exams that I had taken previously.

I do intend to make use of this knowledge, perhaps I can make a game (using pygame) that I will deploy in AWS.",1653064634.0
"What is -m? Specifically in ""python -m pip install....""",264,ip4uz2,learnpython,https://www.reddit.com/r/learnpython/comments/ip4uz2/what_is_m_specifically_in_python_m_pip_install/,65,I've only used -m when instructed to do so and Googling this didn't bring up anything. What is -m?,1599608354.0
The Python Scrapy Playbook,259,v6uy4j,learnpython,https://www.reddit.com/r/learnpython/comments/v6uy4j/the_python_scrapy_playbook/,34,"Hey Everyone!

Just letting you know we've launched [**The Python Scrapy Playbook**](https://thepythonscrapyplaybook.com/), a collection of guides and resources for Python developers building web scrapers with [Python Scrapy](https://scrapy.org/).

There is a lot of beginner-focused Scrapy content available, but guides covering more advanced best practices and topics are harder to come by.

It's still a work in progress, but the goal for **The Scrapy Playbook** is to fill this gap by not only creating beginner guides, but guides covering advanced topics that will help developers scrape in production at scale. Including:  


* How to scrape specific websites.
* How to architect more robust and scalable web scraping stacks.
* How to bypass anti-bots.

And also include a database of the best **Scrapy extensions** and **pre-built spiders**.

If you would like to contribute or have any suggestions for articles we can write next then just let us know.",1654606965.0
Bingo!,262,fk08pk,learnpython,https://www.reddit.com/r/learnpython/comments/fk08pk/bingo/,47,"After slacking, buying 10000 courses and finding excuses, finally mustered enough motivation to learn basics of python. Enough to write a guessing game which gives out the total guesses too! (I am sorry, I know it ain’t nothing but a baby step but I am on cloud nine right now).

Thanks to everyone who post motivational messages and encourage everyone for the smallest steps made. Real MVP’s",1584425272.0
Best place to learn Python for free?,256,dqak5w,learnpython,https://www.reddit.com/r/learnpython/comments/dqak5w/best_place_to_learn_python_for_free/,80,"I'm a high school student with no prior coding experience but I'm also really into stats, maths, science, etc. I had an idea for a data science project, and I want to teach myself to code in the process. My budget is zilch, so I need materials that are free (but also legal).",1572643045.0
Awesome Cheat Sheet for Python - Helped me alot,255,4pj6ef,learnpython,https://www.reddit.com/r/learnpython/comments/4pj6ef/awesome_cheat_sheet_for_python_helped_me_alot/,59,"When I started learning python, this cheat sheet helped me through the part where you feel like you dont have a single clue how it all works, or to need small reminders to know how to do something.

http://www.newthinktank.com/2014/11/python-programming/",1466717438.0
Best online course to actually learn to use Python,254,112hyvj,learnpython,https://www.reddit.com/r/learnpython/comments/112hyvj/best_online_course_to_actually_learn_to_use_python/,146,"I see a lot of different courses like
• Angela yu,
• Automate the boring stuff
• The Helsinki class
• Harvard cs50p. 

And 100’s of other courses. 

I have read that the course by angela and automating the boring stuff is god in the beginning but is heavily outdated later on. 

I am trapped and can’t seam to find out where to begin. I have read true a lot of post and know this question gets repeated like every other day. But what are your recommendations and thoughts. 

And I am a beginner but I had a course last semester at my university called programming whit mathematics, it was basically a python introduction class whit a lot of math. So I know a little but don’t know where to begin now.


Edit: I am now in may finished with my bachelor I economy and administration but I have for a while been contemplating trying to become a software developer and I really enjoyed the programming whit mathematics application. But I don’t think I will start a new bachelor at first to learn to program.",1676413441.0
Is it normal to feel like you're ducttaping programs when you're learning? I can't tell if I'm learning or just trying to hack together a solution.,258,ustxjc,learnpython,https://www.reddit.com/r/learnpython/comments/ustxjc/is_it_normal_to_feel_like_youre_ducttaping/,36,"So I'm doing the super popular program a lot of people do (100 Days of Code on Udemy), and it's going well...however whenever I get a project I make it a habit to not look at the solution, even a little, until I get mine working.  

 Now sometimes my program looks fine, I'm doing what she does....although she's able to do it in fewer lines of code, the basic logic works the same. 
  
 
Other times, I begin to struggle with the programs....and I can feel myself 'overwriting', and I even sometimes have to resort to using global variables (inside functions) which I know is not a habit I should be developing.  
    
Is this normal to happen in the beginning? If I feel I'm going on the wrong track (by sort of hacking together a working solution) is that something I will benefit from and learn? Or should I do whatever I can to finish the program, and then look at the solution?  
  
And one additional question, if I do finish my version and look at the final, should I recreate the final even though I've seen the author's solution or is it better to just move on to the next day and try to do better?",1652929830.0
"Understanding ""self"" in python.",261,q6pc3j,learnpython,https://www.reddit.com/r/learnpython/comments/q6pc3j/understanding_self_in_python/,59,I've read books on this and have browsed the internet but I can't seem to fully understand the idea behind what self actually does. For an example what does def __init__(self) actually do for your code? I understand that __init__ is a constructor that helps create. But why exactly is it creating self?,1634054281.0
my first legit python scripts: find emails without '@' and find duplicates,260,g5o4b5,learnpython,https://www.reddit.com/r/learnpython/comments/g5o4b5/my_first_legit_python_scripts_find_emails_without/,77,"It's always exciting to use a new coding (or any other) skill to solve a real-world problem.

I had a client provide me a list of 421 emails to use for email campaigns. I needed to find emails that didn't include '@' signs and also find duplicates.

    # find emails without @
    
    path = '/path/to/file'
    
    with open(path, 'r') as emails:
        emails = emails.readlines()
    
    for line in emails:
        if '@' not in line:
            print(line)
    
    # Find duplicates
    
    with open(path, 'r') as emails:
        emails = emails.readlines()
    
    duplicates = []
    
    for line in emails:
        strip = line.strip()
        if strip in duplicates:
            print(strip)
        else:
            duplicates.append(strip)",1587504503.0
What are some really cool PyCharm plugins?,259,9t517l,learnpython,https://www.reddit.com/r/learnpython/comments/9t517l/what_are_some_really_cool_pycharm_plugins/,41,"I've recently discovered the power of PyCharm plugins (I underestimated them for quite a while) and I've already installed a couple. For example:

SonarLint - a plugin that detects various small improvements that you can make to your code, such as redundancies, unlogged exceptions, unreachable code etc. It'll (apparently) help keep your code clean, especially if you're a beginner or an intermediate programmer.

Key Promoter X - detects various actions you make that can be done with less time and effort using keyboard shortcuts. Through repetition, apparently you will eventually learn those shortcuts and become more efficient.

Rich Presence Integration (Discord, Slack) - self-explanatory; lets people know what project and file you're currently working on.

What are some other cool plugins that you would recommend to others? Can be anything from VCS to auto-completion to anime catgirls happily dancing whenever your code runs without exceptions.",1541035050.0
Are there any free websites that let you run Python without installing actual Python?,257,ud481x,learnpython,https://www.reddit.com/r/learnpython/comments/ud481x/are_there_any_free_websites_that_let_you_run/,90,"The computer I have access to is one of my moms work computers and I can’t download anything. I want to try some basic coding, are there websites that imitate python out there?",1651067921.0
Can not understand for loops,259,p47d1n,learnpython,https://www.reddit.com/r/learnpython/comments/p47d1n/can_not_understand_for_loops/,90,"So I started learning python about a week ago and everything was going well and I understood everything except for for loops  


Can someone explain them to me like I'm 5",1628945109.0
Why all those people organize their code the same way?,260,nyuqvy,learnpython,https://www.reddit.com/r/learnpython/comments/nyuqvy/why_all_those_people_organize_their_code_the_same/,49,"lately, I started to think that I am ready for my next step in programming, and instead of writing working programs I need to learn how to write professional-looking programs, My idea about professional programs comes from observing other people code on GitHub, and it looks like they all follow the same organizing rules starting from the code styling to the extra needed files (licensing, commenting and stuff), and the way they organize their files, So my question is what are those global rules? and how one can learn them?",1623585443.0
"Taking an Intro to Programming course at my university and, because of COVID, have no one to talk to about how stupidly hard I find it.",261,jgvdo3,learnpython,https://www.reddit.com/r/learnpython/comments/jgvdo3/taking_an_intro_to_programming_course_at_my/,76,"I don't even know if this is the right place but I feel so isolated. I did my undergrad in a social science and now I'm doing a master's -- I figured Python would be a good thing to learn for the data side of things, and also because I just wanted to learn something new. Go figure.

I'm not a stupid person, but programming makes me feel stupid. I feel like a kid in math class who just can't understand what the teacher is saying. I need to create a function from scratch that implements a k-means algorithm -- I don't even know what that means. I've googled, and watched videos, and I understand the *logic* behind what I'm doing, but the actual, physical code is a mystery to me. I just don't get it. I don't get what brackets go where and why, and why sometimes things are separated by commas and other times not, or why sometimes I can change a list of strings into a list of integers and other times it doesn't work. I feel so fucking stupid. I thought programming would be logical, but the rules feel like learning English -- it only makes sense once you know it, and I don't know it.

I know this probably means I'm stupid, or just not for programming, but there's not a single person I know that I can talk this through with. 

What I have so far:

def kmeans(points, k):

init = random.sample(points, k)

clusters = \[\[\] for i in init\]

centroids = \[i for i in init\]

I also already have a function for finding the Euclidean distance(??) between two points, if that means anything. I don't know if it means anything. I supposed to repeat the process for 100 iterations. Sorry if I sound like an idiot.",1603485823.0
[perhaps common knowledge?] date format YYYYMMDD is naturally sortable because you get more granular the further left you go.,258,xgs79k,learnpython,https://www.reddit.com/r/learnpython/comments/xgs79k/perhaps_common_knowledge_date_format_yyyymmdd_is/,107,"I recently saw dates implemented like this and it hit me. This format is great because you can easily filter through it. For example, I was using a platform that didn’t support >, < filter operations with dates because they are (without option) stored as a string. However, I could get August data by filtering string `begins with ‘202208’`

Maybe this is common knowledge, but I’ve been working in Python for two years and never realized this. So, I want to share with the community.",1663435075.0
"I completed the MIT Edx course titled ""Introduction to Computer Science using Python"". I want to apply my knowledge into real life small projects. Are there books which are project based. I mean books which contain lot of interactive and interesting problems which I can practice and solve on my own.",255,aalmxf,learnpython,https://www.reddit.com/r/learnpython/comments/aalmxf/i_completed_the_mit_edx_course_titled/,57,Thanks in advance.,1546094003.0
Is there a website that gives you practice Python problems for beginners to figure out?,253,7330vy,learnpython,https://www.reddit.com/r/learnpython/comments/7330vy/is_there_a_website_that_gives_you_practice_python/,56,"So I'm learning Python via Automate the Boring Stuff. I was wondering if there was a website that gives beginner 'challenges' of code to write. 

For example, it tells you to write a program that does ___(insert basic task here) and if you're stuck, it'll give you the correct code.

Is there any such thing available?",1506632047.0
Deployed my first site!,252,11tpt68,learnpython,https://www.reddit.com/r/learnpython/comments/11tpt68/deployed_my_first_site/,51,"Super excited about this as it's my first go at a full-stack app, thought I would share with you guys. The site allows users to sign up to get email alerts when competitive running shoes from the site RunRepeat go on sale. If you are a keen runner then visit the link: [www.adriansrunclub.co.uk](https://www.adriansrunclub.co.uk/)

Check it out and let me know what you think!

Source code: [https://github.com/Montags24/adrians-run-club](https://github.com/Montags24/adrians-run-club)

Tech used: Python + Flask + PythonAnywhere",1679056443.0
"I have completed the book Python Crash Course (without the projects) and covered all the exercises. Yet I cannot solve Python problems at HackerRank, Leet Code, Code Chef etc. What do I do to be able to do these? What did I do wrong?",256,dsm7og,learnpython,https://www.reddit.com/r/learnpython/comments/dsm7og/i_have_completed_the_book_python_crash_course/,128,,1573072916.0
Keep at it python learners!,255,a5cx3p,learnpython,https://www.reddit.com/r/learnpython/comments/a5cx3p/keep_at_it_python_learners/,33,"I often see posts about people feeling bad because they just ""don't get it.""  Maybe it's recursion, list comprehensions, passing variables by reference, etc... 

I work as an elementary school teacher, and one of the concepts I have to constantly reinforce with students is the idea of a 'growth mindset'. It sounds cheesy, but the idea is that you should never think ""I don't get it"", instead you should think ""I don't get it yet.""

Many if the things we take for granted as adults (like the place value system in numbers) are just these mind blowing concepts for children. It's not that kids are dumb, it's just that these concepts fall so far outside of natural experience and biology that it takes a long long time to absorb and understand. Try teaching an average adult base 7 math and you'll quickly learn how many complicated underpinnings support everyday knowledge.

The same is true for programming.  When I first started trying to study recursion, I watched videos, lectures, read articles, and felt like I understood the general idea. However, as soon as I tried to solve sample problems, my brain basically melted. But by sticking with it, and even solving the same problems over and over again, I gradually got a 'sense' of what was happening.

These ah-ha moments take time to get to.  It's easy to want to jump into programming wanting to just get everything right away.

Focus on the basics. As your confidence in your skill set increases, you will naturally come across situations that will extend your programming ""reach"".

I've been dabbling in python for years now, and this year have been going through the advent of code challenges. It's fun because all the little bits of learning I've been slowly accumulating come together in the various challenges and make me realize just how far I've come. That last challenge I completed involved implementing a tree data structure, something I had studied on the theoretical level but had never implemented. It was very rewarding to see it come together!

Compare your programming skills to the programming skills you had yesterday. Practice and improve in tiny amounts and eventually you will ""get it"", whatever that ""it"" you're struggling with is.",1544575071.0
"2 years later, my first public Python project is live, thanks /r/learnpython!",253,9ebpt7,learnpython,https://www.reddit.com/r/learnpython/comments/9ebpt7/2_years_later_my_first_public_python_project_is/,56,"So I just checked and my first post on /r/learnpython was over two years ago[^1]. 

Well, I just shipped my first ever public project written in Python last month.

My new year's resolution for 2018 was to build a public-facing project. Up until then I've written many small-to-big scripts, but all were used by me exclusively. These included:

- YouTube to MP3: utilizes the excellent [youtube-dl](https://github.com/rg3/youtube-dl) and works directly from my iPhone via a [Workflow](https://workflow.is/) workflow. Minutes after invoking the share-sheet on iOS, I get the video as an MP3 in my iCloud Music Library with cover-art. I use this mainly for piano works/covers and live music that isn't available on Apple Music.

- A machine learning prediction model for soccer games. (Didn't do too well but learned a ton).

- Expenses tracker: uses regex to parse context and allows me to enter expenses in a ""freestyle-like"" form.

- A movie rating aggregator: Aggregates ratings from sites like Rotten Tomatoes and IMDb, gives you the average score across these sites.


These were all fun (and useful), but there was an itch to know what it's like to build a product that other people use. So around December 2017 I started building [MusicButler](https://www.musicbutler.io/) - a new music notifications service. Surprisingly, Apple Music & Spotify do a horrible job at that. MusicButler launched mid-August.

I thought I was going to finish the MVP in 3 months. It took around 10 (admittedly, I did take a long break during this period).

MusicButler's stack is:

- [Django](https://www.djangoproject.com/)
- [Django Channels](https://channels.readthedocs.io/en/latest/) (a relatively new package for websockets and displaying real-time messages)
- [Celery](http://www.celeryproject.org/) (for asynchronous, background tasks)
- Javascript/jQuery

Lessons learned so far:

**1. Break big problems into smaller ones:** If I knew how much effort it would take to build MusicButler, I probably wouldn't have started. At times it felt like building a certain feature entailed so many different steps that it would take forever. The key was to go step-by-step. This has two advantages:

- It's easier to write a function that does one thing well than writing one that needs to do five things well
- It helps keep you motivated as you make progress with each step

**2. Ignore DRY principles at your own peril:** This is the most important thing I learned. Speaking of new features, sometimes you just want to get those done. So you start making compromises and use duplicated or convoluted code. That’s OK as long as you refactor afterwards, something I didn’t do in too many instances. It came back to bite me, big time. If you see yourself writing the same bit of code twice, there must be a better way. If you see yourself writing the same bit of code with a small variable change between them, there must be a better way.

**3. Everything is possible:** It’s just a matter of whether you’re willing/can invest the time and effort to learn. This project was the first time I: 

- deployed Python code on an external server (Heroku)
- Used JavaScript for anything more than simple, copy-paste-able code.
- Wrote code that executes asynchronously
- Managed code on two different environments
- worked with git beyond simple `git commit` and `git push/pull`
- The list goes on..


**4. Don't ignore possible exceptions:** As a beginner, you’re happy just to get that remote API call to work, so you write code to handle what happens afterwards - creating an object in the database, showing a message to the user, updating some counter. But you should pay equal attention to the cases when that remote API call doesn't return what you expect it to - whether because that service is unavailable, or because it got some unexpected input. If you build a flow which assumes a 100% success rate, you _will_ have to re-write a lot of code later when you discover such rate doesn't exist in the real world. There are many tutorials on how to work with a certain Python package, how to write a view in Django, or how to do X with Y. Unfortunately not many  cover exception-handling best-practices in-depth. 

**5. Log early and often:** If there’s even a remote chance what you’re working on is ever going public (and even if not), replace those `print`s with logging statements. Your users are going to utilize your product in ways you could never practically anticipate - it’s good to know what went wrong and where. ([here's a good tutorial for logging in Django](https://lincolnloop.com/blog/django-logging-right-way/))

**6. Read. The. Docs**

**7. Test:** Another subject which lacks documentation/comprehensive tutorials. I see a lot of basic `UnitTest` and `pytest` tutorials, but nothing that covers something even remotely more complex than that. 

MusicButler is doing great and experiencing nice user-growth. This all wouldn't be possible without the community here - both in the instances I came here for help, and the times I learned a lot myself while trying to help others.

**Happy for any feedback or questions you may have.**

[^1]:	It was from my other (""anonymous"") account which I also use for HTPC-related stuff, hence why I'm not posting from that one. ",1536484163.0
Just bought Angela Yu’s 100 day Python course!,254,svk1ys,learnpython,https://www.reddit.com/r/learnpython/comments/svk1ys/just_bought_angela_yus_100_day_python_course/,127,"Excited and just wanted to share. Looking to get into programming and change careers. 

Any advice or personal experience with the course would be appreciated",1645196594.0
/u/jewish-grandma is now spamming posts linking a udemy course. Do not click the link if you receive a DM.,254,paujkn,learnpython,https://www.reddit.com/r/learnpython/comments/paujkn/ujewishgrandma_is_now_spamming_posts_linking_a/,31,"It's in the title really. If you recieve a DM from /u/jewish_grandma offering a python course do not click the link. It's very likely an affiliate link scam and clicking the link is the goal (i.e. they are not actually the providers of the course)

It's such a similar pattern to the previous spam that I would guess it's an affiliate linking thing. Anyone who clicks that link and eventually ends up buying a udemy course could make them profit. It's either account hijacking or opportunist.",1629833792.0
"I improved my Rock Paper and Scissor program,Take a look.",258,irhhn5,learnpython,https://www.reddit.com/r/learnpython/comments/irhhn5/i_improved_my_rock_paper_and_scissor_programtake/,50,"Old Program: [Here](https://www.reddit.com/r/learnpython/comments/io8dwf/i_created_rockpaper_and_scissortake_a_look/?utm_source=share&utm_medium=web2x&context=3)

New:

    import random
    import os
    import time
    
    
    def converted(number):
        if number == 1:
            return 'rock'
        elif number == 2:
            return 'paper'
        elif number == 3:
            return 'scissor'
    
    
    Outcomes = {
        'rock': {'rock': 'draw', 'paper': 'lost', 'scissor': 'won'},
        'paper': {'rock': 'won', 'paper': 'draw', 'scissor': 'lost'},
        'scissor': {'rock': 'lost', 'paper': 'won', 'scissor': 'draw'}
    }
    
    Mylist = ['rock', 'paper', 'scissor']
    while True:
        os.system('cls||clear')
        Bot_choice = random.choice(Mylist)
        print(""Let's play ROCK PAPER SCISSOR\n\nChoose your option\n1)ROCK\n2)PAPER\n3)SCISSOR\n"")
    
        try:
            user_choice = int(input(""Enter your choice {1,2,3}=>""))
            Converted_userchoice = converted(user_choice)
            print('\n======Result======\n')
            print('==>', Outcomes[Converted_userchoice][Bot_choice], '<==')
            print('\nYour Choice:', Converted_userchoice)
            print('\nComputer Choice:', Bot_choice)
            print(""========================================"")
            print('plz wait for 5 sec after it will automatically restart')
            time.sleep(5)
        except:
            print('Invalid arguments')
            print(""please use Numeric values between 1 to 3"")
            print('\nplz wait for 3 sec after it will automatically restart')
            time.sleep(3)",1599934011.0
Good Python Exercises?,254,zb92nc,learnpython,https://www.reddit.com/r/learnpython/comments/zb92nc/good_python_exercises/,43,What's a good exercise for me to try? I've been learning Python for a bit over a month now and I wanna test what I've learned.,1670046775.0
3+1 (free) tips how to get a better answers here:,255,tq9uv0,learnpython,https://www.reddit.com/r/learnpython/comments/tq9uv0/31_free_tips_how_to_get_a_better_answers_here/,36,"1) If you got an error, describe it in detail. Do not just say “hey my pip doesn’t work, plz help”.
2) The story how your mom always wanted you to learn Python on high school is touching, however unnecessary. Be concise. 
3) Do not just throw off 986 lines of your source code with generic “Please find the error for me”. Try to isolate the problem first. Don’t be lazy. By the way, debugging is the fastest way to learn something.

And the mother of all IT science is: Read the docs.",1648475755.0
"I made a password generator, would love some input",254,ht49jv,learnpython,https://www.reddit.com/r/learnpython/comments/ht49jv/i_made_a_password_generator_would_love_some_input/,91,"Hello!
I'm fairly new to programming, especially python. As a first step to learn python I made a password generator. I would love to get some comments on how to improve my code!
https://github.com/SJosefsson/passwordgenerator
Sorry if this is not the correct subreddit, and thank you in advance!",1595021134.0
I feel like I'm never going to get passed the basics as the difficulty and complexity starts spiralling out of control.,253,c9yz68,learnpython,https://www.reddit.com/r/learnpython/comments/c9yz68/i_feel_like_im_never_going_to_get_passed_the/,78,"I've been programming on and off for a few years but I've never managed to make it past the basics, as soon as I start to try and code something even remotely decent the difficulty and complexity of it all just runs me into the ground and I have no idea what I'm doing. 


&nbsp;


Sometimes I go on github and look at python projects and see programs with 8 folders, each folder with 15 files in it, each file with hundreds of lines of code, dozens of functions, dozens of libraries imported and I just think to myself how the hell do people actually get to this level? To have a project idea and be able to break it down into hundreds of segments, and then even segments of segments is an amazing skill imo.


I've been told before that I should just keep on trying and eventually I will break out of the basics and start being able to put my own ideas into code without following a tutorial or having to Google ""how to do x in python"" every 2 minutes or making posts asking for help.


I've always struggled with not knowing what I actually have to type to get something to work, if that makes sense.",1562448810.0
Automate the Boring Stuff with Python - Yay or Nay?,249,bgzsed,learnpython,https://www.reddit.com/r/learnpython/comments/bgzsed/automate_the_boring_stuff_with_python_yay_or_nay/,76,"Long time lurker of this sub finally getting the ball rolling on learning python.  I was wondering if anyone has had experience with Al Sweigart's online course ""Automate the Boring Stuff with Python Programming"".  I am currently an amateur dev and dba that supports a larger, more specialized IT team but I'm looking to move into a more niche role, specifically oriented around data science.  My question is - is this course by Al Sweigart a decent way to get started with learning Python?  I am about 6 modules in and I like the style but I'm having some trouble retaining the information I'm learning.  Any advice or help would be appreciated, thanks.

Edit: really appreciate everyone’s responses. I have found a lot of additional resources from this thread.",1556138831.0
Comprehensive list of cheat sheets for Python for data science,256,5som5b,learnpython,https://www.reddit.com/r/learnpython/comments/5som5b/comprehensive_list_of_cheat_sheets_for_python_for/,8,"They're from the same author and are a great way to start with Python for data science. I've had all of these printed and on my desk at all times (except the beginners one) and they save me a lot of time and distraction. Here they are in no particular order:

- [Pandas](https://www.datacamp.com/community/blog/python-pandas-cheat-sheet)

- [SciPy](https://www.datacamp.com/community/blog/python-scipy-cheat-sheet)

- [NumPy](https://www.datacamp.com/community/blog/python-numpy-cheat-sheet)

- [Scikit-Learn \(Machine Learning\)](https://www.datacamp.com/community/blog/scikit-learn-cheat-sheet)

- [Bokeh \(visualization\)](https://www.datacamp.com/community/blog/bokeh-cheat-sheet-python)

- [Jupyter Notebooks Guide](https://www.datacamp.com/community/tutorials/tutorial-jupyter-notebook)

- [Beginners cheat sheet \(basics covered\)](https://www.datacamp.com/community/tutorials/python-data-science-cheat-sheet-basics)


Let me know if you have any other suggestions",1486506166.0
How does Python know what 'animal' is?,250,sisfk2,learnpython,https://www.reddit.com/r/learnpython/comments/sisfk2/how_does_python_know_what_animal_is/,65,"My text book gave me this example

    animals = ['cat', 'dog', 'monkey']
    for animal in animals:
      print(animal)

My question is: How does Python know what 'animal' is? We've only defined the list 'animals'.",1643818252.0
I want to write a program that sends push notifications to my phone every time a certain thing is posted on instagram. Help getting started?,254,mxk2tx,learnpython,https://www.reddit.com/r/learnpython/comments/mxk2tx/i_want_to_write_a_program_that_sends_push/,40,"There's a consignment clothing shop in my area that posts photos on instagram of certain products, along with item descriptions and sizes. If you comment on the post, they will hold the item for you to pick up. I'm on the lookout for a certain pair of shoes, and I know they sell quite a few of these shoes and they have showed up on the IG page before. I'm hoping to write a script that will, in real time, let me know if they post this specific item description and size by sending a push notification to my phone. It's a silly project, I know, but I want to do it anyway.

I would consider myself a beginner in python. My question is, where should I begin researching for this project? I know it will take time and it's currently out of my scope of knowledge, but I believe I can eventually do it if I know where to look for information. I'm hoping to create a list of topics I will need to learn before diving in, any suggestions? Thanks in advance!

Edit: Just wanted to say thank you for all of the suggestions, I wasn't expecting this much feedback. It will take a while to go through it all, but I really appreciate it!",1619271239.0
Should I learn HTML and CSS before going into Django?,254,j1k1q2,learnpython,https://www.reddit.com/r/learnpython/comments/j1k1q2/should_i_learn_html_and_css_before_going_into/,83,"So I’ve been interested in web dev for a while and I was wondering how I should go about approaching it. I know Python. I’d say that I got the basics covered. But will it be better to learn Html and Css before diving into Django. Also could you tell me what purposes django serves in web dev?
Thank you ❤️",1601324535.0
Why is Python so much liked?,253,fjsafs,learnpython,https://www.reddit.com/r/learnpython/comments/fjsafs/why_is_python_so_much_liked/,139,"Java developer/support here.

I've noticed in the web, podcasts, etc, that it's said Python is so much liked and enjoyable by developers, compared to other languages. Could you please elaborate on this? Why? Does some one switched from Java or other to Python?

Thanks!",1584392349.0
My new python wut?,251,dptsly,learnpython,https://www.reddit.com/r/learnpython/comments/dptsly/my_new_python_wut/,77,"I've been coding Python for 13 years now and I figured at least I knew all the basic functions...nope.

    >>> 'Check this out!'.replace('', ' ')
    ' C h e c k   t h i s   o u t ! '

It's not totally useless, but I wonder what other oddities there are.",1572555309.0
Imposter syndrome,250,szeekg,learnpython,https://www.reddit.com/r/learnpython/comments/szeekg/imposter_syndrome/,150,"Hi! I've been learning Python ever since last week of October 2021 but I've been busy with work and can only practice every other day. When I got confused and unsatisfied with how lacking the explanation from the courses I purchased, I stop and try to research about it but most of all got stuck into the dark hole of anxiety that I'll never going to understand it.
This year, I purchased Python Crash Course 2nd edition by Eric Matthes and he really explained it well. My only problem is, whenever I try to read all the codes here in, I get anxious because I can't understand it. Is there any resources that I can read that can make me understand the more complex codes? I did practices but not to the point where it get complex. Sorry for the long post",1645612583.0
Am I the only one who feels this way?,252,ide27u,learnpython,https://www.reddit.com/r/learnpython/comments/ide27u/am_i_the_only_one_who_feels_this_way/,49,"I've been meaning to write this a long time, but each time I feel guilty about it. I don't know why. 

I've been self-teaching for a while now, learning the concepts of data science and Python and R. For some reason I can't explain, I actually enjoy it better when I know I'm going to read something, than the actual reading itself. I do always get to the actual reading, and then the excitement wears off. Let's just say, I get the greatest, euphoric feelings from wanting to read or study a topic. Looking forward to each topic is super exciting. After reading, I get to understand a large part of the subject, but the excitement disappears and I no longer feel as happy as I once was. This makes me want to put off the actual reading a few days just so I can stay excited. 
Is this unusual? Does anyone else feel like this?",1597942535.0
Help make Python better: talk to the Python pip UX Team and help us improve pip,255,i5dq8z,learnpython,https://www.reddit.com/r/learnpython/comments/i5dq8z/help_make_python_better_talk_to_the_python_pip_ux/,110,"I’m a UX researcher and designer working on pip - the Python package manager, used to install Python code.

You might (or might not!) be aware that you are using a program called pip when using Python and Blender.

My work at the moment is improving the usability of pip, for ***all*** users. Right now, a lot of what pip does can be confusing and complicated for people who are not Python experts. Our objective is to understand how to improve that.

Between now and early-mid September we want to hear from users so we can learn about:

* Who uses pip and how that affects their understanding of what pip does?
* How do users’ disabilities affect their usage of pip?
* How does pip documentation help users?
* What pip functionality is important to users?

We’re looking to speak with people of all background - of all levels of experience.

(I use Python for my UX work but I wouldn’t consider myself a programmer!)

If you want to take part, first thing is to sign-up here:

[http://www.ei8fdb.org/thoughts/2020/03/pip-ux-study-recruitment/](http://www.ei8fdb.org/thoughts/2020/03/pip-ux-study-recruitment/)

Once you’ve signed up, we’ll then send you information about the research we’re planning.

You can read about our work here: [https://pyfound.blogspot.com/2019/12/moss-czi-support-pip.html](https://pyfound.blogspot.com/2019/12/moss-czi-support-pip.html)

I’m happy to answer any questions specifically about this UX work in the forum.",1596806648.0
How do I measure the size of my package?,254,brt8kx,learnpython,https://www.reddit.com/r/learnpython/comments/brt8kx/how_do_i_measure_the_size_of_my_package/,56,"From the top, obviously. Everything else is a lie. Now that we got that out of our system...

[This is my problem.](https://www.reddit.com/r/ProgrammerHumor/comments/bpmizg/what_does_this_do_idk_looks_weird_better_put_it/)

I imported `datetime` but I only need [`datetime.date`](https://datetime.date). So rather than `import datetime as dt`, why not `from datetime import date`? Because others might use my code and this way we retain familiar import nomenclature. Well, I ask myself, how big is this package I'm importing? Is it worth it to only pull in the pieces I need? Then I realized I don't know the size of these packages. How do I measure my package, all?",1558554314.0
A Thank you post,251,x5gf6m,learnpython,https://www.reddit.com/r/learnpython/comments/x5gf6m/a_thank_you_post/,22,"I hope this is fine by the rules.

I just want to say thank you. 

Thank you all for answering questions and help new players get into the game.

You guys are amazingly patient and share knowledge without being jerks.

Thank you all.",1662274785.0
Tip for new learners using Python. Thonny is a good debugger to use,251,tm6cux,learnpython,https://www.reddit.com/r/learnpython/comments/tm6cux/tip_for_new_learners_using_python_thonny_is_a/,43,If you cannot figure out why your program isn't working I recommend using Thonny. It really helps me when I get stuck and it shows you step by step what is going in your code. It's very helpful.,1648125419.0
THIS SHOULD ENCOURAGE YOU TO DONT GIVE UP AND CONTINUE CODING,251,s98v9c,learnpython,https://www.reddit.com/r/learnpython/comments/s98v9c/this_should_encourage_you_to_dont_give_up_and/,34,"If this is not the place to post please guide me where to do it as I want to share my story. 

&#x200B;

I am an intern in one of the biggest company in the world. I work with digital team who takes care of online sales ( key orders in  ERP system, ship them and so on). 

There is a tool created from the previous worker that is used daily to create some files. 

This tool is getting broken from time to time if there is some deviation in the data ( extra column or the status of the order is not equal to something specific).  Im not an IT guy but when they hired me I told them that I was interested in coding and was learning myself. But to be honest I knew nothing when I started (2 month ago). So yesterday, colleague approached me  asking to fix the tool. The guy who created it I can say he was quite good in coding as he automated some manual works. So they expected me to do same thing. 

I tried yesterday whole night beside the fact that I have exam tomorrow and i should not work after working hours. 

I detected the mistake ( print(df) was empty dataframe) but had no idea how to fix it because the data in the file was not matching to the data extracted from the system. I asked my colleague to help on that how to get the correct data from system to fix the code.

she politely replied that I was an useless piece of shit(manager in CC), and she would work on the problem when she would get free (she knows nothing about python, VBA, Java. Probably she thinks that Java is  a coffee company). In one moment all of my happiness after I detected the problem with my limited knowledge and google help was gone. my motivation to continue working was gone. 

&#x200B;

Somehow I found the power to continue after that and fixed the code myself, got the right data from the system, made the report and now the tool can work in two different situation. 

Thanks to this a\*\*\*\*le that I know more than I knew yesterday. 

&#x200B;

Im just sharing this because here are so many new coders and to give them some motivation. Work hard, and at the end of the day you will find the solution to every problem. 

P.S sorry for my English",1642765187.0
Favor needed - having cancer surgery tomorrow morning,251,qa5dj0,learnpython,https://www.reddit.com/r/learnpython/comments/qa5dj0/favor_needed_having_cancer_surgery_tomorrow/,76,"Girl geek here, having cancer surgery tomorrow morning (Monday Oct 18 - bilateral mastectomy - gah!)

While recovering, I'd like to learn Python.

Even while waiting for surgery to start tomorrow morning, it will keep me calm looking at tech stuff more than anything else.

Objective:

**Analyze text files of WebEx comments or exported Slack thread comments:**

* Count # of comments
* Separate names and link to comments
* Etc

Programming background:

Eons ago - C, some C++, Borland's Turbo Pascal when I was in diapers (I can still remember those dots slooooowly walking across the screen as it compiled.),  some G-code editing for a CNC machine.

Since programming I've done  product mgmt related work.

Question:

Could you recommend any these,  given my purpose and context:

**1) A good Kindle book**

**2) A helpful website**

**3) An example related project**

**4) YouTubers**

**5) Something else you thought of**

&#x200B;

Edit:   Given that I will do this while recovering with a lot of freshly cut nerve endings, feeling ick, and on pain pills, the first wave of learning will be done passively -  with just my eyes moving perhaps? 

I might only have an iPhone or iPad.  Or I might have someone bring a laptop in front of me.  Though family will likely refuse that.

The key point is I might only be able to give this a minimum amount of effort while recovering.",1634497718.0
Which Udemy course to take to learn python?,250,oodmr1,learnpython,https://www.reddit.com/r/learnpython/comments/oodmr1/which_udemy_course_to_take_to_learn_python/,49,"I am choosing between 2021 zero to hero by jose portilla and 100 days of code by angela yu. 

&#x200B;

I will want to learn about scikitlearn, numpy, pandas, matplotlib **later on** for basic machine learning, but first I will obviously need to understand python. For a beginning who only knows intermediate SQL, what is the best course to learn as a beginner?",1626823090.0
Linear regression -- the game!,249,mtf645,learnpython,https://www.reddit.com/r/learnpython/comments/mtf645/linear_regression_the_game/,25,"RDR2 has some nice graphics, but does it teach you about linear regression?

No.

Proudly sharing a ... thing I made in pygame to help create intuition for myself around what simple linear regression is. Really, this is a pygame visualization of numpy calculations. 

This was super hard for me. Spent a few days stuck because I was trying to calculate things using pygame pixels -- which meant reversing the y axis each time. Eventually, just decide to do all math in the original units of the data, and to build functions that convert to/from pixels and those units. Much better. 

Welcome feedback. Goal is to use as a basis to work through all of the major 'shallow' ML algo's.

[Video](https://youtu.be/H5HCaEWAhzY) of it in action.

[Git](https://github.com/Biuku/LinearRegressionGame).",1618760384.0
Finally feeling python has some sense,248,lc8h0z,learnpython,https://www.reddit.com/r/learnpython/comments/lc8h0z/finally_feeling_python_has_some_sense/,39,"As part of my classes in college, I take courses about python, IOT(html, css, js) and C next year.
For 6 months I tried to learn python but I can't even understand my teacher or write any code. This is the situation for most of my class  a few days ago I bought a course in Udemy and from the little I learned, I finally see a bit of logic in python, something started to connect.",1612416215.0
Best tools for learning 15 minutes a day,248,dvc5oh,learnpython,https://www.reddit.com/r/learnpython/comments/dvc5oh/best_tools_for_learning_15_minutes_a_day/,73,"I was wondering what would be the best way to approach learning python if I have 15 minutes a day some days a little more with the weekend being able to extend it considerably 1 to 2 hours. What learning approach have you found works best app, online learning or a book? I do understand its not tons of time but due to my busy schedule, I only want to block out 15 minutes a day more on the weekend as well. Also, is there any specific route that will help me better if I am approaching python to aid alongside my work in excel? My current role is a Financial analyst. Any helpful insight would be greatly appreciated.",1573575477.0
"As an expert, which bad habits would you advice beginner python programmers to avoid?",247,co2udp,learnpython,https://www.reddit.com/r/learnpython/comments/co2udp/as_an_expert_which_bad_habits_would_you_advice/,159,"As the title says.

As beginners begin to code it may be easy to take on bad habits without realize it, making progress more difficult as adquire more and more experience.

Which habits would you advice new programmers to avoid?",1565359590.0
I made a Twitter bot that tweets books using Python,252,uylzhm,learnpython,https://www.reddit.com/r/learnpython/comments/uylzhm/i_made_a_twitter_bot_that_tweets_books_using/,36,"Hey! Yesterday I made this little project, it's called Took, and it's a Twitter bot that tweets full books, one sentence every 30 minutes.

Right now the bot is tweeting *The Last Question by Isaac Asimov*, you can see it working here: [https://twitter.com/took\_bot/status/1529960008800165893](https://twitter.com/took_bot/status/1529960008800165893)  


And if you're interested in the code, you can get it on GitHub: [https://github.com/tadeodonegana/took](https://github.com/tadeodonegana/took)  


Feel free to suggest some changes, it's just a hobby project.",1653612283.0
"Finished Coursera Google Automation IT with Python Certificate, now what?",246,o58wqy,learnpython,https://www.reddit.com/r/learnpython/comments/o58wqy/finished_coursera_google_automation_it_with/,82,"So I just finished my ""Professional"" certification sponsored by Google learning a range of software developer stuff such as:

* cloud, debugging, bash
* python, json, OOP
* VM, linux and ubuntu

I wanted to ask you guys is there any resource that connects me with employers once I finish? My dad keeps yelling at me and saying that he read there was a whole network with employers linked to the class that I should be 'contacting.' It is a bit frustrating when he is yelling at me to ""use the network that I paid for!"" when I can't find anything. **QUOTE from Coursera, ""** When you complete all of the courses in the program, you'll earn a Certificate to share with your professional network **as well as unlock access to career support resources to help you kickstart your new career. Many Professional Certificates have hiring partners that recognize the Professional Certificate credential.""** So where can I find hiring partners and career support!?

I just started applying for jobs with the Cert now on my resume. Once you finish, it quickly unsubscribes you and seemed like everything was finished. I received no emails stating anything about companies looking to speak with me, nor did I receive any info on where to start applying USING the new Automation IT Python Certificate. He keeps screaming at me because I'm not using their resources since he saw that the Google Class advertises employers looking for that specific certification. IMO, I still feel incredibly underqualified to apply for even Jr. Python Dev jobs.

Is there anything else to utilize from Coursera/ Google Cert where I can find a list of companies that are hiring within that field? Am I missing something?

&#x200B;

\*\* Edit: Wow thanks everyone for all the upvotes! Great replies and appreciate all the help!",1624319021.0
Where can I learn best practices?,248,nipprl,learnpython,https://www.reddit.com/r/learnpython/comments/nipprl/where_can_i_learn_best_practices/,34,"I'm starting to look for work as a python dev now and was hoping to get a good understanding of best practices.

How to build an app/program etc completely, when to use logging, config, databases etc.

If someone has links to videos or more practical sources that would be perfect and if anyone has any advice in general I would also be very happy to take it onboard! Thanks!

&#x200B;

\# EDIT: Did I get Awards? Guys and Gals, thank you so much!

\# EDIT\_2: u/Cameron_Jonezy wrote ' Posting your code online and people correcting you '. 

People don't seem to like this answer so much, but I'm still gonna take it on board and post the project that I'm currently updating ( and my only Github project )...  

[my WWOTDbot for r/learnwelsh](https://github.com/pleavinseven/WWOTD)

If anyone has suggestions or ideas or advice, I'll be more than happy to hear it.",1621710560.0
Looking for a good video that explains oop/classes/self basics for a friend,248,n8e1sk,learnpython,https://www.reddit.com/r/learnpython/comments/n8e1sk/looking_for_a_good_video_that_explains/,34,"Hi, I'm helping a friend learn Python/to code in general. She has some coding background and knows syntax, and has taken a few CS courses, but never understood OOP. Recently she started learning Python & asked me to explain ""self"" (not how to use it but like ""what does it mean"") and I gave the best explanation I could, but this is my first time really teaching anyone, and I feel like a YouTube video could probably do a lot better than I could - I'm really scared of saying one thing slightly off and introducing a misconception that lasts forever, or emphasizing the wrong thing, etc.

I'm also looking for something that goes over OOP concepts in general, like inheritance/polymorphism/abstraction/encapsulation, and why do we care, and it would be cool if that was the same video because that would be about exactly the tone I'm looking for. Anyone have any suggestions?

**tl;dr - looking for yt video that explains classes/oop/what does ""self"" mean in Python for a friend**

Thanks!",1620566173.0
Is MS Visual Studio better than Pycharm?,249,k8i5as,learnpython,https://www.reddit.com/r/learnpython/comments/k8i5as/is_ms_visual_studio_better_than_pycharm/,215,"I started learning Python a couple weeks ago, and my ""Youtube teacher"" said to use Pycharm. But now I've seen some other videos and it seems that a lot of people use Visual Studio.

Which one is better?

edit: 2 weeks guys, not python2",1607353301.0
Shakespearean insult generator,253,jtaai3,learnpython,https://www.reddit.com/r/learnpython/comments/jtaai3/shakespearean_insult_generator/,48,"Hello, I am learning python, I want to make a Shakespearean insult generator. My basic idea was to create 3 lists, and have python choose 1 random word from each list and string it together, how would I go about doing this? Thank you",1605240423.0
I feel like I've done nothing but code myself into a corner.,251,eax9km,learnpython,https://www.reddit.com/r/learnpython/comments/eax9km/i_feel_like_ive_done_nothing_but_code_myself_into/,55,"I mean I get the gist of it all I know loops, I can handle functions, I can do... stuff.

I can create the most basic crap that is utterly useless and simplistic, but i can't actually do anything useful or even fun. Kinda hitting a wall here partially cause I can do things but how I do them is so inefficient and when I try to copy those who do it better my code fails.

I'm trying ""DRY"" but all it does is make me want to bang my head against a wall.

Sorry just venting.",1576403919.0
I know python but I don't know programming.,244,1ammdyy,learnpython,https://www.reddit.com/r/learnpython/comments/1ammdyy/i_know_python_but_i_dont_know_programming/,85,"I know how to ""program"" in python. I work in a company that implements AI, data science, APIs and whatever they ask for. Being few and the only one who does Python things, I do whatever the project of that month is. Nobody tells me if things are right or wrong and they usually end up working correctly but I feel like they are not professional results.

I studied mathematics, where they don't teach any programming, and I learned through YouTube videos and courses like datacamp or freecodeacademy. I was lucky enough to get a job and I am learning while working according to the project. From time to time I find a bug in the opensource libraries and I manage to make PRs and there are no complaints about my code. But I have to invest some time in understanding how the libraries are programmed since they use concepts and abstractions that if I had done so, I would not have approached them that way.

I would like to know if you can recommend me any course or book (I usually prefer books) that will help me to approach big projects, how I should structure them, how to use class abstractions, how to do a correct validation, how to do a good logging. I would also appreciate recommendations on how the language works internally or any source to help me become a better programmer.  
Most of the courses I find on the internet or books explain me basic concepts of the language syntax but I already know how to write it, I have a lack of basic knowledge of the language.

Most courses I find on the internet or books explain basic concepts of the language syntax but I already know how to write it, I have a lack of basis of the ""theory"" of programming, data structures, etc.. And how to approach a large project in a way that is scalable in the future.

**If knowledge were a line from 0 to 10, I am in the range 3 to 7 and I don't know how to expand into the other directions.**

**TL/DR: I know how to program in python but I don't know the theory of programming. I would like to learn the basics of programming and how to approach large projects, abstractions and so on.**

EDIT: Currently trying to make good use of the abc library. Any resources around this subjects greatly appreciated too.   
Thanks to everyone commenting. ",1707479399.0
MY VERY FIRST PYTHON PROJECT,246,ndfw53,learnpython,https://www.reddit.com/r/learnpython/comments/ndfw53/my_very_first_python_project/,41,"Hey guys, I just have finished my mad libs generator and have uploaded it to GitHub. So Would you mind spend some time to give me feedback and critic as I am just a very beginner? Thank you very much 

Here is the link: [https://github.com/V-coding-gamedev/Mad-Libs-Generator](https://github.com/V-coding-gamedev/Mad-Libs-Generator)",1621137358.0
I am embarrassed to ask this newbie question,249,ecf714,learnpython,https://www.reddit.com/r/learnpython/comments/ecf714/i_am_embarrassed_to_ask_this_newbie_question/,45,"I have just started a python online course, and I have set up a jupyter notebook.  When I put a math operation in the cell, for example 2 + 4, how do I have the answer, 6, show up in the Out cell, without saving and running, just by hitting the return button.  


Sincerely yours,  
A dumbass",1576688093.0
Is it normal to feel stupid when picking up a new framework?,248,e73brb,learnpython,https://www.reddit.com/r/learnpython/comments/e73brb/is_it_normal_to_feel_stupid_when_picking_up_a_new/,79,"Planning on creating a basic webapp, and I can barely follow along with Django's docs. It's not that the docs are complicated, it's just...... idk.",1575660798.0
In praise of programarcadegames.com as a great way to learn python as your first language (x-post from /r/learnprogramming),246,86erwv,learnpython,https://www.reddit.com/r/learnpython/comments/86erwv/in_praise_of_programarcadegamescom_as_a_great_way/,6,"I just want to give a big public thank you to /u/pvc for putting together such a great, free tutorial/course for learning python.  Python is my first programming language and I started learning on codecademy.com.  I know a lot of people have had success learning there, but it didn't work for me.  I found there was too much hand holding so by the time I had to write a couple lines of code all by myself I was lost.  I discovered 'Program Arcade Games with Python and Pygame' while doing a youtube search to clarify a concept I wasn't understanding.

&nbsp;

I then went through the entire Program Arcade Games course.  I watched the youtube videos chapter by chapter (usually coding along with the professor), briefly skimming the corresponding chapter section on the website (there is sometimes a small amount of written content that was not in the video).  Then the most important part came: doing the labs.  I think this is the key for any programming course - you may think you get a concept, but you won't cement it until you try writing the code yourself.

&nbsp;

Professor Craven really understands the common sticking points for students.  He covers common errors for each concept and in the labs he gives just the right amount of help so you have to do some thinking for yourself, but you have guidance.  He knows where students typically get stuck and gives hints for those parts.

&nbsp;

Now that I've completed the course I feel that I have a decent grasp on the basics of python.  Along the way I thought up some ideas for apps that I'd like to make so I've decided to learn swift.  I'm starting by going through the 'App Development with Swift' iBook by Apple and there is no way I would be able to get through this if I didn't have some programming knowledge already.

&nbsp;

So thank you, Professor Craven.  If anyone else is looking for a good resource to learn Python as their first language, I can't recommend this course enough.


&nbsp;

[Link to Youtube playlist](https://www.youtube.com/watch?v=6lniuucE-bI&list=PL1D91F4E6E79E73E1)

[Link to website](http://programarcadegames.com/)",1521750482.0
Need programming mates,248,fvif1c,learnpython,https://www.reddit.com/r/learnpython/comments/fvif1c/need_programming_mates/,70,"I'm new to programming and I choose python to start programming. And the hardship is I'm completely alone and can't tell or share the problems related to programming with anyone.

Guys add me to your friend list if you are interested in helping each other and growing together.😀 Hoping some Dms",1586110738.0
"Completed automate the boring stuff , now what to do proceed for advance my skills ..",246,c9jyze,learnpython,https://www.reddit.com/r/learnpython/comments/c9jyze/completed_automate_the_boring_stuff_now_what_to/,53,"Any resources , specially ones with certificates will be commendable thank you ..",1562354297.0
Good sites to learn python that are not crazy expensive!,248,z7wi79,learnpython,https://www.reddit.com/r/learnpython/comments/z7wi79/good_sites_to_learn_python_that_are_not_crazy/,76,"Hey guys, I don't use Reddit a ton, so sorry for the low karma, but I have recently been getting into data analytics/science; and to progress my knowledge in the field I was going to try to learn python.

I am currently in college and I want to learn python and hone my skills without having to spend a lot of money (if possible, I honestly don't know a ton about the coding world). I do know that a good amount of people always say not to pay to learn python but I know that there have to be some either free or reasonably priced places that have interactive examples.

If anyone knows where I could find something like this please let me know! Thank you!!

Edit: Thank you guys so much for helping me find so many resources and all so quickly!! If you are just now reading this and have another source please add it in the comments so that myself and others like me have great places to learn! Thank you all!!",1669734287.0
Thanks to this amazing sub I got my first job interview with Python! Any tips?,250,qsfcsa,learnpython,https://www.reddit.com/r/learnpython/comments/qsfcsa/thanks_to_this_amazing_sub_i_got_my_first_job/,17,"Hello, first a big thank you to everyone who commented on my first little project with Python on Github a while ago. You may remember me from [this post](https://www.reddit.com/r/learnpython/comments/qjbk4p/my_first_useful_python_project_on_github/). In that humble script I try to acquire live insights from the financial market using the 'yfinance' package, and everybody here is kind enough to leave extremely helpful remarks.

I've been honing my skill ever since, also applying for jobs to try my luck. And I got a call for an interview! I must make it clear that it is only a student part-time job, with a context of helping the professors in game theory lab experiment. Still, it really makes my day:)

I am asked to prepare to solve small problems using Python during the interview. I'll try my best from everything I learnt from this sub! Any advice will be much appreciated. Thanks a whole lot :)",1636735737.0
Can someone explain Jupyter notebook/lab to me?,247,ntclle,learnpython,https://www.reddit.com/r/learnpython/comments/ntclle/can_someone_explain_jupyter_notebooklab_to_me/,39,"I keep seeing Jupyter notebooks, I have played around with it a little during some python lessons I was using to learn. What is it best used for and why does it need to be ran from a terminal instead of them making a standalone app like VS Code / Atom etc?

Is it worth running / using it instead of Atom / VSCode or another IDE?",1622950410.0
Expanding exposure to good code - any resources for a daily reading list?,245,ibk0mo,learnpython,https://www.reddit.com/r/learnpython/comments/ibk0mo/expanding_exposure_to_good_code_any_resources_for/,32,"Would like to get to expert mode with Python. I do code most days. But I’d like to read good code everyday. 

I do search GitHub and do a bit there. But they are chunky meaty projects and hard to read everyday for 10-15 min. 

Any suggestions / code base / algorithm base you could suggest would keep my interest level HIGH. 

Thanks in advance.

Edit : Blown away by the thoughtful comments. Thanks to each one of you who took the time to direct me towards amazing resources. Will be saving this post and revisiting multiple times on my way to Python stardom. A big thank you.",1597689511.0
Python Projects done over the Year,245,ebetr2,learnpython,https://www.reddit.com/r/learnpython/comments/ebetr2/python_projects_done_over_the_year/,30,"So these are the projects that i was able to finish over the last year. Mind you, i am a relative newbie to Python and have just started seriously learning this past year (Also, i do not have any formal learning experience when it comes to coding)

1. Learnt how to connect to a SQLdb and add information/retrieve information 
2. Financial Data analysis using Python (Pandas, Numpy, SciPy)
3. Automation of Logging in Procedures at work (Saved close to 15 mins and freed myself from the hassle of remembering passwords) - This done through Using Selenium
4. Automation projects for onboarding clients - Again using Selenium, saving the team a bunch of Time 
5. Scraping Websites using Beautiful Soup
6. Creating a Telegram Bot - Channel to have the scraped data being sent to these channels - Again saving a whole bunch of time
7. Creating a Python Transcriber - Still a work in Progress- Still need to understand how to have the transcribed data into a word file - This was done using PyAudio
8. Creating a personal assistant - Wouldnt deny it was done by looking at a YT video
9. Creating a GUI for calculations using Tkinter (Again mostly done through watching a YT video and Stackoverflow)

One of the reasons for me putting this here was to get all of you tell me as to what should i focus on, A lot of people have suggested Machine Learning Courses on Coursera but i need to brush up on my math skills before i enroll. Any other suggestions would be greatly appreciated. Also, for all those people who are just trying to get around coding with Python- If i could do it, i am sure anyone can too. Just keep practicing is what everyone says and so would i.",1576501122.0
How should I go about learning Python for data science?,245,d378fo,learnpython,https://www.reddit.com/r/learnpython/comments/d378fo/how_should_i_go_about_learning_python_for_data/,83,Not really interested in development but I want to work with data in the future (in a business analyst type of role). What would be the most effective way to learn Python for this specific purpose?,1568291633.0
What the heck is an API?,244,9xcfw3,learnpython,https://www.reddit.com/r/learnpython/comments/9xcfw3/what_the_heck_is_an_api/,56,"I have heard people [say an API is not code](https://stackoverflow.com/a/19198380/1585017), but a set of specifications. Let's take the Python Database API as an example. The title of its [webpage](https://www.python.org/dev/peps/pep-0249/) says ""PEP 249 -- Python Database API Specification v2.0"" and the webpage contains all the rules that developers should follow when making a Python library for interacting with databases. For example, there should be a function called connect, a cursor, etc. 

Now, if those are the **specifications of the API**, then what is the API itself? Are the sqlite3 or the psycopg2 Python libraries APIs?",1542297719.0
How do people find modules?,241,m2qe98,learnpython,https://www.reddit.com/r/learnpython/comments/m2qe98/how_do_people_find_modules/,52,"Modules are essentially just ways of shortening code. But they can be made by literally anyone. But how do you know what kinds of modules there are that can help you? Is it just by popularity? How do u come across smthn that u didnt know u existed? And once you do find modules made by people, how do u learn the commands that come with it?",1615470415.0
Fastest way to reverse a string - and it's not extended string splicing?,243,i8bjyf,learnpython,https://www.reddit.com/r/learnpython/comments/i8bjyf/fastest_way_to_reverse_a_string_and_its_not/,70,"An interview question I got was the following:

> Write a function that reversed a string *s*. Speed is important.

I gave them back a 1 liner, returning

> s[::-1]

I was told there's a faster method with some optimisations possible.

Some assumptions:
* Reasonable real world memory limitations. 
* Input string is a valid string. 
* No information on distribution or makeup of strings

How should I have done it?",1597229339.0
I’ve just got into programming two weeks ago and I’m having trouble understand a main function. Can someone explain it to me?,243,hgdmkd,learnpython,https://www.reddit.com/r/learnpython/comments/hgdmkd/ive_just_got_into_programming_two_weeks_ago_and/,52,I tried going on YouTube but they don’t explain it well,1593197885.0
How do I get better at reading documentation?,247,f3bzpt,learnpython,https://www.reddit.com/r/learnpython/comments/f3bzpt/how_do_i_get_better_at_reading_documentation/,37,"Hello all, I've dabbled lightly in Python over the last year or so, but in the last 2 months I've been coding every day. One thing I seem to have trouble with is reading, understanding and then applying documentation that I read on sites like [python.org](https://python.org) and stack overflow. Does anyone have any advice to a brand new Python dev on how to get better at this? Any resources that taught you how to digest documentation? Learning how to code is simply learning how to learn.. Its challenging but I love it so far!",1581609362.0
"I want to learn programming from the ground up, feel like Python would be a good start. Want to start with simple web apps, maybe some stuff for my phone and ultimate goal is dicking around with ML, neural networks and AI just for fun",244,e7ra4a,learnpython,https://www.reddit.com/r/learnpython/comments/e7ra4a/i_want_to_learn_programming_from_the_ground_up/,63,"Hi everybody.

I hope I won't just get a RTFM as an answer because I am just overwhelmed by the information that is out there.

I have barely any or nearly zero experience with programming. I learned some Visual Basic over a decade ago and made some useless stuff with it and also automated some spreadsheets. Then I spend quite some time with Construct 2 and made some very hacky and shitty games with it.

Now I am in my thirties and I want to learn programming for real although I don't have any big goals, I want to learn just for fun and make some fun little programs and simple games. But after investing some (probably a lot of) time I would love to play around with machine learning, neural networks and AI in general.

Now my actual question is about the programming language I should choose - or rather if Python, which I kinda decided on because I wanted this stupid analysis paralysis to end and so I just picked Python.

Will Python be serviceable for web apps, simple Android apps, simple Games - but also ML, neural networks, AI, maybe in combination with the aforementioned games?

I am also overwhelmed with the software to pick up. I downloaded PyCharm but then I see people recommending alternatives or going straight to Vim? Or what do I need to make 2D games, Android apps, programs for ML etc.? I am completely overwhelmed from the start by not knowing how this all fits together.

Sorry for my incoherent ramble here but maybe someone has a link or an explanation of how this all fits together. I know that I will have to spend weeks or months to learn the absolute basics but I just want to start right in the correct environment.

Thank you in advance.",1575792989.0
Are there any YouTube channels of people who break down code from apps/data that is commonly used?,248,c5hiic,learnpython,https://www.reddit.com/r/learnpython/comments/c5hiic/are_there_any_youtube_channels_of_people_who/,24,"A couple weeks into learning python. I understand most of the syntax but every time I try to conceptualize how all this fits together into logical, functional code my brain turns into a pretzel. Think it would be great to see someone explaining how the source code of something that’s commonplace works and breaking it all down and explaining etc. Thanks!",1561505382.0
How well should I know Python before applying for a programming job?,244,j86z7a,learnpython,https://www.reddit.com/r/learnpython/comments/j86z7a/how_well_should_i_know_python_before_applying_for/,74,"I'm just looking for entry level positions. I completed a free course on Udemy as well as SoloLearn. I'm about to read the Head First Into Python book and complete that.

Neither of the classes I took gave me real life problems to work with so I have very minimal experience/knowledge on how to implement the code.

Will I need to continue my Python training before applying or are the classes enough for a job?",1602276285.0
Crypto Portfolio Tracker I wrote in Python with a pretty CLI. Taking critique and answering any questions.,245,mvq0ek,learnpython,https://www.reddit.com/r/learnpython/comments/mvq0ek/crypto_portfolio_tracker_i_wrote_in_python_with_a/,14,"I wrote a simple crypto portfolio tracker that can track ANY binance smart chain coin including new ones not listed on major portfolios yet. It allows you to easily enter your coins and quantity you own to track and display. Prices update 5-10 times per second. It's really easy to use and has a pretty command line interface.

I'm an experienced python dev. I tried to write the code as cleanly as possible for newer devs to learn from. Would gladly welcome anyone to glance over the source code and let me know any tips/advice you have as well as if you have any questions how or why I did things the way I did. I updated it with doc strings so it should be nicely informational.

Code: [https://github.com/trevtravtrev/CryptoPortfolioTracker](https://github.com/trevtravtrev/CryptoPortfolioTracker)",1619040778.0
"Learning (More) Python for Data Jobs but Feeling ""Underprepared""/Imposter Syndrome?",240,m2c9h4,learnpython,https://www.reddit.com/r/learnpython/comments/m2c9h4/learning_more_python_for_data_jobs_but_feeling/,37,"Sorry if this is not the place to put this question, it relates to Learning Python but isn't like a technical question. If I should put this somewhere else, please let me know!

Hi all,

I've used Python occasionally in the past at my current job which is sort of research focused (so I work with datasets, data cleaning, merging, etc.). Looking to transition more into a Data Science-esque job, which seems to be basically what I currently do now except ""more advanced"" at a bigger company. Only like 2-3 years of work experience, did not major in CS but did do social science and STEM bachelor dual majors at a very good US University, for background.

A few quick questions mostly related to imposter syndrome, perhaps not.

\-------

**1) I feel like I write very ""straightforward"" code, in the sense that if I am tasked with a dataset and need to clean and reorganize it, I'll do the straightforward thing to get from Point A to Point B.** Once I check out a dataset and know the (typically not-that-complicated instruction on what I need to get), I'll instinctively have some ideas on what to do. Obviously, while implementing I will run into some issues (dataset not cooperating with parts of my code, etc.), but I can usually figure out a workaround.

However, the code is not sexy, so to speak (at least in my view), but I do document my code or write a quick comment here or there, use understandable and intuitive variable names, and all the good coding habits (mostly). There are times I go back afterwards and look at my code and think ""yeah, I could have maybe turned this section into a function since I re-used it a couple of times and just copy-pasted each time"" and similar stuff, but the code ""works fine"" and people should be able to ""follow it"" since it feels braindead straightforward from how I approached and programmed it. I feel slightly weird about this, because it feels like all the stuff I do is super basic that anyone can do.

**Is this just a case of imposter syndrome with coding, or am I possibly underselling myself mentally?**

**2)** **""Programming by Googling"".** I must say, I retain very little syntax since I swap between a couple of coding languages (e.g. R, Matlab) and honestly I couldn't care to remember all the details. If I type something wrong and my program doesn't run, I'll just fix the error that pops up when my syntax is off. But more specifically, let's say I need to use Pandas/Numpy to reorganize datasets. I don't have basic Pandas/Numpy memorized--each time, I'll have to go look up a quick tutorial on some common functions, but once I remember the syntax, everything is easy since I know (pseudocode-wise in my head) what I want to do to get from A to B.

For instance, in my head I'll be like ""oh okay, I need to delete these columns since we don't need them, then join A to B, sanitize by removing NULLS in this column, etc..."". Each of those steps I might forget how to do, so I'll just look up ""how to delete a column pandas"", ""how to join tables pandas"", ""how to find NULLs pandas"", grab the line of code, then throw it into my program. 30 seconds later, my code runs and gets me a nice dataset for the next step, and I ""forgot"" (not really) how to do the previous stuff already.

**Again, I feel slightly guilty about this since I don't really have things committed to memory, but part of that might be ""I don't use Python a ton"", but is that going to hurt me? Or is the fact that I know what I want to do and can quickly Google the syntax line more important in the long-run/recruiting stage?**

**3)** **How much Python do I actually need to know for a somewhat entry to mid-level Data Science job?** I look at a lot of ""Crash Course in Python for Data Science"" stuff that people praise online, and I look at the syllabus and they cover For Loops, Importing/Exporting data, creating plots, etc.

I do all that sort of stuff in my current work (albeit not necessarily in Python), and I've been told and I know that I'm a quick learner with good communication skills, so I know that if my tasks are ""here's a dataset, clean it, export it, create some plots to visualize the data IN PYTHON"", I can reason out what I need to do after confirming exactly what needs to be done, and then go Google/search up the appropriate code to put the pieces together (see Question 2). So in effect, I already ""know"" the material in the course (the fundamentals behind loops, dictionaries, etc.), and I can work out the syntax easily with resources.

**But that seems super basic, no? Which is why I'm sort of unconvinced that my current skillset is ""enough"" for an entry-mid level Data Science-esque job (again, maybe imposter syndrome).** I've been ""coding"" occasionally since High School (currently mid-20s) so I definitely have a decent mindset on knowing how code works and it feels like second nature to implement all the basic stuff (which is why I say I write straightforward code), but it all feels ""too simple""...am I correct in that I should be looking for more specific advanced stuff which is tacitly required for a strong entry/mid-level Data Science position, or is it really just ""that's truly what you need to get your foot in the door, and you'll pick up skills as needed by tasks assigned to you""?

For instance, I know that projects are good to have to show what you've done. Is there a list of solid projects for strong mid-level Data Science positions so I can gauge how ""complex"" they are?

For example, I like sports. I haven't done any Python web scraping, but I'm sure I could find a website to scrape Basketball Statistics from, learn how to implement that real quick, and then write code which visualizes ""scoring streaks"" or investigates some sort of Basketball-related numbers question (e.g. ""how does Team A's turnover difference compare to Team B's turnover difference?"" or ""What is the correlation between average points scored per game by a team versus win %?""). Easier said than done of course, but I'm confident I could do that within a couple of days if I really tried to. Is that ""enough""/""typical"" work for so-called Data Science positions...?

\--------

Sorry for a longish post, but thanks to all who have comments and replies!",1615419215.0
"If Crashcourse is for starting python and Automate the boring stuff is intermediate, what would be advanced?",244,jw6voj,learnpython,https://www.reddit.com/r/learnpython/comments/jw6voj/if_crashcourse_is_for_starting_python_and/,71,"I am starting with python crash course then moving onto automate the boring stuff, what should i read after that?",1605664929.0
My first python project (web scraper),243,dp8tcn,learnpython,https://www.reddit.com/r/learnpython/comments/dp8tcn/my_first_python_project_web_scraper/,49,"Hey, r/learnpython!

This is my first python project. It scrapes the price of a keyboard I want to buy. Saves it in a text file and sends me an e-mail with its price and compares it with the latest price.

I'm a beginner, so every advice is welcome!

Here is [Github link](https://github.com/JosefVesely/keyboard-price-scraper)

EDIT: Thanks for all the advice!! I reviewed the code with PEP8, so it's now easier to read (thanks u/VerbatimHoroscope!). Used environment variables for password and e-mail (thanks u/dtaivp!) And switched from using global variables to return statement in functions (thanks u/midairmatthew!).",1572451566.0
My first recursive function,241,mqmg6b,learnpython,https://www.reddit.com/r/learnpython/comments/mqmg6b/my_first_recursive_function/,83,"My first recursive function!

I'm currently learning Python, having some scattered hobby programming experience from several decades ago.

At [codingbat.com](https://codingbat.com) (a great place for beginners like me to solve small problems with strings, lists, loops and logic) one of the problems was this:  


>Given a non-empty string like ""Code"" return a string like ""CCoCodCode"".  
>  
>Examples:  
>  
>string\_splosion('Code') → 'CCoCodCode'  
string\_splosion('abc') → 'aababc'  
string\_splosion('ab') → 'aab'

This can be easily solved using a loop, which I did first, but I thought that this looked like a typical problem for recursion as well. I was familiar with the concept but had never written a recursive function before. Took me half an hour to come up with it, and of course it's a very simple problem, but nevertheless it was very satisfying to see it work!

Here's my solution:

    def string_splosion(a_string):
     
        if len(a_string) > 0:
            return string_splosion(a_string[:-1]) + a_string
        else:
            return ''
    
    
    # Some test cases
    print(string_splosion('Code')) # should return 'CCoCodCode' 
    print(string_splosion('abc'))  # should return 'aababc'
    print(string_splosion('ab'))   # should return 'aab'
    print(string_splosion('x'))    # should return 'x'
    print(string_splosion('Bye'))  # should return 'BByBye'

I wanted to post this just because I was very pleased with writing a recursive function, but any kind of feedback is appreciated, too!",1618389749.0
Why -11 % 5 is equil to 4?,241,gof0hh,learnpython,https://www.reddit.com/r/learnpython/comments/gof0hh/why_11_5_is_equil_to_4/,68,"Could anyone please explain why -11 % 5 is equil to 4?

Can't seem to understand it.",1590133793.0
This is the first project in my life executed in Python,238,dlwig2,learnpython,https://www.reddit.com/r/learnpython/comments/dlwig2/this_is_the_first_project_in_my_life_executed_in/,56,"I started learning month ago.

With the birth of a child, I do not have much at this time. But as I learned the basics, it became easier and more interesting. I am grateful to this thread because I found a lot of interesting things here and in general you guys inspire me.

So, here is my first more or less complex project. This is homework on the Udemi course.

Here link for my TicTacToe game.

[https://github.com/kaparegime/TicTacToe](https://github.com/kaparegime/TicTacToe)  


  
WOW!!! Thanks for everyone! you are realy help me. I am inspired even more!   
So, I guess to tomorrow I will fix it and show updated version.  
Again thx for everyone!",1571821168.0
What python libraries should every dev know?,238,18g64k2,learnpython,https://www.reddit.com/r/learnpython/comments/18g64k2/what_python_libraries_should_every_dev_know/,85,"I've been a developer for many years, mainly using JS and Java.  In my current gig, I am doing some maintenance on some Django apps and as part of the process of learning Python, I wanted to know what libraries every dev should know.  For data science and machine learning, it would seem you really need to know numpy, but I am mainly a web developer, so that seems a little outside what I would be normally be doing.  In Java, everyone needs to know about collections, and the java.util package in general.  JS doesn't really have a general one in my experience that isn't built in, but if you're doing backend development, you need to know stuff about node and express.  Is there something like this for Python?",1702333441.0
Python Crash Course 3e giveaway - books and stickers,238,108fo0u,learnpython,https://www.reddit.com/r/learnpython/comments/108fo0u/python_crash_course_3e_giveaway_books_and_stickers/,84,"**Update:** The books went quickly this morning, but I have plenty of stickers left. If you want one, feel free to send a private message or a chat request. :)

Hi everyone! My name is Eric and I'm the author of Python Crash Course. The third edition is widely available for the first time this week, so I'm giving my promotional copies away here. I have [15 copies of the book](https://imgur.com/gallery/2bmyxJ4) to give away. Due to high international shipping rates, I can only ship to US addresses. These tend to go fast, so if you can afford to buy a copy please consider letting someone who can't afford a new book claim a copy. If you would like a copy, please DM me your mailing address.

I also have about [50 stickers](https://imgur.com/gallery/WcCnXf6) to give away. I will send stickers to people in any country where the cost of mailing a letter is reasonable.

I will update this post when all the books and stickers have been claimed, but I'll stick around to answer any questions about the book, about learning and using Python, about life as a technical writer, about life in Alaska, or any other question you might have for me. Also, if you've benefitted from reading PCC, I'd love to hear your story and where it's led you. Thank you!",1673372136.0
I completed the FreeCodeCamp cert for ‘Scientific Computing With Python’ - Here are my thoughts…,239,v8gsme,learnpython,https://www.reddit.com/r/learnpython/comments/v8gsme/i_completed_the_freecodecamp_cert_for_scientific/,26,"A lot of people come on this board wondering whether certain programs are worth the time/effort, so I just wanted to give some quick notes on the ‘Scientific Computing With Python” course on FreeCodeCamp.

The series is taught in 56 segments that are made up of 5-15 minute videos, presented by Charles Severance (“Dr. Chuck”). Each segment has a quiz question that you need to complete to move forward, and some of the segments have optional “additional resources” (which I didn’t do at all). At the end, there are 5 projects that need to be completed to earn the cert.

The videos are presented in a lecture style, which I don’t really care for. Previously I had done a long Programming With Mosh video tutorial, as well as some shorter ones by others, where you see someone live-coding. Those are my preferred learning style. Whereas Dr. Chuck presents a series of PowerPoint slides and marks them up with an e-pen. I personally found it much harder to program along with this style of video.

In order to complete the projects, you need an understanding of Python basics. A lot of the lectures are on stuff like APIs, Regular Expressions, Web Scraping, XML , etc. You don’t need to know any of this for the projects. So about half the series content is what I’d describe as “bonus material” that you can just sit back and watch, and I plan to find a different source when I really want to learn that stuff.

Building projects are really where I learned the most, but that’s probably true of most programs like this.

There are 5 of them:
- Arithmetic Formatter was an easy programming challenge, but the output was tedious. It’s one of those where you have to do a lot of white space counting. Any little extra space or dash will cause the program tests to fail.

-Time calculator was a fun one. It could be programmed in multiple ways, so I had a fun time trying something unique.

-The Budget App was the bane of my existence while I was working on it. The base functionality wasn’t too bad, but the instructions were confusing. So I had to rewrite it a couple times. And the graph you have to build at the end was a very tedious component. Really hated building this thing. My code is a mess, but it works. Learned a lot about classes writing this at least.

-The Polygon Area Calculator was super easy compared the the other ones. Took me a min to figure out one piece of math, but overall took ~30 min to complete.

-The Probability Calc was my favorite. A super fun “simulate this experiment” project. I misunderstood a piece of it (specifically, what to do when too many balls are pulled out of the hat), so my code is a bit crazy. I basically just patched something on to get it working properly when it would be cleaner to rewrite the whole thing. But it works properly as is, so I didn’t bother making it clean.

So TLDR: I didn’t love the lectures, but I learned a lot from the projects. Even though the projects were sometimes frustrating.",1654781068.0
Is Automate the Boring Stuff a good starting point for a beginner?,243,mtpedz,learnpython,https://www.reddit.com/r/learnpython/comments/mtpedz/is_automate_the_boring_stuff_a_good_starting/,73,"I’ve been looking online for resources and it keeps coming up as a great book. Would you recommend it for a beginner or should I start somewhere else? 

Sorry if this has been asked before, I’m not good at searching Reddit.",1618792869.0
Is Googling ok?,238,fxfb1k,learnpython,https://www.reddit.com/r/learnpython/comments/fxfb1k/is_googling_ok/,103,"I have been learning for python for 3-4 months and last 30-40 days I'm trying to learn pandas, numpy, matplotlib, sklearn etc. for data science. I'm sure  I'm doing progress but sometimes I feel like while learning new things I forget old concepts, sometimes it's making me paranoid. When I practice I usually Google things and look at examples to help me...

Is it normal progress of learning or am I going too fast? What method would you recommend? Is it better to follow my current flow and refresh myself with google examples when I'm stuck, or get pro on one topic then move next?",1586381360.0
Wrote My First Python Program,241,f5d2qv,learnpython,https://www.reddit.com/r/learnpython/comments/f5d2qv/wrote_my_first_python_program/,47,"I finally got my act together and put together my first working Python program.  I used the OpenWeather API to search for the weather in city and then present the data with a tkinter GUI.

I need to address error handling and a few other things but I'm pretty proud of what I was able to do.

[https://github.com/seanfillmore/Python-Project](https://github.com/seanfillmore/Python-Project)

&#x200B;

Shout out to these videos for inspiration and help:

[https://www.youtube.com/watch?v=JrWHyqonGj8](https://www.youtube.com/watch?v=JrWHyqonGj8)

[https://www.youtube.com/watch?v=ELkaEpN29PU&t=694s](https://www.youtube.com/watch?v=ELkaEpN29PU&t=694s) @traversymedia

and everything u/coreyschafer produces",1581963890.0
"I teach you Python, you teach me English",242,aeh4qy,learnpython,https://www.reddit.com/r/learnpython/comments/aeh4qy/i_teach_you_python_you_teach_me_english/,63,"Hi guys! I will be happy to teach you python. We can do python exercises together. I can review your code and give feedback. You can ask me some questions and I will try to do my best in answering them.

In exchange I want you to talk with me in English and I would appreciate if you pointed out my mistakes when I make some. And yeah, you don't need to be a teacher. Just to be good at English will be enough.

## A little bit about me

My name is Denis. I'm 22. I've been working in a company as a full-stack python web developer for about 5 months. Before that I worked as a freelancer for 4 months. My main stack right now is Python + Django and JS + React.

I also have a blog about web development ([https://apirobot.me/](https://apirobot.me/)). Right now it's in Russian but I'm planning to start writing articles in English in near future. If you're interested you can follow me on twitter.

## My contacts

Twitter: [https://twitter.com/apirobotme](https://twitter.com/apirobotme)

GitHub: [https://github.com/apirobot](https://github.com/apirobot)

Email: [hi@apirobot.me](mailto:hi@apirobot.me)

Or send me a private message on reddit...",1547108760.0
Any one stop guide for Python internals and fundamentals?,239,ncrkt3,learnpython,https://www.reddit.com/r/learnpython/comments/ncrkt3/any_one_stop_guide_for_python_internals_and/,19,"I came across this [pybay video](https://youtu.be/rTgjOV0uTV0) recently and realized all the time I have been using lists and tuple, never did I know the internals at such a fundamental level.

Evidently having knowledge at this level could really improve one's design and debugging performance.

So I was wondering if there is a one-stop guide/book/video list explaining all such concepts of python in detail.

Some concepts I am looking for are, as explained in the video, how any DS is designed in python, like them being objects but how the memories are allocated in each and on calling one of their methods (like list.pop()) how they function internally.

Thanks!",1621056486.0
Interactive Python Website similar to Codemy?,241,jaydnn,learnpython,https://www.reddit.com/r/learnpython/comments/jaydnn/interactive_python_website_similar_to_codemy/,47,"I’m trying to learn a bit of python while I’m at work. I typically sit in a computer all day but I can’t play sound because then people would know ( there really is nothing to do but I have to look busy). I used codademy until it asked me to pay, was wondering if there’s anything else out there like it where I can just read and practice the fundamentals right there without watching videos. Thank you !",1602672496.0
Automate the boring stuff with python: Using beautiful soup,240,hexz3s,learnpython,https://www.reddit.com/r/learnpython/comments/hexz3s/automate_the_boring_stuff_with_python_using/,39,"EDIT: anyone who comes across this, Amazon seems to stop people from web scrapping, you can get around it with code. Easiest thing to do is use another website. I used an online store of a local business and was able to follow along with Al easily then.


So trying to follow along with Al and copy price of a book from amazon.

So he right clicks on the price, the clicks inspect. Then he right clicks on highlighted part of code and clicks 'Copy CSS path'.

I don't have this option but read on stack overflow that this has been replaced with 'Copy selector'.

However when I copy selector and then use that in my code I get a blank list.

    >>> soup.select('#a-autoid-6-announce > span:nth-child(1)')
    []

Where as, Al's code gives him a list with one item in it, that is just the price on the book.

Anybody able to help me with what I'm doing wrong?",1592990724.0
Looking for a mentor,238,gqdjbm,learnpython,https://www.reddit.com/r/learnpython/comments/gqdjbm/looking_for_a_mentor/,86,"I'm a 40 year old high school mathematics teacher who's looking to make a career change.  My degree is in computer science, however, that was 18 years ago and I haven't made use of it since.  I've been teaching myself Python over the past few months and have moved on from tutorial hell to projects but feel as though I'm going in circles at times.   If anyone would be interested in mentoring me through this process it would be greatly appreciated.  I'm looking for someone who can give me some feedback, help me streamline my code and give me a heads up of relevant skills employers are looking for.  I can negotiate pay for your time as well.",1590422437.0
"I'm working on a CLI application to change your background to the NASA astronomy picture of the day, you're welcome to help!",240,ef072o,learnpython,https://www.reddit.com/r/learnpython/comments/ef072o/im_working_on_a_cli_application_to_change_your/,44,"Although my background is not in computer science or software engineering (mostly data science), I thought it would be fun to work on a python coding project. I got familiar with the NASA APIs and one of their cooler ones is the [APOD](https://apod.nasa.gov/apod/) (astronomy picture of the day) which allows you to download interesting pictures every day. It seemed nice to me to have an application that could set this image as my background with very little effort.

I couldn't find a Github repository that is still actively maintained and cross-platform, so I thought I'd start one and see if anyone was willing to collaborate. Without much experience, I think it's safe to say there will be a lot of things that can be done better, both in the structure of the project and code, so please come and point them out! Additionally, I think it's a great place for beginners to contribute to an open-source project, as some of the bigger projects can be quite daunting to get started in.

Github repository over here:

[https://github.com/Thomas9292/nasa-background](https://github.com/Thomas9292/nasa-background)

More instructions on Github and how to contribute to open source [here](https://akrabat.com/the-beginners-guide-to-contributing-to-a-github-project/)",1577186713.0
"I am pretty decent at scripting and automating things but bad at data structures and algorithms, how should I improve?",237,d1gnw8,learnpython,https://www.reddit.com/r/learnpython/comments/d1gnw8/i_am_pretty_decent_at_scripting_and_automating/,36,"I work in IT and at my current work I’ve been praised for automating things via vendor API’s but when it comes to interviewing with companies that require coding challenges, I fail at data structures and algorithms, especially when it’s on the spot and I have to figure it out within 15 minutes. I generally have an understanding of the concepts but I just can’t think of a solution unless I take my time via trial and error a few times before coming up with a solution, which may not even be close to the most efficient. What are some ways people overcome this hurdle?",1567975464.0
Python Code in HTML,239,hywpbc,learnpython,https://www.reddit.com/r/learnpython/comments/hywpbc/python_code_in_html/,73,"I've been taking some online courses in both Python and HTML, and I feel like I have basic knowledge in both. However, I was wondering if there is a way to join both of them. 

For example, if I make a Python code that requires an input, could the input be a text box in my HTML document? Is there a way for the output to become a <p>? How would I do that?

Sorry if this is a dumb question, and thank you in advance!",1595870995.0
Learning data structures,240,hhcboq,learnpython,https://www.reddit.com/r/learnpython/comments/hhcboq/learning_data_structures/,45,"Hi, I'm currently self learning programming. I have a grasp of the basics of python, and am currently going into data structures.

However, I've found that anywhere I go, learning about data structures does not seem to make much sense in python. The existence of python lists seems to trivialise arrays, stacks and queues. Case in point, doing data structure problems on hackerrank.

I'm not sure if it matters, but my short-term goal is to eventually get into doing Leetcode problems. 

Would I be better off learning another language like C++, to understand the lower-level processes in such data structures? Or am I just not doing something right? Any help is appreciated.",1593340859.0
Python Crash Course 2e giveaway - books and stickers,237,cfavw8,learnpython,https://www.reddit.com/r/learnpython/comments/cfavw8/python_crash_course_2e_giveaway_books_and_stickers/,74,"**Update: All of the books are spoken for. If you'd like a sticker, feel free to DM with a mailing address. I'll answer any questions people have as long as this post is up. Thank you everyone!**

Hi everyone! I'm the author of Python Crash Course, and I have [15 copies of the second edition](https://imgur.com/MjzB2uL) to give away. I also have [50 new PCC stickers](https://imgur.com/3wBssz2) to give away if you like the cover art. (Here's one [on my laptop](https://imgur.com/WcCnXf6).)

~~If you want a copy of the book, please DM me your mailing address. I'll send them to the first 15 people to resond.~~ These are promotional copies that I've been given from No Starch Press, so please ask for one if it would be a hardship to buy a copy. If you want to buy a copy, you can use the coupon code RLEARNPYTHON to get 30% off the [new edition of Python Crash Course](https://nostarch.com/pythoncrashcourse2e), or the [Python Flash Cards](https://nostarch.com/pythonflashcards) that came out this year as well. When you buy directly from No Starch, you get a DRM-free copy of the ebook along with the physical book.

I'll include a sticker with each book. If you don't need the book and just want a sticker, DM me your address as well. I'll send stickers to the first 50 people who ask for one.

Please note, I can only send books to US addresses; international media shipping rates are really expensive. I should be able to send stickers just about anywhere.

I'm also happy to answer any questions people have. If you've benefited from reading PCC, I'd love to hear your story and what it's led you to. If you want to leave more specific feedback, I have a [reader survey](https://docs.google.com/forms/d/e/1FAIpQLSez7B3mKB9hmOKoiE7LS5ZmpaWME_KNOiLsznH4zb0UtSoxsA/viewform?usp=sf_link) that I'm using to help refine PCC over time, and to help identify the kinds of learning resources to create next. I especially appreciate feedback from people who have finished the book and moved on to other projects and resources.

Thank you everyone! I love the r/learnpython community!",1563559316.0
"Update to post: I’m 50 years old, can I still learn programming?",239,aikoha,learnpython,https://www.reddit.com/r/learnpython/comments/aikoha/update_to_post_im_50_years_old_can_i_still_learn/,115,"Update:  230 days later - I’ve learned a lot though still behind the curve mostly because I’ve not focused solely on coding.  I’ve got lots of reference books and notebooks full of notes.  I’m now at a crossroads - where to go from here?

HTML, CSS, Node, Angle, MySQLi, PHP, React, Kivy, C, C++, Algorithms, Data Structures the list goes on and on........and I’m plagued by decision paralysis.  If I want a career change out of this, what is the most common and versatile path?


Old post:  I’m a Quality Manager in the manufacturing sector.  I’ve done it for 28 years.  I want out.  I have a 3D printer, podcast setup and fix all my families “tech” issues.

I need pep talks or sanity checks please.  Is coding out of reach for a new 20+ year career?",1548144083.0
Nerd-Storage - a simple LAN storage,236,nxm80j,learnpython,https://www.reddit.com/r/learnpython/comments/nxm80j/nerdstorage_a_simple_lan_storage/,11,"I used Flask to write a simple web server for sharing files on the local network.

It supports the download of files and directories, the upload of multiple files at once, making a directory, updates and deletions.

The user can also upload an existing directory as a .zip file which will then be extracted inside the storage as a folder.

Repo: [https://github.com/0xHaru/Nerd-Storage](https://github.com/0xHaru/Nerd-Storage)",1623434566.0
Setting up first python project environment?,241,m3exau,learnpython,https://www.reddit.com/r/learnpython/comments/m3exau/setting_up_first_python_project_environment/,56,"This should be a fun few questions. I'm about to start a very serious first project and I want to setup my first environment properly. 

Example: Make my folder setup, add virtual machine and use pip to add my libraries... Once done what's a good IDE to use for this setup? Are there any good tutorials or doc which can show me how to start and finish a setup the environment?

I'll be doing this on a debian based linux environment.",1615545225.0
beginner tip - don’t underestimate pen and paper,238,91t7c4,learnpython,https://www.reddit.com/r/learnpython/comments/91t7c4/beginner_tip_dont_underestimate_pen_and_paper/,51,"The day I started writing pseudocode on paper was the day I finally started becoming a halfway decent programmer. I truly “understood” quick sort when after many attempts, I could correctly write down how the numbers should be logically arranged at each step of the algorithm. Similarly, this is how I finally had a lightbulb moment when I was struggling with dynamic programming. Most people starting to program jump straight into a problem and hope the code will just write itself, so next time you’re faced with difficulty in implementing or understanding some code, write out your proposed solution on paper to test or develop your knowledge before you even think about touching the keyboard.",1532535129.0
"Senior Engineers, what are practices in Python that you hate seeing Junior Engineers do?",236,1g01yp4,learnpython,https://www.reddit.com/r/learnpython/comments/1g01yp4/senior_engineers_what_are_practices_in_python/,266,"I wanna see what y'all have to rant/say from your years of experience, just so I can learn to be better for future senior engineers",1728507450.0
Best free sites to learn Python Courses,241,133us49,learnpython,https://www.reddit.com/r/learnpython/comments/133us49/best_free_sites_to_learn_python_courses/,65,"i want to learn python and i am a totally beginner and i only know what is programming mean. I search on the internet where i can get free course of python beginners to advanced but i didn't found. If someone have the idea where is the best place to learn it from a beginning on a free without paying money just need to invest knowlegde and time.

It will be really helpful for me to learn programming.

Thank You.",1682868317.0
How do I go from a .py script to an executable program?,238,z5pde2,learnpython,https://www.reddit.com/r/learnpython/comments/z5pde2/how_do_i_go_from_a_py_script_to_an_executable/,52,"As per the title - I apologise if this is a bit basic. 

I pretty much use PyCharm exclusively for writing all of my scripts, but how do I advance to utilising them outside of this? As in via (but certainly not limited to) a desktop application/executable you can simply click and run in the background. 

I’m 100% self-taught, so my knowledge is extremely limited outside of the actual coding aspect of things.",1669516902.0
Please try to break my code,238,jp79vy,learnpython,https://www.reddit.com/r/learnpython/comments/jp79vy/please_try_to_break_my_code/,45,"I've written some code for a university project, and I think I've covered all cases so that it won't break. At the very least I can't think of a way to break it myself.

In case I'm missing anything though, I thought it might be a good idea to ask others to try and break it as well.

Also, while my spyder linter scores this as 10/10, I would still appreciate any tips on making this more concise as it feels a tad bloated at the moment. I'm rather new to python though, so nothing too complicated, please.

Hopefully, this is the correct sub for this. If not, could someone please point me in the right direction to where I should post this?

I haven't added the graph yet, but am working on it now.

&#x200B;

&#x200B;

Edit: Had to remove link for sad reasons. Some friends pointed out it could cause my code to wrongly get flagged as plagiarised from myself when put through my university's plagiarism checker.

Thanks for all the replies. I've learnt a lot from this. Both in terms of how to try and cover more edge cases etc. and how to write code more concisely.

I was trying to reply to everyone initially but I thought that this would be more efficient.

So far I've tried to prevent case and similar errors with .lower() and .strip()  
I've changed all the f""{variable}"" to ""{}"".format(variable) for consistency.  
I've made the computer inputs in 'game mode' have to call the variable\_is\_a\_valid\_float function to try to prevent the divide 0 errors caused by float rounding.  
Corrected a maths error by changing .floor to np.ceil (the code still ran, but returned incorrect values, literally just a maths error I made)  
Added brackets () to some maths stuff to improve readability.

The docstrings I'm reluctant to change too much, as I need to follow PEP8 and get as high a linter score as possible, and I'm not sure I can simplify them too much without changing the style so that my linter is upset with them.  
I'll give it a try in the morning though.

The other stuff that's been pointed out is mostly beyond me tbh, but I'll read up on it to try and understand it better.

Thanks again for all the help, you're all amazing. \^\_\^",1604677207.0
Stuck trying to create a twitter bot,239,iy309k,learnpython,https://www.reddit.com/r/learnpython/comments/iy309k/stuck_trying_to_create_a_twitter_bot/,38,"So as the title says, my current project is creating a twitter bot that tweets my girlfriend a different picture of a corgi (her favorite dog) every morning at 9am. I am using tweepy. I have begun working on it and have 2 main questions:

* How should I go about the different picture every morning? Would the best way be to have a folder with a bunch of different corgi images that it iterates through? For example ""corgi1.jpg,corgi2.jpg...etc""
* How should I go about scheduling it to tweet every morning at 9am? Obviously I don't want to leave the program running all day. Should I run the code on a web server? Is this easy to do? 


Thanks in advance.",1600833166.0
Stanford CS106A python course - Code in Place 2020,237,hq6fk8,learnpython,https://www.reddit.com/r/learnpython/comments/hq6fk8/stanford_cs106a_python_course_code_in_place_2020/,36,"Hi there,

During lockdown, I took Stanfords Code in Place python course. It follows the same structure and content of their CS106A university course.

I've talked to several people who expressed their dissatisfaction of not having been able to join this awesome course. And I figured, since most of the course material itself is available publicly (the lectures are via private youtube links), and the guys over at Stanford seemed really generous through this whole project, that I would share what's shareable from the course with as many people as possible.

Here's a link to a google drive folder: [https://drive.google.com/drive/folders/1Z442baPqhfhjvtpbvGCD3jQ3uxUu\_pOj?usp=sharing](https://drive.google.com/drive/folders/1Z442baPqhfhjvtpbvGCD3jQ3uxUu_pOj?usp=sharing)

The first PDF you'll see is the one you'll use the most. Inside the ""attatchments"" folder there is some (a lot) information on how to get your IDE (the software you'll be coding in) going, and a ""graphics reference"" which will come in handy later on.

And you can use this one as a general python reference: [https://codeinplace2020.github.io/pythonreader/en/intro/](https://codeinplace2020.github.io/pythonreader/en/intro/)

I understand that there may be some suspicion regarding opening links and all that. But most of the links in the PDF is links to youtube. There are some links for downloading starter code and such. It isn't strictly necessary to download the starter code. But if you're anxious, you should look into setting up a virtual machine (I recommend Hyper-V, VirtualBox or VMWare), in which any harmful file execution would have no effect on your real system.

I hope this helps not only you who decide to learn programming, but also the people you'll eventually help with your new skill.

Have a great day!",1594604471.0
"Why does round(2.35, 1) return 2.4 (rounded up) but round(2.25, 1) returns 2.2 (rounded down)?",235,g0c8y1,learnpython,https://www.reddit.com/r/learnpython/comments/g0c8y1/why_does_round235_1_return_24_rounded_up_but/,49,"round(2.35, 1)
returns 2.4 

yet round(2.25, 1) returns 2.2



Shouldn't the five in the hundreths place make both round up to 2.4 and 2.3 respectively? What's going on here?

The same is true of round(2.5) and round(3.5). The former returns 2 and the latter returns 4",1586753688.0
I know python. Now how do I structure it?,235,9ykkcq,learnpython,https://www.reddit.com/r/learnpython/comments/9ykkcq/i_know_python_now_how_do_i_structure_it/,39,"I know the basics- functions, loops, import and use libraries yada yada. I am now wanting to code right- 

* How do I structure my python project? Are there holy guidelines that I can easily follow?
* How do people store configuration information like database servers, username, password in a python project?
* How do I manage dependencies? I listed them out in requirements.txt but also found setup.py articles. Which is preferable?
* How do I start writing test suites? Are there tools that help with this?

If there is a resource/book that you have found beneficial for answering above, please share with our community.

Cheers pythoners!",1542659103.0
What's the best way to distribute Python software to non-technical users?,236,n3jcsf,learnpython,https://www.reddit.com/r/learnpython/comments/n3jcsf/whats_the_best_way_to_distribute_python_software/,53,"Hi everyone,

I have a package I've created in Python that I want to give to 1) build a GUI for, and 2) distribute to non-technical users (who probably won't have Python installed). I know there's a lot of different tools for both available, and was wondering if anyone had any experience with doing this, and recommendations on which combinations work best, in terms of end-user experience, reliability, and ease of distribution.

&#x200B;

Thanks in advance :)",1620000261.0
Finally finished my first GUI app with PyQt!,236,gx12zp,learnpython,https://www.reddit.com/r/learnpython/comments/gx12zp/finally_finished_my_first_gui_app_with_pyqt/,41,"Hello :)

So the app reminds you to look away from your screen every twenty minutes to reduce eye strain and other eye related issues from starting at your monitor for a long period of time.

It was originally inspired by [this](https://www.reddit.com/r/Python/comments/gq8254/i_created_twenny_my_very_first_app_it_reminds_you/) thread, I just decided to create a Windows version that will also run seemlessly in the background.

Here are some [screenshots](https://i.imgur.com/GJLPS6v.png).

Github link is [here](https://github.com/Beinish/2020).

I'm know it's not a huge project, but it took me a lot of time to finish (about a week) and I'm proud of it :)

I'm looking for feedback on the whole thing! Files and paths, the code, best practices, even the github layout of everything.

Thank you /r/learnpython for being an awesome community!",1591347916.0
When should I start machine learning?,233,g1aryx,learnpython,https://www.reddit.com/r/learnpython/comments/g1aryx/when_should_i_start_machine_learning/,79,"Ive been coding for around 1 and a half years, (1 year of python, around 3 months of unity C#, and now im back with python) Im interested in machine learning, but i dont know when i should start learning it. I’m 13, so It’s kind of hard to understand everything, but I feel like it would be a good thing to start",1586888300.0
"What thing in python (or in programming in general) was difficult for you to understand, and then suddenly it ""clicked""?",235,c3a7ht,learnpython,https://www.reddit.com/r/learnpython/comments/c3a7ht/what_thing_in_python_or_in_programming_in_general/,158,What information or the change of point of view or an event caused that you finally understood this difficult concept?,1561121678.0
I wrote a free Python book for beginners,239,aid698,learnpython,https://www.reddit.com/r/learnpython/comments/aid698/i_wrote_a_free_python_book_for_beginners/,31,"I am always seeing people asking for good Python beginner books on here and sometimes I mention my book and sometimes I don't. I just thought I would write a quick post about it.

I wrote **Python 101** almost 5 years ago targeting Python 3.5 since that was the new Python of the day. While the book isn't written for people who don't have any computer science background, I have received positive comments from both students and professionals that want to learn Python. 

You can check out the book for free [online](https://python101.pythonlibrary.org/) or get a free copy of the eBook on [Leanpub](https://leanpub.com/python_101) (PDF, epub and mobi).

I am planning to do a complete rewrite of the book later this year, so if you are a current reader, feel free to let me know what things you think should be added or changed. I already have a lot of good ideas, but I like to hear from my readers to know what sorts of things they think might be good too.

Also for those of you who like Python project based books, I am currently working on one that is titled **Creating GUI Applications with wxPython** that you can get on [Kickstarter](https://www.kickstarter.com/projects/34257246/create-gui-applications-with-python-wxpython)

*Note: This is a re-post that the mods told me to do because they had removed the original*",1548096107.0
Learning Python allowed me to find my true passion!,236,yvm05i,learnpython,https://www.reddit.com/r/learnpython/comments/yvm05i/learning_python_allowed_me_to_find_my_true_passion/,35,"Hey there! About two years ago I started learning Python with the goal of “coding as a career”. I was tired of my job and always flirted with coding/programming. I didn’t have any real sense of direction, I just knew that I wanted to code. I had always gone through various courses and languages over the years but always lost interest after getting the basic syntax down.

I read every suggestion here, and took the usual courses but I quickly gravitated towards Pandas and working with data directly in my job at the time.

Long story short; I used Python to pull reports at work and eventually realized my real passion was in Data Analytics and visualizing data.

I worked tirelessly over the past two years to hone in on my interest and am happy to report that I was recently promoted with a starting salary of $90,000!

I just wanted to encourage anyone out there that you absolutely can get to where you want to be, even if you don’t know where it is quite yet! I obsessed over posts in this sub where people posted their success stories, longing for the day that I could be there one day too.

Keep working hard, and look for opportunities to apply your learnings in “the real world” and you WILL get there! Thank you to everyone here that helps each other out, and a huge thank you to the folks in the community that create wonderful material to learn from!",1668484247.0
Python '2021 Complete Python Bootcamp From Zero to Hero in Python' or '100 Days of Code - The Complete Python Pro Bootcamp',233,qfr0en,learnpython,https://www.reddit.com/r/learnpython/comments/qfr0en/python_2021_complete_python_bootcamp_from_zero_to/,84,"Can't decide.  I've done a fair amount of coding in traditional highest level languages and a bit of Ruby.  Had discussed learning Python in different threads and now I've zeroes into these two.

EDIT:

If you want the courses they are available for $15 each.  If they are more try again.  People say if you use incognito mode (or probably a different browser) the price should drop.  Or just go back later.",1635197663.0
What differentiates python from other programming languages?,236,nnb87y,learnpython,https://www.reddit.com/r/learnpython/comments/nnb87y/what_differentiates_python_from_other_programming/,74,"I want to start programming in python but I have a question, what is python specifically used for? For example, javascript is used for web pages, but what about python?",1622247011.0
Python Project Ideas (beginner-mid),231,mo8h06,learnpython,https://www.reddit.com/r/learnpython/comments/mo8h06/python_project_ideas_beginnermid/,32,What are some ideas for projects that use datasets? I really need help :(,1618073927.0
22 y/o college student changing my major from English to CS,236,dlb3t1,learnpython,https://www.reddit.com/r/learnpython/comments/dlb3t1/22_yo_college_student_changing_my_major_from/,93,"It’s been a good 6 months since I’ve been enrolled in school. I had a couple teammates pass away and decided to take a semester off since May of this year and in that time I realized that majoring in English would be unsatisfying knowing that the end goal of it would be me teaching college courses. Now, I have always had a passion for technology, so I did a lot of research on the topic of CS, Engineering, Cyber Sec, etc. and just decided to do a full major change to CS and wanted to know from all of you in this community, what’s the best way to start Python as a beginner? (I have set up a GitHub account already, I’ve downloaded Python on my Mac, and I have Atom all set up on my Mac as well.)",1571710463.0
Thank you everyone!,231,chm2fz,learnpython,https://www.reddit.com/r/learnpython/comments/chm2fz/thank_you_everyone/,29,"I just wanna thank this community, every question that i've asked here, I got an answer. and not just that, people here actually care, I recently had a giant project and I got into some problems on the way, and it feels like this community is really supporting me, people pm'd me and asked me if I got it working. I can't express how much im thankful for each and everyone of you.

Keep being like this, please, don't ever change",1564051568.0
What is the best youtube video/channel for a new python learner?,234,9kjvil,learnpython,https://www.reddit.com/r/learnpython/comments/9kjvil/what_is_the_best_youtube_videochannel_for_a_new/,53,I am looking for some material to learn python. Please suggest.,1538424679.0
"Complete noob, would building a website backend using Python be a good learning project?",237,xsx25y,learnpython,https://www.reddit.com/r/learnpython/comments/xsx25y/complete_noob_would_building_a_website_backend/,47,"I have had this website idea for a bit and have been wanting to learn python so I’m thinking why not kill two birds with one stone. I have a friend who knows python well and works as s software engineer, and my girlfriend just finished a CS degree and knows some python. Would a website be too complex for a complete beginner to try and jump into or would it be a decent project to get me to learn? For reference on my skills, I work in IT and know some powershell scripting",1664635421.0
Career change with Python,230,i5vxrf,learnpython,https://www.reddit.com/r/learnpython/comments/i5vxrf/career_change_with_python/,106,"Is anyone learning python for a career change?
 
What is your background? Age (optional)?

What area are you working? What is your progress? And what do you hope to achieve?",1596876356.0
Starting an automation position with Python and Linux in 10 days. I have no prior experience with Python.,233,buun17,learnpython,https://www.reddit.com/r/learnpython/comments/buun17/starting_an_automation_position_with_python_and/,54,"Hey all. So, basically, I graduated a 6 months web development bootcamp about a month ago. In our graduation day, we presented the products that we built for our clients over the course of a month and many companies attended the ceremony. 

Anyways, this company called me in for an interview and I was interviewed by two senior software engineers. One of them for a frontend developer position and the other for an automation position. I went through a technical interview where I got some questions right and some wrong. I also expressed that prior to the bootcamp I had no experience with programming and I don't have a college degree. They said they were both impressed with me and encouraged me to continue studying on my own and recommended me some resources to advance my JS skills. And I thought that was that. I felt that whilst the interview was overall good, I'd not have a chance as there must be some applicants who are far more qualified than me. 

Now the reason I am giving this background info is to set the scene for you of what kind of experince/qualifications I have. I got called a few days ago and they expressed that they'd like to offer me an automation position where Python is the language and Linux is the environment. Where they'd train me for it for a period of time (not sure how long for exactly). Now I was surprised, but I wanna learn Python and try something new so I accepted. I hadn't had the chance to drop by and discuss the position in depth as I've been working on a project fulltime this entire month. BUT I shot them an email and asked for some more info on the position, and this is the response: 

```

To answer some of your questions, the position is a programming position, the programming language used is mainly Python, and the environment is Linux. But programming interviews usually do not focus on a specific language because the main programming concepts and skills usually carry over from one language to another.

In the meantime, please review the following:
·  Data structures (arrays, linked lists, stacks, queues, trees, tree traversal… etc)
·  Object Oriented Programming concepts, benefits… etc
·  Programming techniques: recursion, memoization (no missing ‘r’ here)… etc
·  Practice solving programming problems
·  Basic computer networking (OSI model, routers, switches… etc).

```

Now, I start my new position in 10 days from now and I want advice on how to best be prepared for it. What can I expect? How to make the most out of my time there. What should I prioritize in my initial learning journey (specifically those 10 days). Best resources (books, courses, sites etc) to learn the concepts/topics mentioned in the email above. And I'd appreciate it if people who work or worked in such a position/ with such technologies shared their stories/experience/insight. 

Oh, and I plan on dropping by next week to talk about it more with the company. Any advice on what to ask/talk about/discuss?

Thanks and feel free to ask any questions c:",1559230697.0
I recently completed ~300 CodingBats in Python,232,bssbw7,learnpython,https://www.reddit.com/r/learnpython/comments/bssbw7/i_recently_completed_300_codingbats_in_python/,28,"Over the past six weeks, I've slowly been working on CodingBat problems in Python.  I've archived my solutions, there should be 317 in total.  The solutions are organized by section name, I've included the test cases from the site at the bottom of each section.  May they be of use to someone.

https://github.com/WorryingWonton/PyBats",1558773378.0
I flunked a test regarding algorithms in python. But that's ok! Question: How to improve from my failure?,234,pvtw51,learnpython,https://www.reddit.com/r/learnpython/comments/pvtw51/i_flunked_a_test_regarding_algorithms_in_python/,34,"Title.

To be fair the exercises were completely out of my League! Which means that I have to step up my game, right?

That been said what books would recommend for learning programming logic and algorithms for a complete beginner?  

Also any advice regarding programming for a analytics engineer job (my focus here) would be nice!",1632663091.0
I have £2000 to spend on training in AI/ML. What would be the best way to spend this budget?,232,mrd5qz,learnpython,https://www.reddit.com/r/learnpython/comments/mrd5qz/i_have_2000_to_spend_on_training_in_aiml_what/,85,"I have a £2000 budget to spend on self-development from my company but I'm having trouble finding AI/ML training that isn't already free or cheap through Coursera etc.

Are there any well-renowned courses, training or summer schools I could look into to make use of this money?",1618488038.0
Need Help Understanding The Basics?,233,hl5sga,learnpython,https://www.reddit.com/r/learnpython/comments/hl5sga/need_help_understanding_the_basics/,134,"Hi, I'm just a fellow learner that is trying to change careers. I've helped a few people to work through some basics before, and have enjoyed it, and would be happy to help someone again! 

I'd be especially happy to help someone who feels they are at a disadvantage, be that age, not having the ability to learn from other sources of material, or whatever that might look like. Someone who is motivated and determined to accomplish a goal is also helpful.

I am only intermediate myself, but can happily help you through loops, function definitions, text manipulation and other basics. I'm definitely going to be learning with you too!

I'll use Repl.it to code together. We don't have to use voice, but if you can do audio with Discord or hangouts, it would be nice to explain as we type rather than writing explanations out.

Please comment before PMing, just so that others can know if someone else is already interested or not. Thanks, and happy learning!

If you would like to help someone yourself, feel free to leave a comment or reply to comments as such.",1593878970.0
.py to .exe,230,revnti,learnpython,https://www.reddit.com/r/learnpython/comments/revnti/py_to_exe/,58,"Hello, I've a question


So, I'm developing a videogame on Python. It will soon be one year since I started this project, and I want to know for when I'll finish my game how to turn it into an app, ready to be played with a simple click. Does anyone have a good way to compile it ?


I'm on Windows 10",1639335636.0
My first problem solved with Python!,234,emodpl,learnpython,https://www.reddit.com/r/learnpython/comments/emodpl/my_first_problem_solved_with_python/,71,"Hello! I just wanted to share this with this subreddit as I'm lurking here and have been following it since I decided to get into programming. I decided to begin with Python and I love it. I'm only about 2-3 weeks in so please bare with me.

I've been following instructions online from a very helpful individual and only just scraped the surface of the very very basics like variables, conditions and loops. And suddenly I felt I could use this limited knowledge to solve a most annoying problem in my life; our (tedious) yearly Christmas present draw!

Here goes:

1. We're 7 grown up individuals who celebrate Christmas together and to limit the stress we decided that each individual only buys one present, to one person.
2. Every name is drawn on an individual piece of paper, put in a bowl, and we take turns drawing a name.
3. You are not allowed to buy to yourself, so if anyone draw themself we have to start over.
4. You are not allowed to buy to the person you bought to previous year, another reason to start over.There is quite a few instances where this fails and has to start over and that's where Python came into play!

And I'm really happy to say that I managed to pull it off! It's super simple logic, and the code sure ain't elegant. And I can't wait to learn more and do this in a more efficient and elegant way. But to hell with that now, I made it and it's Friday and I'm super happy about it!

[Here](https://gist.github.com/gitCayumi/59e9bdd7087c068dc46f945967ff99f4) is a cleaned up version of it (in the first one I had temporary print commands to see where it got messed up).

My next step now is figuring out how to send each draw to the corresponding buyer with a text message.

Thanks for you time, and have a great weekend!

&#x200B;

Edit 2020-01-12  
First of all what an amazing subreddit this is! Thanks for all the encouraging replies.

A lot of the alternative code felt way over my head and lots of it still does. But inpired by all this I had to wrap my head around a few things and eventually I pulled of a  [second version](https://gist.github.com/gitCayumi/b37333a45442b3b20c1423a66da41ef5). It's not like the pure wizardry down below but at least I wrote it and understand it. Thank you all so much!",1578646611.0
Do Python developers typically know how to do a lot of things or are they really good at a couple things?,232,c1q7f1,learnpython,https://www.reddit.com/r/learnpython/comments/c1q7f1/do_python_developers_typically_know_how_to_do_a/,67,"Do people that make their living developing in python typically know how to use a variety of libraries, meaning could they use pandas to conduct some data analysis and present it with Matplotlib for one project then turn around and develop an algorithm and tie it to an API? Or do python developers know how to do a few certain types of projects really well and not worry about the rest?",1560791571.0
Is there something as in-depth and valuable as free code camp for python?,232,atxjjw,learnpython,https://www.reddit.com/r/learnpython/comments/atxjjw/is_there_something_as_indepth_and_valuable_as/,43,"Free Code Camp: [https://www.freecodecamp.org/](https://www.freecodecamp.org/) this place is pretty cool if you follow the main curriculum for HTML/CSS/JAVASCRIPT and go down that route.. but for python, their listings are pretty sub-par.

&#x200B;

For now i've been using Codecademy to get the basics down, then I plan on using codeingame, code wars and other similar sites for improving my skills. But the issue with all this is they don't really teach frameworks like django very well or go into a more 'professional' establishment of the skills.

&#x200B;

Coding bat is decent-- but it doesn't have as much for python as it does for java. ([https://codingbat.com/python](https://codingbat.com/python))

&#x200B;

And I think the best for the late game is 65 Questions ([https://www.algoexpert.io/questions](https://www.algoexpert.io/questions)) but I can't help but feel like theres a pretty big skill gap going from Codecademy to 65 Questions.

&#x200B;

I know that projects are one of the best ways to learn, but I like to have a project alongside training drills. Rn my project is a text based dungeon crawler, but it's pretty complicated and it's going to require a lot of HTML/CSS/Javascript as well, so it's kind of a long term dealio-- so I want some other short term stuff to mix things up a bit.

&#x200B;

Any ideas would be appreciated <3

&#x200B;

Edit: I don't mean tutorials as much. I know that there are some really good python tutorials like [https://docs.python.org/3/tutorial/index.html](https://docs.python.org/3/tutorial/index.html) and [http://anh.cs.luc.edu/handsonPythonTutorial/index.html](http://anh.cs.luc.edu/handsonPythonTutorial/index.html) but I was hoping for something with a repl and more framework integration like Free Code Camp. ",1550941626.0
"Resource: Python Exercises, Practice Problems and Solutions for Beginners",231,8zhqk3,learnpython,https://www.reddit.com/r/learnpython/comments/8zhqk3/resource_python_exercises_practice_problems_and/,20,"Hey guys, I am new to Python and programming in general. I started learning Python with the help of a few great book suggestions (beginners: take a look at the Learning Resources link to the left) and an online course. One thing that was frustrating to me was that I felt that I needed to solve more problems, that the concepts were unclear but there were few/no exercises to evaluate myself with.

Today I found this: [Python Exercises, Practice, Solution | w3resource](https://www.w3resource.com/python-exercises/) 

This is exactly what I was looking for. I think this will be very helpful for beginners like me, particularly in cases where you don't have a classroom/mentor to discuss problems with. Sorry if this is already covered in Learning Resources or any sticky threads.",1531798249.0
Generator functions... WOW.,232,ycydr6,learnpython,https://www.reddit.com/r/learnpython/comments/ycydr6/generator_functions_wow/,84,"I just learned about them. There's so much to rewrite now... I'm filled with an odd combination of excitement and dread. I've been a developer for almost 15 years on and off, but only have a couple years experience with Python and have always been a solo dev with Python (not much exposure to best practices).

It's so painful looking back at old code you've written (especially if it's currently in production, which mine is) and realizing how many things could be improved. It's a constant source of distraction as I'm trying to complete what should be simple tasks.

Oh well... Learned something new today! Generator functions are worth looking up if you're not familiar with them. Will save you a looooooootta nested for loops.",1666681615.0
What are some super common beginner mistakes?,234,u8sh0v,learnpython,https://www.reddit.com/r/learnpython/comments/u8sh0v/what_are_some_super_common_beginner_mistakes/,164,Just want to make sure I’m in the clear!,1650560997.0
Python projects for beginner to intermediate level,228,ttmpij,learnpython,https://www.reddit.com/r/learnpython/comments/ttmpij/python_projects_for_beginner_to_intermediate_level/,26,Hi guys. I recently finished a Udemy python course and I wanted to try building some projects as the next step in my progression. Can anyone give me some good beginner to intermediate level project ideas ?,1648805685.0
"How relevant is ""Learn Python the Hard Way 3rd edition"" in 2022?",232,rtj1hz,learnpython,https://www.reddit.com/r/learnpython/comments/rtj1hz/how_relevant_is_learn_python_the_hard_way_3rd/,82,"At the start he asks you to memorize a list of command prompts and, if I'm not mistaken, we will be learning the python 2 version instead of 3? I'm just curious how this book has aged? (Looks like it was published in 2013?) Are these things still relevant in 2022? Is it still a good resource for learning python? Forgive my ignorance, I've only recently delved into this world.",1641042218.0
What counts as plagiarism?,230,ihysn0,learnpython,https://www.reddit.com/r/learnpython/comments/ihysn0/what_counts_as_plagiarism/,71,"I’m trying to make a game with pygame and following basic YouTube tutorials in order to learn the various components. 

I want to add it to my resume, and potential employers will see the code on github. 

If I use the same kind of while loop, or commands, or functions they use in the tutorial to set up the game, is that plagiarism? What if I use them for a different purpose? How to avoid plagiarizing any code?",1598581470.0
Free alternatives to codeacademy that offer exercises to apply the things you have learned ?,231,cy5700,learnpython,https://www.reddit.com/r/learnpython/comments/cy5700/free_alternatives_to_codeacademy_that_offer/,42,"Since codeadamey is subscription based and free users can't access the python tutorials,i am looking for sites where i can apply the basics i've learnt",1567309124.0
"What are some things people who ""know python"" should be able to do?",230,8xfdih,learnpython,https://www.reddit.com/r/learnpython/comments/8xfdih/what_are_some_things_people_who_know_python/,86,"I'm a beginner, so please forgive my ignorance. I've been learning Python for a couple of weeks and while I haven't exactly mastered the basics I've been moving onto using other modules like NumPy and pandas to play around with data. But in general, there just seems to be so many different disciplines regarding programming. 

So people who know python very well, what do you do with it? What are some things python pros should be able to do? What do the pros have in common? ",1531165504.0
Today I learned the hard way why venv are useful,229,1aw2974,learnpython,https://www.reddit.com/r/learnpython/comments/1aw2974/today_i_learned_the_hard_way_why_venv_are_useful/,56,"This morning at work my boss asks me to look into automating password changes for our Tableau workbooks and data sources. Cool. Quick Google search tells me that Tableau has a package available for their API. Clickity click, it’s installed and I start fiddling with it. 

Bit later my boss asks me to look into a script we have deployed cause and end user says it’s not function correctly. I load it up and fire up the debugger and my terminal lights up in red with trace back errors galore. Cannot enumerate package, blah blah blah. 

Panik

Spend the next hour or so trying to figure out wtf is wrong. Come to find out that when I installed the Tableau package, it requires a specific version of the urllib3 library and downgraded what I had installed. The script i was attempting to debug uses the Requests library with a version dependency with the urllib3 library which was now broken. 

Had to reinstall quite a few libraries to sort it all out but got it all working again. Immediately setup venv’s for everything. 

Don’t be like me",1708487428.0
Is it possible to extract data from a word doc/excel spreadsheet to fill out a web form?,228,igvdwy,learnpython,https://www.reddit.com/r/learnpython/comments/igvdwy/is_it_possible_to_extract_data_from_a_word/,37,"Hi all. I recently just found out about python (sorry, I live under a rock!) and I've seen it automate some really cool things but I don't really know the extent of its capabilities.

&#x200B;

As the title states, I was wondering whether it is possible to extract data from a word/excel to fill out several short online forms? I'm currently volunteering for a organisation that requires me to write down notes whilst talking to service users. The notes + names of each service user have to be entered into their system via individual online forms after each session. Call me lazy but I find it quite tiresome to constantly tab out and copy + paste things from my word document to fill out the relevant info several times a day, especially since i'm not tech savvy at all so it can end up taking a while!

&#x200B;

If this is possible, could you guys advise me as to how I could do this? I would like to learn how to write a script and maybe even share it with other volunteers to make their lives easier!",1598432090.0
What does a basic Python portfolio look like?,226,ae5znb,learnpython,https://www.reddit.com/r/learnpython/comments/ae5znb/what_does_a_basic_python_portfolio_look_like/,42,"I want a job as a data analyst/work in bioinformatics so I want to list Python as a skill on my resume, so I'm currently building a portfolio. What does a (entry-level) portfolio look like? What makes a good portfolio?  What can I do specifically to prove I ""know"" python. 

At the moment all I have are a few very simple web-scraping/dataframe scripts using pandas, bs4, numpy, linux etc. And a pretty decent grasp of the basics. I definitely need more practice, but I don't have much of a direction. ",1547033515.0
How to Make a Neural Network - Intro to Deep Learning,229,5p7mnd,learnpython,https://www.reddit.com/r/learnpython/comments/5p7mnd/how_to_make_a_neural_network_intro_to_deep/,12,"Hey guys,

I just made what i consider to be my magnum opus (greatest work). This video will teach you how to build your own neural network from scratch in Python, and we'll discuss the implications of neural nets extensively. I hope you find it useful!

https://youtu.be/p69khggr1Jo",1484957491.0
I'm doing 100+ projects in Python to learn the language. Thought someone else might want to do the same.,229,1huuqk,learnpython,https://www.reddit.com/r/learnpython/comments/1huuqk/im_doing_100_projects_in_python_to_learn_the/,49,"Before anything else, here's the repo: https://github.com/thekarangoel/Projects

**Note**: If you fork this repo to solve these projects, please remove all my code, and start from scratch; you'll benefit a lot. Do *not* send pull requests. Please.

Trying to complete all projects from http://www.dreamincode.net/forums/topic/78802-martyr2s-mega-project-ideas-list/ except the Games in **Python** only. They will not necessarily in the order posted. I may not be able to complete all of them. My method of solving them may not be the best.

---------

Just thought I'd let everyone know about this repo. I'll try to do all these projects (100+) during the summer. If you want to get started with python (or any other language), fork repo and get started!

------------

EDIT: If you find this useful, please star the repo and maybe follow me on GH? :D",1373280192.0
"What is the meaning of ""python is a script based language""? ",230,1f5rbza,learnpython,https://www.reddit.com/r/learnpython/comments/1f5rbza/what_is_the_meaning_of_python_is_a_script_based/,164,"I was talking to a classmate in one of my master's classes about my personal journey with Python. She mentioned something like, ""Python is not worth learning because it is a script-based language. You can learn another language instead."" What does that mean exactly?",1725121838.0
"Why, if __name__==“__main__”:",229,v0gyzm,learnpython,https://www.reddit.com/r/learnpython/comments/v0gyzm/why_if_name_main/,59,"Ive seen a lot of code where this is used with a main() function, and i was wondering where is this applied? Ive seen many tutorials and every code video ive seen i ve rarely seen it… what exactly is its use?

Edit: Thank you all so much for your help i love how accepting this community is!",1653848103.0
I Wrote A Fully Automated Reddit To YouTube TTS Bot,227,etfni6,learnpython,https://www.reddit.com/r/learnpython/comments/etfni6/i_wrote_a_fully_automated_reddit_to_youtube_tts/,50,"Over the Chrismas break, I set myself the task of completing my first full python project. The project being a TTS bot, but this quickly started to become a much bigger project. Now I have a bot that reads AskReddit submissions and uploads a TTS video to YouTube. All of this is hosted on a Microsoft Azure VM that I don't interact with since I made the program live earlier this month. This is my first full python project since I started to learn the language back in June last year.

The bot is using a number of different features;

* Pillow for image processing (screenshots/thumbnail processing)
* Google TTS for reading the text of the comment on the submission
* Selenium for getting the information from Reddit and taking screenshots
* Textblob for picking a noun from the title
* PRAW for getting the URL of a random Hot submission and the number of gildings a post has
* YouTube API for uploading video/thumbnail
* Microsoft Azure for a hosted VM

Current idea I'm playing with is to switch to a different TTS service and use WaveNet TTS for a more natural-sounding voice. 

If anyone has any suggestions on what to add or whats me to post a full break down on how it works let me know. All coded with Python 3.8.

Videos can be found [here](https://www.youtube.com/channel/UCbZPwSOkDShOjBKeZADMH3w/featured) if anyone is interested.",1579895847.0
Connecting Python and Google Sheets,226,noi1q3,learnpython,https://www.reddit.com/r/learnpython/comments/noi1q3/connecting_python_and_google_sheets/,19,"I got a question and even with the search on Reddit, Google, YouTube I can't find what I'm looking for.

Let me explain: 

I'd like to connect my python dataframes and scraping them with Google Sheets.
How is the best way to do so? 
I need the python program running 24/7, should I do create some sort of server?

Thanks in advance for your help

31/05: As stated in the comment, a daily scheduled refresh can do the job",1622401565.0
"[Rant] Is it just me or is there more and more answers being provided to new users in ""golf scripting"" format instead of readability format?",228,k0xea0,learnpython,https://www.reddit.com/r/learnpython/comments/k0xea0/rant_is_it_just_me_or_is_there_more_and_more/,78,"TL;DR at the bottom.

What I mean by golf scripting is using the least amount of source code towards a task, honestly this is not even a good idea to throw that to new users.

1. they would be given the idea, less code == optimized program.
2. could be ""intimidating"" for new programmers, and discourage them.
3. its annoying to read, understand, and will just annoy future you.
4. Just because you, an experienced user, can read it, doesn't mean new programmers can.

Don't get me wrong, there are times it can be perfectly fine to use on simple things like this

    fixed_len_nested_list = [[x for x in range(5)] for i in range(3)]
    Results:
    [[0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4]]

\^ this is perfectly fine to do, you generate 3 list inside of a list, and each nested list has length of 5

    pages = [3,2,5,6]
    varied_len_nested_list = [[x for x in range(row_len[i])] for i in range(len(pages))]
    Result:
    [[0, 1, 2], [0, 1], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4, 5]]

\^ this generates a varied length nest list based on value at x index, this is probably as far as I would go, I'm kind of pushing readability (for a new user), and then do it differently to make it more readable.

As I look through threads, and people's answers I see one like this, for example.

    print('within range' if all([all([lst[i * 2] < x, lst[i * 2 + 1] < x]) for i, x
                              in enumerate(range(5, 25, 5))]) and total < 120
          else 'not within range')

a whole **if/else statement**, **all()**, and **enumerate()**. Yes, I understand what is going on inside this print function, **does not mean a new programmer will understand**. The problem is, if a new programmer think their code should be looking like this, there is a good chance with all of those square brackets, and open brackets, you can easily not close one, and a new user trying to figure out which one needs to be closed will just cause annoyance, which will cause a misleading error output

        print('within range' if all([all([lst[i * 2 < x, lst[i * 2 + 1] < x]) for i, x
                                                                            ^
    SyntaxError: closing parenthesis ')' does not match opening parenthesis '['

User will think the \^ is the area of the problem

    lst[i * 2 + 1] < x]) for i, x
                       ^
    SyntaxError: closing parenthesis ')' does not match opening parenthesis '['

Now new programmer is spending a frustrating, not needed 10 minutes to an hour figuring out the actual problem, come to /r/learnpython for help, we will gladly help them, and within a minute, their issue is resolved.

Sorry I tried to keep it short, I just needed to rant about this. Also I am completely aware not every users here is doing this, they're users that are helping provide readable easy to understand, elegant code, for new programmers. **No one is being called out here.**

&#x200B;

**TL;DR:** Seeing ""Code golf"" answers being posted more often for new programmers asking for help, giving new programmers wrong idea on ""good"" code, I am also aware not everyone is doing this, either, I am not calling anyone out.",1606327886.0
My first actual project outside of learning!,229,i9ebf0,learnpython,https://www.reddit.com/r/learnpython/comments/i9ebf0/my_first_actual_project_outside_of_learning/,68,"**EDIT**: Here is a link to see the code itself. By no means is it complex or something anyone in this group can't do, but it was requested enough that I want to post it here rather than share the link 20 times. Thanks for all the feedback by the way!

Link: https://github.com/KevinStillman/BatteryTest


TL:DR >>> I created a time tracker/logger using my basic python knowledge to test how long my new 2011 MacBook Air’s battery would last and I feel great to finally use python to create something outside of education. 

~~

It’s such a great feeling to finally be able to use python to do something outside of an instructed lesson or school work. Well today, I finally did it! 

I have received an old MacBook Air from my girlfriend because she just bought a new one, and she was saying the battery life was terrible on it. I didn’t see that to be the case, but I didn’t really get too much of a chance to pay attention. I decided I’d see exactly how long the battery will last. 

I created a “time tracker” (essentially a stopwatch) and once every second I have it rewrite a line in a text file with the elapsed time “H:x M:x S:x” so that when the laptop dies, all I have to do is turn it back on, open that text file, and it will say the hours minutes and second in the format above of how long the battery lasted! 

I opened some programs: PyCharm, IntelliJ Idea, Brave, Terminal, and iTunes because they’re what I usually have open, and I set the power options to never sleep. Going to use the data I receive to determine whether I will buy a new battery for it or not. 


Anyway, thanks for reading. I hope this inspires you other beginners to create something for yourself outside of just projects from your learning resources, and feel free to tell me about them!",1597374773.0
"Python 3 tutor, still here",225,6abjvz,learnpython,https://www.reddit.com/r/learnpython/comments/6abjvz/python_3_tutor_still_here/,31,"Hello **r/learnpython**!

 
I posted a while ago but I'm going to try this again.

 
Lately I have too much free time on my hands, and I started tutoring people on Python 3 a couple of weeks ago.

 
It has been a very rewarding experience, and I'm up for more.

 
I offer my service as a Python tutor **for free**. I'm doing it because I find it rewarding, and because I love Python.

 
During last week I came up a few rules for tutoring:
 

* All lessons will happen in a Slack I have opened for this purpose
 

* Lessons are **individual**, and since it gets difficult to follow several people at once, *I book in time with tutorees*, so to be able to focus 100% on **your** lesson
 

* The tutoring is **about the language itself** mostly. We'll touch both standard library and 3rd party libraries if so wished
 

* I welcome tutorees of level beginner to intermediate, although I am not too strict about that
 

* I offer my lessons in English, Swedish and Italian 
 

* I live in UTC+2 and actively tutor 10am - 6pm Monday to Friday (with exceptions)

 
I am going to do this as long as I have enough free time to dedicate to this.

EDIT:

Offer is still opened! It starts to be more people now but I still have free spots, and I had the confirmation today that I'll be able to do this all 7 weeks out. So don't be shy and join [my slack](https://python-tutoring.slack.com/shared_invite/MTgxMzcxMTA2MTk2LTE0OTQ0MDc4MTEtMjMwOTZiNjJlNg)!!!

BTW thanks everybody for the good response to this :)",1494405224.0
"MITx 6.00.1x Intro to CS and Python Starts Today, Anyone wants buddy up?",227,bx0ko0,learnpython,https://www.reddit.com/r/learnpython/comments/bx0ko0/mitx_6001x_intro_to_cs_and_python_starts_today/,112,"I've done many intro to python online courses/ tutorials but never quite finish them. It's always ""I don't have time right now to finish it"" type of excuse.  But I've had enough and time I'm fully committed to completing the [MITx course](https://www.edx.org/course/introduction-to-computer-science-and-programming-using-python-2) (it starts today) and was wondering if anyone else here is doing the same course and would like to buddy up and support each other?

&#x200B;

EDIT: wow didn't expect this type of reaction! So nice to see everyone coming together!

 u/yuGnaitpygE was kind enough to create a [Discord Server](https://discord.gg/h4WdgKe) (Thank you!)",1559726471.0
Do you have any functions you typically carry with you between projects? What are some of your favorite utility functions? Let's share!,225,9v1tor,learnpython,https://www.reddit.com/r/learnpython/comments/9v1tor/do_you_have_any_functions_you_typically_carry/,48,"I'll start with a bunch of mine. Mostly convenience functions that I use often to solve very specific and often small or trivial tasks. Most of these have more fully thought out implementations in pypi, but not always worth the requirement.

* **Bunch** \- Just adds a bit of stylistic convenience when using dicts a lot.
* **colors()** \- Adds a bit of color to console print statements or logging. Often really helps readability.
* **rget()** \- When dealing with large data trees containing dicts, lists, etc.. this can lookup a value without needing to work at digging deep into the structure, just specify the string path. Very useful when dealing with JSON APIs.
* **threadded()** \- I often need a quick and dirty way to call two APIs at the same time to speed things up. This is quick wrapper around some basic threadpool functionality.

```Python

    class Bunch(dict):
        """""" Works like a dict, but lets you use dot.notation to get or set values rather
            than the regular['notation']. Simply stylistic convenience when you are dealing
            with a lot of dicts.
            Example:
              foo = Bunch()
              foo['bar'] = 123
              foo.baz = 456
              print(foo.bar)
              print(foo['baz'])
        """"""
        def __getattr__(self, item):
            try:
                return self.__getitem__(item)
            except KeyError:
                return None
    
        def __setattr__(self, item, value):
            return self.__setitem__(item, value)
    
    
    COLORS = {'blue':34, 'cyan':36, 'green':32, 'grey':30,
        'magenta':35, 'red':31, 'white':37, 'yellow':33}
    RESET = '\033[0m'
    
    def color(text, color=None):
        """""" Colorize text for console output or logging {red,
            green, yellow, blue, magenta, cyan, white}.
        """"""
        if os.getenv('ANSI_COLORS_DISABLED') is None:
            fmt_str = '\033[%dm%s'
            if color is not None:
                text = fmt_str % (COLORS[color], text)
            text += RESET
        return text
    
    
    def lazyproperty(func):
        """""" Decorator that makes a property lazy-evaluated.
            http://stevenloria.com/lazy-evaluated-properties-in-python/
        """"""
        attr_name = '_lazy_%s' % func.__name__
        @property  # noqa
        def wrapper(self):
            if not hasattr(self, attr_name):
                setattr(self, attr_name, func(self))
            return getattr(self, attr_name)
        return wrapper
    
    
    def rget(obj, attrstr, default=None, delim='.'):
        """""" Similar to Django's template variable lookup. Gets a variable from a nested
            structure containing dicts, lists, tuples and objects.
            Example: rget(movies, 'movies.Cars.directors.0.name')
        """"""
        try:
            parts = attrstr.split(delim, 1)
            attr = parts[0]
            attrstr = parts[1] if len(parts) == 2 else None
            if isinstance(obj, dict): value = obj[attr]
            elif isinstance(obj, list): value = obj[int(attr)]
            elif isinstance(obj, tuple): value = obj[int(attr)]
            elif isinstance(obj, object): value = getattr(obj, attr)
            if attrstr: return rget(value, attrstr, default, delim)
            return value
        except Exception:
            return default
    
    
    def threaded(numthreads=10, **kwargs):
        """""" Call all resultkey -> [callback, *args] pairs in parallel.
            Results are returned as a dictionary with kwarg key as the keys.
            Example: results = threaded(
                news=[_get_top_reddit_posts, praw, 'news'],
                worldnews=[_get_top_reddit_posts, praw, 'worldnews'],
                technology=[_get_top_reddit_posts, praw, 'technology'],
            )
            Above would result in a dict with keys news, worldnews, and technology
            containing the results of _get_top_reddit_posts(*args).
        """"""
        jobs = queue.Queue()
        threads, results = [], {}
        numthreads = min(numthreads, len(kwargs))
        for key, meta in kwargs.items():
            results[key] = None
            jobs.put([key] + meta)
        for _ in range(numthreads):
            threads.append(Thread(target=_threadwrap, args=[jobs, results]))
            threads[-1].setDaemon(True)
            threads[-1].start()
        for thread in threads:
            thread.join()
        return results
    
    def _threadwrap(jobs, results):
        try:
            while True:
                key, callback, *args = jobs.get_nowait()
                results[key] = callback(*args)
        except queue.Empty:
            pass

```",1541614534.0
How to use Python instead of Excel,224,8scoy4,learnpython,https://www.reddit.com/r/learnpython/comments/8scoy4/how_to_use_python_instead_of_excel/,64,"I use Excel a lot for my job: merging tables of data, creating pivot tables, running calculations, etc. I'm really good with Excel but I'd like to use a different tool for a few reasons. First, Excel doesn't handle lots of data well. The screen gets filled up with columns, formulas get miscopied when there are hundreds or thousands of rows, formatting cells from string to number to date is a pain and always gets messed up. It's also cumbersome to repeat a task in Excel.

I use Python for scripting personal projects and love it but am new to using it in the way I intend as described above. Do any of you have experience with using Python as a replacement for Excel? I was going to start with pandas, a text editor, and IDLE and see where I go from there, but any insight would help make this transition much easier!",1529443965.0
I’m taking the Harvard CS50 course (free) to learn Python,227,17wd9tw,learnpython,https://www.reddit.com/r/learnpython/comments/17wd9tw/im_taking_the_harvard_cs50_course_free_to_learn/,63,"Would you guys say it’s a decent way to start learning or what would else would you guys recommend, a friend told me he learned coding through reading books but that seems too old school lol, anyways any advice would work thanks.",1700106622.0
Use Python to Level Up Pokemon?,226,vypki3,learnpython,https://www.reddit.com/r/learnpython/comments/vypki3/use_python_to_level_up_pokemon/,53,"Python novice, but Jhoto Champion 😉 with a semi-serious question.

Do you think there's a way to control the Pokemon ROM on my computer using Python?

The idea would be to write blocks of code to guide my avatar to the grass, press ""a"" through battles, then guide my avatar to the Poke center. (Rinse and repeat.)

(Looking to expedite the training process and get right to the trainer battles. 😈)

So far the only thing I've seen is to use something like AutoIt to control the UI, but everyone seems to be foreboding in the same breath they bring up that kind of solution.

Is there an API for the computer ROMs?",1657782057.0
What’s the coolest Python trick you know?,226,k4fzy8,learnpython,https://www.reddit.com/r/learnpython/comments/k4fzy8/whats_the_coolest_python_trick_you_know/,163,From Python One-Liners: “a trick is a way of accomplishing a task in a SURPRISINGLY fast or easy manner.”,1606806592.0
Is it possible to create such GUIs in Python?,229,ec6ckz,learnpython,https://www.reddit.com/r/learnpython/comments/ec6ckz/is_it_possible_to_create_such_guis_in_python/,54,"Hello,

So, I started learning Python, but a I found a problem that is quite irritating me. As a person who likes graphics design, I find it frustrating to program without making some cool animated GUIs.

The first language I've learned was Java, Python would be the second, and I remember I could make pretty impressive GUIs after learning JavaFX for about 20 minutes.

I've looked into libraries such as PyQt5, Tkinter, WxPython, Kivy and PyForms, but none of these seem much visually appealing; they seem to have this ""90s"" look to them.

I wondered whether it's possible to create a GUI in Python that looks for example like this: [FL Studio GUI example](http://www.flstudioplugins.com/wp-content/uploads/2012/03/Additive_subtractive_Harmor_flstudioplugins.com_.jpg).

Is it possible to create such GUIs using Python? If not, could one combine different languages together to achieve such result?

Feeling quite helpless as UI/UX design is something really important for me.

Does anyone have any ideas, or is it just a forlorn dream?",1576636423.0
Sunsetting Python 2,223,d1nu4i,learnpython,https://www.reddit.com/r/learnpython/comments/d1nu4i/sunsetting_python_2/,31,"[ttps://www.python.org/doc/sunset-python-2/](https://www.python.org/doc/sunset-python-2/) 

&#x200B;

From the post:

We are volunteers who make and take care of the Python programming language. We have decided that January 1, 2020, will be the day that we sunset Python 2. That means that we will not improve it anymore after that day, even if someone finds a security problem in it. You should upgrade to Python 3 as soon as you can.",1568015525.0
One of the most informative YouTube videos on Python - Ned Batchelder: Getting Started Testing PyCon 2014,224,b0nppl,learnpython,https://www.reddit.com/r/learnpython/comments/b0nppl/one_of_the_most_informative_youtube_videos_on/,10,"I am about almost 6 months into learning Python.  I have been teaching myself with the help of the book Python Crash Course, YouTube, StackOverflow, various sites online when Googling and of course Reddit and this r/learnpython sub.  This sub has some great content.   Reddit in general is a far cry from many of other social media sites, people here are generally helpful and nice.

&#x200B;

I have been a SQL/SSIS developer for many years but recently changed jobs.  My new gig allows me time to self study.  I have been poking around on Youtube and have watched a number of videos from previous PyCons.   PyCon is the yearly Python Conference that takes place.   This year it is in Cleveland, OH as a little side note.  I highly recommend that you poke around these older PyCon videos.  Guido von Rossum did a talk in 2015 that was good.  Also Greg Ward has a couple of videos and they are both good talks.

&#x200B;

Having said all of this...   I am trying to understand Test Driven Development (TDD).   I am eager to implement this into my projects.  In the past my testing comprised of saved t-sql scripts, random queries, manual effort and gut feeling due to knowing the data.   This to me is next level stuff.  This video on writing unit tests and the demo given by Ned Batchdelder is amazing.  One of the most informative, best teaching videos I have seen on Pyton so far.   I feel I need to watch the last half multiple times.  He really gets into some advanced concepts.  I can't imagine working alongside this guy and gaining some of his knowledge and skill.

&#x200B;

[https://www.youtube.com/watch?v=FxSsnHeWQBY&list=WL&index=18&t=0s](https://www.youtube.com/watch?v=FxSsnHeWQBY&list=WL&index=18&t=0s)

&#x200B;

&#x200B;",1552493178.0
Python youtube playlist aiming to get you from novice to expert,226,5zbu0e,learnpython,https://www.reddit.com/r/learnpython/comments/5zbu0e/python_youtube_playlist_aiming_to_get_you_from/,48,"Hi /r/learnpython,

I'm currently organising a free, weekly london meetup where I teach Python. These are the supporting videos. They should grow into the hundreds. Would love some subscribers.

https://www.youtube.com/playlist?list=PLWNmt5gGbNGOcKFu36NWzONLY0YHpBlWs

Edit: today's session: https://www.youtube.com/watch?v=MM8dIjG-6ms",1489494752.0
Why does 4.56 * 100 return 455.99999999999994?,223,vpi6s4,learnpython,https://www.reddit.com/r/learnpython/comments/vpi6s4/why_does_456_100_return_45599999999999994/,73,"While browsing this subreddit the other day, I came across a simple program challenge that takes some money amount as input (such as $4.56), then calculates the number of coins it would take to make up that money amount.

The first step of my solution is to multiply the float money amount by 100, then convert the new value to an integer to remove the decimal.

I was using the Python interpreter to test my workflow, and chose 4.56 as a random test value. In using this value, I noticed multiplying 4.56 by 100 returns 455.99999999999994 instead of 456. Why is that?

EDIT: Went to bed and woke up with several more great answers and resources! I appreciate the explanations, thank you!",1656731539.0
The best IDE for Python?,225,u6l3x7,learnpython,https://www.reddit.com/r/learnpython/comments/u6l3x7/the_best_ide_for_python/,228,What would you recommend for the best IDE to start learning Python?,1650309574.0
Where can you learn all the hidden tips of python?,221,qa28td,learnpython,https://www.reddit.com/r/learnpython/comments/qa28td/where_can_you_learn_all_the_hidden_tips_of_python/,28,I’m talking about things like very useful decorators (@dataclass or @overload just to mention two) or zip and zip_long and things like that,1634488480.0
I keep forgetting I can do this or that in python......,225,o6ysym,learnpython,https://www.reddit.com/r/learnpython/comments/o6ysym/i_keep_forgetting_i_can_do_this_or_that_in_python/,44,"Every time I try to solve these mini python questions I just keep forgetting I can use this function/method, I tried doing small projects to try to get used to things but I find myself always looking back at other people's codes and how they did it. I am not talking about big functions that will take me a while to write, but simple things like 'Oh I can just do this \[x for x in args if x%2==0\] to append even numbers to a new list. How can I overcome this? try to actually memorize this stuff? If there are websites that are good for practicing different methods or like mini questions that help in freshening up your python syntax memory I'd really appreciate it if you could link it.",1624533383.0
Getting a job with Python,225,l9urg4,learnpython,https://www.reddit.com/r/learnpython/comments/l9urg4/getting_a_job_with_python/,37,"Right now, I'm a 20 year old student who is currently in school. I've mainly been teaching and using Python myself for about 3 or so years now. In my time, I've learned a bit of MySQL and even started to teach myself some JavaScript. I have to say, when it comes to the Python fundamentals, I am pretty confident that I can get whatever I need, done. Don't get me wrong, I'm not 100% sure of every little detail, but I am confident in my work when it comes to this language.

My problem is, I'm still not sure if I'm ready. How would I even know when I'm ready? When I browse online just to see some developer jobs, so many requirements are there and of things I've never even heard of. I'm also afraid of seeing some Python code that is extremely advanced, things that I may have never seen before. For example, I've never really worked with numpy or flask before, are those crucial to me getting a job? I'm confident I can learn it if it comes down to it, I just am not sure of myself.

If anyone is a Python developer as a job, is there any advice, or even code that you work on to show, to help me understand what I should anticipate in a real developer work environment?",1612153756.0
"What the heck is ""data oriented programming""?",225,hlsgud,learnpython,https://www.reddit.com/r/learnpython/comments/hlsgud/what_the_heck_is_data_oriented_programming/,35,"I've been programming for a few years, and never have I heard of ""data oriented programming"" until recently on the r/learnprogramming subreddit and this one.

Now I've seen a sort of ""explanation"" of what this programming paradigm is, thrown around a lot, where people usually say ""it's OOP but objects don't interact with each other"". I don't get that. It doesn't get the cut by me because that definition is so vague.

What is the purpose of Data Oriented Programming? Why does it exist, and what makes it better than OOP? Obviously, the first thing that comes to mind is to limit coupling, but still, tight coupling is the result of a bad programmer, not OOP in and of itself.",1593977069.0
Suggestion: A weekly thread for people to give tips or little known knowledge on python.,226,d60pt2,learnpython,https://www.reddit.com/r/learnpython/comments/d60pt2/suggestion_a_weekly_thread_for_people_to_give/,48,"I think people on this subreddit have a huge knowledge so it would benefit other people, if they are beginners or professionals.",1568826032.0
Got my Python software finished. How do I secure it?,220,wegp2m,learnpython,https://www.reddit.com/r/learnpython/comments/wegp2m/got_my_python_software_finished_how_do_i_secure_it/,88,"So I made a huge python tool for a client, created a GUI for it and deployed it to a EXE file with obfuscation. It's working perfectly.

Issue? I want to add licences. So when a user starts the .exe file it asks for a licence key which is validated to a web server and if the reply from the server is good, it decrpyts the code and moves foward. Betwen the code it randomly checks the licence with the server again if it's not OK it doesn't move forward and encrpyts the code again.

I want each licence to have access to only one computer so if two clients use the same licence the program starts but during the random checks if one check was done within 2 minutes from another computer then the request is denied so this way only 1 computer at a time can run the script.

I searched and searched and have found nothing on how to deploy this... Any ideas?",1659458943.0
Any good resources for learning algorithms where the examples are written in Python?,222,nvjobf,learnpython,https://www.reddit.com/r/learnpython/comments/nvjobf/any_good_resources_for_learning_algorithms_where/,27,I don’t want to have to translate another language into Python while also trying to learn algorithms for the first time.,1623201175.0
"I don't understand the syntax of this: ""return['FizzBuzz'[i%-3&-4:i%-5&8^12]or`i`for i in range(1,n+1)]""",222,kb62zm,learnpython,https://www.reddit.com/r/learnpython/comments/kb62zm/i_dont_understand_the_syntax_of_this/,48,"I understand that it's saying ""return 'Fizz' if i is divisible by 3, return 'Buzz' if i is divisible by 5. 

I understand modulo operations. That is: if i % 3 == 0, then i is divisible by 3. 

I don't understand half the syntax in this statement: \[i%-3&-4:i%-5&8\^12\]

What does ""-"" mean?

 ""&"" and ""\^"" are apparently bitwise operators but I don't understand that concept, how it logically fits into this function.  

How can there be a % sign but no statement of the veracity of the modulo relationship with the number 0? Like, one could say ""if 5 % 2 == 1"", that's odd. or ""if 6 % 2 == 0"", that's even. But there needs to be the ""1"" or ""0"" in these statements.",1607704409.0
How do I check if a key is also a value in a dictionary?,226,k8z88v,learnpython,https://www.reddit.com/r/learnpython/comments/k8z88v/how_do_i_check_if_a_key_is_also_a_value_in_a/,37,"For example:

d = {'food': 'pizza', 'liquid': 'pepsi', 'edible': 'food'}

Once it finds the value 'food', the key 'food' is stored in a list.",1607409293.0
Angela Yu's 100 day of coding has left me discouraged,225,uijawu,learnpython,https://www.reddit.com/r/learnpython/comments/uijawu/angela_yus_100_day_of_coding_has_left_me/,165,"I am a complete beginner and I've decided to do Angela Yu's 100 day of code challenge and I've just been defeated man. I'm only on day 5 and I feel like I'm not understanding anything she does and I want to give up..

She'll bring up functions and things alike that she never brought up before and when I can't figure it out without looking briefly at the solution, I just feel like it's not something my brain is hardwired to do. I feel stupid for not thinking outside of the box. 
Like one day for she'll mention that there's a program called choice() but we're not going to use that, and the next day, she's using it to solve the challenge.
Or before she uses a ""for loop"" function she'll make a variable for a integer, and she never mentioned this, it done it before and the only way I know it's an option and because I gave up. I'm assuming programmers have a second sense of creativity because I just end up stuck..

Should I possibly look at other resources as well?
Should I get a understanding of basic functionality before I tackle her lessons??
I really want to learn and I find it fascinating but trying to keep up with her 100 days of coding is telling me I'm not cut out for it.",1651706021.0
My first (useful) Python project on GitHub!,221,qjbk4p,learnpython,https://www.reddit.com/r/learnpython/comments/qjbk4p/my_first_useful_python_project_on_github/,38,"I write a python file that checks whether the latest High-Low spread of a stock from S&P500 companies exceed its average in the last 10 days. I'm an Economics student and recently learn Python, I could never imagine how quickly it becomes amazingly relevant for my study. Hope calling this 'project' is not an overstatement, my excitement is bubbling as I could very well incorporate this in my seminar paper.

[Here's the link to it.](https://github.com/Candide-27/SP500-highlow-tracking) I'm an absolute beginner and thus humble by any constructive criticisms. Also, is there a subreddit where new Github users potentially join projects? Thanks a lot!",1635631008.0
What should I use to create a beautiful GUI with animations?,222,oqnlga,learnpython,https://www.reddit.com/r/learnpython/comments/oqnlga/what_should_i_use_to_create_a_beautiful_gui_with/,29,"I want to create a beautiful modern gui with animations but I do not know if pyqt5 is sufficient for this. Can I use python for animations, do I have to use javascipt? What are phone apps usually made with?

&#x200B;

Edit: Thank you all for the suggestions.",1627123148.0
What does it mean to have -> after a function,220,m4yw9x,learnpython,https://www.reddit.com/r/learnpython/comments/m4yw9x/what_does_it_mean_to_have_after_a_function/,124,"I am following a new tutorial today and they use -> after a function. Like this for ex:

&#x200B;

    def func_name(self) -> None:

What does this mean? how does it work? when do you use it?

&#x200B;

edit, forgot the "":"" at the end",1615741036.0
Portfolio Check,224,lwhxdw,learnpython,https://www.reddit.com/r/learnpython/comments/lwhxdw/portfolio_check/,76,"Hi all,

So I've been learning Python  for just over a year now (stopped for a few months due to life getting in the way) and  I've finally reached a point where I think I'm ready to apply for jobs and have been doing so for a week now. I also feel my portfolio is at a point where it is okay to show. However I currently don't really have a mentor so figured I'd check my work with you guys and see whether I just have to fine tune things or if I still have a long way to go. I'm only going to get better if I get feedback good and bad so here we go: [https://www.idrissilva.com/](https://www.idrissilva.com/)

&#x200B;

Edit: So it seems there are a few people who are interested in what I did to get to this point I figured I've put in a long winded comment [here](https://www.reddit.com/r/learnpython/comments/lwhxdw/portfolio_check/gpk44p6?utm_source=share&utm_medium=web2x&context=3)

Edit\_2: Github repo of the entire [portfolio](https://github.com/idrisimo/Portfolio-public.git) without the authkeys.",1614735152.0
How to completely clean laptop of all things Python ( to start over)?,220,dswiky,learnpython,https://www.reddit.com/r/learnpython/comments/dswiky/how_to_completely_clean_laptop_of_all_things/,61,"Over the years Ive downloaded a bunch of programming things that Ive needed for classes and such. So much that I feel like it all collides with each other. Things like Pycharm, interpreters, downloadin 2.7 and whole bunch of other things. I want a fresh start. Whats the best way to clean my laptop so I can install only what I want, without wiping the whole computer? Thanks",1573126702.0
How do you keep your code readable? Seeking list of best practices,223,dfzd1h,learnpython,https://www.reddit.com/r/learnpython/comments/dfzd1h/how_do_you_keep_your_code_readable_seeking_list/,90,"Whether sharing your code with others or writing a script that you yourself may need to reuse or modify later, writing code that is easy to follow and understand is a virtue. Nothing sucks like opening a messy, comment-free script and having to painstakingly reverse engineer it line-by-line just to understand the signal flow. But writing clean code takes skill, effort, and discipline. So as I learn how to program, I want to make sure I create good habits from the beginning.

How do you - or anyone you know who rocks at coding - keep your code readable? There are obviously no golden rules here, so I'm just curious to know what you consider to be general best practices.",1570720094.0
Are there sites like code wars for learning security / “hacking” / intrusion / anti-intrusion type things?,220,bodzvh,learnpython,https://www.reddit.com/r/learnpython/comments/bodzvh/are_there_sites_like_code_wars_for_learning/,23,"There’s a recurring “capture the flag” event near me that does intro to cyber security events, and I was curious if there’s some sort of online version like code wars

Edit: thank you for all these options! Rather than reply to each of you saying “thank you” I figured I’d say it here. Time to start exploring!",1557807344.0
"As a self-starter, what were some of your coding habits you later realized were ""bad"" and had to be broken?",225,6vwg16,learnpython,https://www.reddit.com/r/learnpython/comments/6vwg16/as_a_selfstarter_what_were_some_of_your_coding/,119,,1503637594.0
I've forgotten how to do a lot of what I've learned so far.,225,12giuug,learnpython,https://www.reddit.com/r/learnpython/comments/12giuug/ive_forgotten_how_to_do_a_lot_of_what_ive_learned/,99,"I am currently doing 100 days of code by Angela Yu on Udemy. It gives you 100 course days with multiple projects per day, along with an hour to two of videos as well.

The first 2 days I could complete in a single day, but as it's gotten harder it takes me longer, with my 50+ hour work week, and just being too busy some days.

On day 5 it had me create a randomized password generator for example, and I was able to solve that by myself. Another example would be a tip calculator it had me create. All of these I was able to solve myself.

Day 6 however, has been teaching me a bout for and while loops, along with how you can use if/else statements in them, and for these projects it had you write code using the while loops to solve obstacles for a little robot.

Day 6 took me about a week to complete because I have been busy and just didn't have time to do it every day. Now I go back to refresh and try solving the password generator, but I don't even know where to start, I've just forgotten what to do.

Edit: I guess to try clarifying, my problem isn't that I'm forgetting functions/keywords, my problem is I don't remember when to implement them",1681045346.0
"I made an app for my company, and now another company is interested in buying/licensing it. How do I do this?",219,qg79vf,learnpython,https://www.reddit.com/r/learnpython/comments/qg79vf/i_made_an_app_for_my_company_and_now_another/,61,"So I work for a company that receives work orders and dispatches someone on their team who lives nearby to the requested location. It covers three states with the ability to be expanded for more. I made a desktop application in Python and Tkinter to facilitate this task. It's not stunning but it works well and the admin uses it every day to help her do her job. Now someone at the company is splitting off to start their own company and is interested in the app I created.

Since creating the app, I've learned PyQt and have some ideas on how to improve and expand it so it's a viable product to sell to anyone in my industry with the same problems. How is this type of thing typically done? Ideally I'd like to set up my app with an easy installer and maybe an activation code. Even better would be making it a subscription service so I could get some passive income in exchange for regular updates and tech support. If anyone could point me in the right direction to get started I would appreciate it.

EDIT: I should mention that I already use PyInstaller to turn the app into an executable so no source code is being handed over.

Also, I appreciate everyone's legal advice but I'm asking more about how to package the program, how to create an activation code system, how to handle downloads and minimize piracy, stuff like that.",1635257497.0
Years of tinkering with Python and I've finally built an app to share. TripAdvisor info and review scraper!,222,i3s1jx,learnpython,https://www.reddit.com/r/learnpython/comments/i3s1jx/years_of_tinkering_with_python_and_ive_finally/,29,"Hello, I've been doing mainly sysadmin stuff as a hobby but been more recently wanted to start properly learning python, and finally created something which I feel I can share!

I've built an app which uses Selenium to scrape each page and then outputs them into a JSON file.

https://github.com/claffin/tripscrape

You can run using virtualenv or Docker.

I'd welcome feedback and suggestions! I want to improve exception handling and add more features as my first port of call.

(I also think I should be using classes but not sure how best to approach them yet, so would welcome advice on that).",1596575884.0
"What is the more ""Pythonic"" way to code this?",218,ffuox0,learnpython,https://www.reddit.com/r/learnpython/comments/ffuox0/what_is_the_more_pythonic_way_to_code_this/,54,"Hi,

I am brand new into the world of python and programming in general... I was wondering if somebody could help me with this question:

I've got a class Player that will have an inventory (it's for a small game project I'm doing to learn python).

I would have something like :

    class Player:
    def __init__(self):
        self.inventory=[]
        self.inventorySize=1

    def checkSpaceLeftInventory(self):
        if len(self.inventory) >= int(self.inventorySize):
            print(""You're going overboard kiddo! no more space left in your bag!"")
            return False
        else:
            print(""that's fine you still have {} space left in your bag"".format(self.inventorySize-len(self.inventory)))
            return True

    def addItemToInventory(self,item):
        if self.checkSpaceLeftInventory():
            self.inventory.append(item)
            print(""Just added this new item to your inventory: {}"".format(item))
        else:
            print(""Can't add a new item to your inventory. You're full!"")

I was wondering if that make sense to define some functions like this in the class itself or if it's better to create a separate class, let's say ""utilities"" or something and create the function there, doing something like

utilities.addItemToInventory(Player1,item)

And use the Player1.inventory.... well, you get it..

As you see I'm a noob and try to learn how to do things the correct way if I can. It's always a trouble for me to understand if I need to define things in the class itself or need to access from outside and keep the class clean.

Thank you for your time and advice!",1583760709.0
"Looking for a well written, well documented Python project",222,e16j2x,learnpython,https://www.reddit.com/r/learnpython/comments/e16j2x/looking_for_a_well_written_well_documented_python/,32,"I've been working on a Python project and all is going well.  I'd like some suggestions on well written, well documented projects that I could look over for source code file/directory layout so I can learn proper ways to make my project look and run like a real project.  Thanks in advance.",1574636711.0
What are your favorite free public API(Free ones)?,220,bfz8l2,learnpython,https://www.reddit.com/r/learnpython/comments/bfz8l2/what_are_your_favorite_free_public_apifree_ones/,51,"Hello community,

I'm trying to learn API and how they work. As a starting point, I wrote few programs to work with IMDB API and google telegram API. It seemed interesting how we can query data in JSON format and work with our programs. Looking to build some interesting personal projects while learning more about APIs.

Just wondering what are your favourite public APIs and the cool programs you wrote in Python. Just looking for suggestions. 

Thanks",1555918061.0
Step by Step content to learn Python programming from Scratch,221,9ps98k,learnpython,https://www.reddit.com/r/learnpython/comments/9ps98k/step_by_step_content_to_learn_python_programming/,23,"Hi Guys,

Checkout the free video series with Github repo, for getting started with Python programming. Those who already know Python can ignore the post :) But I think it is worthwhile to share this for those who want to get started.

**Video Series Link -** [https://www.edyoda.com/resources/videolisting/98/](https://www.edyoda.com/resources/videolisting/98/)

**Github Link -** [https://github.com/zekelabs/Python-code-](https://github.com/zekelabs/Python-code-)

**About edYoda -** [**www.edyoda.com**](http://www.edyoda.com/)

We are a bunch of geeky dreamers trying to provide free structured quality Course Content. We believe in democratizing education and will be soon out with super-awesome upgrade :)",1540021482.0
Just created my first ever program as a complete beginner.,220,1ez9juz,learnpython,https://www.reddit.com/r/learnpython/comments/1ez9juz/just_created_my_first_ever_program_as_a_complete/,89,"    import random
    options = [""rock"", ""paper"", ""scissors""]
    p_score = 0
    c_score = 0
    to_win = 3
    Game_over = False
    wins = [(""rock"", ""scissors""), (""paper"", ""rock""), (""scissors"", ""paper"")]
    
    print(""WELCOME TO ROCK, PAPER, SCISSORS!"")
    print(""Instructions:"")
    print(""Choose between Rock, Paper or Scissors. Alternatively you can use 1, 2, 3 for Rock, paper and scissors respectively."")
    print(""First to THREE wins"")
    print(""Press 'q' to quit"")
    print(""Press 's' to check score"")
    print(""Press 'p' to start"")
    start = input("""")
    if start.lower() == ""p"":
        Game_over = False
    while not Game_over:
        if p_score < to_win or c_score < to_win:
            print("""")
            print("""")
            print(""Rock, Paper, Scissors?"")
            print(""    "")
            p_choice = input("""").lower()
            if p_choice not in options:
                if p_choice == ""q"":
                    print(""Quitting the game"")
                    print(""Computer: "" + str(c_score))
                    print(""Player: "" + str(p_score))
                    Game_over = True
                    continue
                elif p_choice == ""s"":
                    print(""Computer: "" + str(c_score))
                    print(""Player: "" + str(p_score))
                    continue
                else:
                    print(""Invalid input. Try again and check for spelling errors."")
                    continue
            c_choice = random.choice(options)
            print(c_choice)
    
            if p_choice == c_choice:
                print(""    "")
                print(""It's draw"")
                print(""    "")
                print(""Computer: "" + str(c_score))
                print(""Player: "" + str(p_score))
            elif (str(p_choice), str(c_choice)) in wins:
                print(""    "")
                print(p_choice + "" beats "" + c_choice)
                print(""    "")
                p_score += 1
                if p_score == to_win:
                    print(""You win!"")
                    print(""Computer: "" + str(c_score))
                    print(""Player: "" + str(p_score))
                    Game_over = True
                else:
                    print(""Computer: "" + str(c_score))
                    print(""Player: "" + str(p_score))
            elif (str(c_choice), str(p_choice)) in wins:
                print(""    "")
                print(c_choice + "" beats "" + p_choice)
                print(""    "")
                c_score += 1
                if c_score == to_win:
                    print(""You Lose!"")
                    print(""Computer: "" + str(c_score))
                    print(""Player: "" + str(p_score))
                    Game_over = True
                else:
                    print(""Computer: "" + str(c_score))
                    print(""Player: "" + str(p_score))
    

So I started learning python last week and decided to build something from scratch and this is what I made. Was there any other way to make this in fewer lines? Should I do something more with it? Any feedback will be great!

Edit: I'm sorry about the 1,2,3 part. I put in the instructions as an afterthought and forgot that i didn't account for those. I had planned to add that when I started but then it slipped my mind.",1724409777.0
What do Python developers do?,219,1bjdvhn,learnpython,https://www.reddit.com/r/learnpython/comments/1bjdvhn/what_do_python_developers_do/,181,"Except for developing...well...web apps. Is that the only thing Python devs are hired for?

See I really love Python and I really wanna build ""amazing"" things. I don't have anything against web backends but thinking that I'm learning Python only to write server-side code in Flask/Django/Whatever framework makes me kinda sad.

Whenever someones asks whether XYZ can be built in Python or not, the answer goes like this:

""Yes, but Python isn't suited for that""

So basically, I can create desktop software, and mobile apps in Python too but at the end of the day, not only will they be at a lower level than the native language apps (say, Kotlin for Android), but there's no scope for being hired for that either, right?

Sorry for the rant. But I just wanted to know if developing Python web app backend is the only viable Python developer way? Can't Python be used to create full-fledged software?

(Note: AI/ML/DS are out of the question here. I'm only talking about development side of things)

Thanks.

Edit: Thanks for all the awesome responses you guys! I feel much better now in my learning. Had some misinformation and this thread cleared that up.",1710942523.0
Learn python for a 13 year old,216,124ln5r,learnpython,https://www.reddit.com/r/learnpython/comments/124ln5r/learn_python_for_a_13_year_old/,106,"Hi, as the title stated, I am 13 years old and want to learn python. I have a good amount of knowledge and experience with basic python up until classes. However,I am now stuck as it is getting to complicated to understand. I have tried 30 days of python on github and automate the boring stuff but as I stated were too complicated for me to understand. Python and coding is just a hobby as I want to learn some fundamentals before delving into harder programming languages like java script or c++. Preferably, I would like the course/roadmap/resource to be free and for me 2 just scrolls and read/watch(and code) for about 30 minutes a day. Thank you for reading this and have a nice day:)

Edit;Thank you for all the advice! I decided to do some projects in my free time and will maybe try out cs50 and other recommended resources.",1680002423.0
Am I just too dumb for this?,221,qttc0w,learnpython,https://www.reddit.com/r/learnpython/comments/qttc0w/am_i_just_too_dumb_for_this/,102,"Been practicing for a couple of months and still can't even make a simple hangman game on my own, currently taking the 100 days course, but I struggle on anything in the intermate and even the beginner projects. I don't really know where to go back to cause I know what basic stuff like if statements and functions work, but can't do shit whenever I try to do something for complicated then print(""Hello world""). If anyone knows where I should go back, to understand what to do that be great. 

I'd like to take some college courses for beginners in summer, but It feels more and more that I shouldn't cause I'd just fail anyway. 

Just really demotivated right now.",1636907163.0
Is 16 a good age to learn python?,220,q7umih,learnpython,https://www.reddit.com/r/learnpython/comments/q7umih/is_16_a_good_age_to_learn_python/,212,I wanna get into it. I know it has a lot of benefits but sometimes I feel discouraged because when it comes to other subjects I’m really far behind.,1634195851.0
Python Beginner Projects and how to step out of IDEs,219,picokz,learnpython,https://www.reddit.com/r/learnpython/comments/picokz/python_beginner_projects_and_how_to_step_out_of/,49,"materialistic worry wine smart voiceless paint deer sheet zesty grandfather

 *This post was mass deleted and anonymized with [Redact](https://redact.dev)*",1630846848.0
Linux why Python,220,jib8me,learnpython,https://www.reddit.com/r/learnpython/comments/jib8me/linux_why_python/,92,"Hi,

I was just wondering why Linux has so many applications written in Python instead of for example another OpenSource Programming Language like Java. Apparently Python was already popular in the early days of Linux.

Is there a specific reason for this?",1603703026.0
"An appreciation for this subreddit, and if you are struggling, don't give up.",221,fabsdo,learnpython,https://www.reddit.com/r/learnpython/comments/fabsdo/an_appreciation_for_this_subreddit_and_if_you_are/,19,"A bit of a different post here, from someone who spends most of their time commenting here, rather than asking questions. 

A while ago, someone here created a thread where a bunch of us got together to brainstorm project ideas in a slack channel/google sheets, and then worked on the projects on Github. I used that as an opportunity to come up with a project: To create a beginner friendly library for creating Terminal User Interfaces (TUIs).

It took a long time since then, and a lot of work, but the excitement everyone here shows for the Language, reminding me of when I was first starting out helped motivate me to the end, and I finished!

You can find it here: https://github.com/jwlodek/py_cui

And an example here: https://github.com/jwlodek/pyautogit

Anyway, apologies for the slight ramble, but basically what I am trying to say/show is don't give up. When I started, I struggled with basic things like everyone does when they are a beginner, but if you stick with it, you will create something you're proud of.",1582808652.0
What was the book on Python that gave you that 'Aha!' moment?,221,euwjk8,learnpython,https://www.reddit.com/r/learnpython/comments/euwjk8/what_was_the_book_on_python_that_gave_you_that/,63,"I'm new to the language. To be fair, I understand there are plenty of book recommendations floating around here. A lot of these are from the days of Python 2, etc... I'm hoping to compile a modern list of crowd favorites in this process of inquiry. 

I'm patiently awaiting the arrival of ""A Smarter Way To Learn Python"", by Mark Meyers, after reading a lot of excellent reviews. I have only read ""Python Crash Course"" so far, and it was quite good, fwiw.",1580167600.0
"Java developer learning Python, created a web app using Flask",221,eudo21,learnpython,https://www.reddit.com/r/learnpython/comments/eudo21/java_developer_learning_python_created_a_web_app/,39,"Hi all, I'm a developer who until recently had mostly worked in Java. My current role has more of a DevOps-focus, and I'm doing a lot more work in Python (3) day-to-day. With that in mind, I decided I wanted to build a small sample app to help me get more familiar with Python.

I decided to build the app using Flask for two reasons: 1) The ""micro""-ness and extensibility of Flask seemed appealing, and 2) I found [Miguel Grinberg's multi-part Flask tutorial](https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world) a fantastic introduction to both the framework and the Python ecosystem. The final product - [www.gtrpg.com](http://www.gtrpg.com) \- uses a lot of the stack covered in Grinberg's tutorial: SQLAlchemy, PostgreSQL, LoginManager, Bootstrap, Heroku.

Overall I found the process of developing with Python & Flask to be quite enjoyable. Writing Python feels very intuitive, and its terse nature is appreciated. With Flask, it was much easier to get things up and running than with, say, Spring Boot. I was impressed by the seamless extension integration; when I added Marshmallow via Flask-Marshmallow to solve some serialization issues, I had things in place and ironed out within a half hour. All in all, Flask will likely become my new go-to framework for rapid MVP prototyping.

Are there any Flask extensions you've found helpful? How do you find Flask vs. Django (another framework I hope to try)?",1580075752.0
I wanna write trading bot.,222,eh58ww,learnpython,https://www.reddit.com/r/learnpython/comments/eh58ww/i_wanna_write_trading_bot/,84,I am learning python. I want to write trading bot. Is there any roadmap? What libraries should I learn?,1577621194.0
"For those who self-taught themselves Python, how did you do it?",220,b5gyfh,learnpython,https://www.reddit.com/r/learnpython/comments/b5gyfh/for_those_who_selftaught_themselves_python_how/,230,"I’ve always been interested in programming (my ultimate career goal is to become a software engineer). I took a detour by focusing on the IT side of things. I realized that IT isn’t for me and want to fully focus on learning to write code. I have experience in Java and know the basics in Python (via college) but I wanted to know how did you all learned Python. Currently, I’m looking at [this](https://www.udemy.com/share/1000kmB0YSdF9aRXg=/) for Udemy and started to read [this as well](https://www.amazon.com/dp/0999685902/ref=cm_sw_r_cp_api_i_DYuMCbGPHV0V9).",1553550540.0
We're doing a FREE Python Course for beginners AGAIN!,216,77naf2,learnpython,https://www.reddit.com/r/learnpython/comments/77naf2/were_doing_a_free_python_course_for_beginners/,33,"TL;DR A 4-weeks online FREE Python course for beginners with a real teacher. Every Monday 7PM (Eastern), starting next Monday October 23rd. Sign up here: **[rmotr.com/free](https://rmotr.com/free-python-online-course)**

---

Hey guys and gals! Here we are again! We're happy to announce that we're having a NEW edition of our FREE Python course: It starts next Monday, October 23rd (check schedule below). We're updating the content, adding more assignments and practice and including a few other interesting things for our 4th class. If you'd like to read **WHY** we're doing this for free, **[read our original post](https://www.reddit.com/r/learnprogramming/comments/6l7qco/were_going_to_do_a_free_python_course_to_teach/?utm_content=title&utm_medium=user&utm_source=reddit&utm_name=frontpage)**.

### Schedule
The course **starts next Monday, October 23rd**. Classes are every **Monday 7PM** (Eastern Time), with a total of 4 classes. There will be homework to work in between classes and projects to practice with other people. It's going to be an online class and you'll be able to ask questions and interact with the instructor constantly.
**All classes are recorded**, so you can watch the recording later in case you miss it.

You can **sign up here: [rmotr.com/free](https://rmotr.com/free-python-online-course)**

### Required knowledge
This is a course for beginners. Not a lot of knowledge is required. What we always recommend is try to do the free part of codecademy (shouldn't take more than a few days): https://www.codecademy.com/learn/python

### A quick note about our previous edition

We were a little bit more careful in our previous edition to collect some data that might (hopefully) throw some light about the state of Python (and coding in general) education. Our previous post had 13.6K views. From those ""visitors"", **2227 signed up** to start the course, but **only 966 completed the process** to create the account in our system and start the course. From those 966 students, **only 370 made it to the first class**. Our last class had **only 47 students** (2% of the interested people).

I think these numbers speak little bit about the state of coding education. Learning to code **is HARD**, and you'll need a lot of determination and hard work to make it your career. **Don't give up! We're doing this to help everybody get started.**

_(We know that some students coudn't attend classes live and watched the recording later, but judging from the number of views in the YouTube channel, those students represented a slow percentage)_

### Questions

Post your comments here or email us at **questions@rmotr.com**",1508517529.0
"I feel like this is one of the most important talks anyone trying to learn python correctly should watch. ""Loop like a native""",221,6ox6hq,learnpython,https://www.reddit.com/r/learnpython/comments/6ox6hq/i_feel_like_this_is_one_of_the_most_important/,23,"https://www.youtube.com/watch?v=EnSu9hHGq5o

Just wow, what an amazing talk this is.",1500754799.0
Am I just too stupid for coding?,220,r8yyiy,learnpython,https://www.reddit.com/r/learnpython/comments/r8yyiy/am_i_just_too_stupid_for_coding/,95,"I'm about 25% through the Scientific Computing with Python course on FreeCodeCamp and I still genuinely don't understand anything. 

I've learned facts like how if/else statements are written, what a boolean is, that == is not as strict as ""is"" statements but I have no idea how to apply any of this. I still don't understand how writing lines of code becomes a website or program or what people who have careers in coding even /do/. 

Is this normal? Is it supposed to just ""click"" someday like physics? 

This is something I've really wanted to learn for the past two years because I feel like everyone should be proficient in technology and Python seems really helpful in my field (biology) but I just don't know how to apply it or how I'm going to be proficient after watching all these courses.

If you have any suggestions or critiques, please tell me. 

Thank you for reading. :,)

Edit: Thank you all so much for all the helpful/kind comments! I'm reading through each one and bookmarking all links and suggestions. I think my main focus from here on out will be understanding CS basics and working on practice exercises/projects. I'm very overwhelmed by how nice this community is. 💕",1638651469.0
Who of you managed to get a promotion / a new job due to your self taught python skills?,219,p8ntwj,learnpython,https://www.reddit.com/r/learnpython/comments/p8ntwj/who_of_you_managed_to_get_a_promotion_a_new_job/,124,"I guess most people of this community (including me) want to learn python to improve their professional skillset, I would love to hear your stories :)",1629534366.0
Yayy! I finished my second project and I guess I found my sweet spot!,220,n6lcl5,learnpython,https://www.reddit.com/r/learnpython/comments/n6lcl5/yayy_i_finished_my_second_project_and_i_guess_i/,31,"Hey folks, many thanks to all of you firstly, I managed to pull off the stint of finishing my second project and it only took me about 4 months, well, I was expecting to pull that off in a week back then, lol! but I am very glad I managed to finish this at least now. I got a lot of support from this sub and the r/dataengineering sub, also I used so many resources from the internet. A big shout out to all coders helping beginners like me. I wanted to be a Data Scientist when I began working on the Project, my idea was to concentrate more on the Sentiment analysis of text data(related to NLP) and visualizations but somewhere in the middle of this  project journey I jumped ships :D, now I desperately want to be a Data Engineer. I don't know why this happened but I truly believe there are too many Data Scientists right now and trying to get into Data Engineering would be a better bet in the long run, also, I just like to play my music and code peacefully rather that worry about a lot of linear algebra and calculus I guess. Anyways, I put in a lot of effort into finding and learning about each piece of this project, I hope this effort could help other beginners looking into data engineering as an option get a quicker start. I also, made clear comments on the readme of the project repo. My PEP8 skills are pathetic, I have to admit, it's something I need to adapt to from my next project.

Brief of the Project:  The Project aims at collecting the posts from Reddit's  r/wallstreetbets daily discussion thread and displaying some analytical  results as an interactive dashboard. I used some AWS services, mind you, it's not serverless!

Note: so because of my change of plans I concentrated more on the data pipeline rather than the visualizations! so, the dashboard isn't that fancy!!

Preview of the app: [app preview](https://user-images.githubusercontent.com/45936015/117406536-d6132c00-af2a-11eb-8ffc-00f6de72f595.mp4)

Link to the github repo: [git repo](https://github.com/ybangaru/wallstreetbets-sentiment-analysis)",1620345237.0
Classes. Please explain like I’m 5.,219,lqu1un,learnpython,https://www.reddit.com/r/learnpython/comments/lqu1un/classes_please_explain_like_im_5/,71,"What exactly do they do? Why are they important? When do you know to use one?  I’ve been learning for a few months, and it seems like, I just can’t wrap my head around this. I feel like it’s not as complicated as I’m making it, in my own mind. Thanks.",1614116996.0
Made my first 'proper' program. Deleting files in a folder ( or and subfolders) based on given conditions.,221,l053lb,learnpython,https://www.reddit.com/r/learnpython/comments/l053lb/made_my_first_proper_program_deleting_files_in_a/,10,"[https://github.com/startedwithpython/easy\_delete](https://github.com/startedwithpython/easy_delete)

You can deletes files in bulk based on extension and the file name ( if file name starts with, has or ends).

&#x200B;

Learned python a little before and started again on December, both times with Automate the Boring Stuff.

The time of deleted file and script end isn't correct (?) though not really a priority regardless.

Any thoughts/advice would be appreciated.",1611007711.0
Finally created a piece of code that I am proud of! I made a calculator using math functions.,219,eshuw3,learnpython,https://www.reddit.com/r/learnpython/comments/eshuw3/finally_created_a_piece_of_code_that_i_am_proud/,18,"Hello everyone,

I have been teaching myself Python for a while and finally created a piece of code that I think works well and runs without error. I am going to include a link to my calculator's github repository. Please let me know if there are ways to improve this project and my python skills in general.

https://github.com/tomtomtumnus/calculator2/blob/master/calculator2.py",1579725740.0
Tasks that can be automated by Python for excel users,222,ch04mu,learnpython,https://www.reddit.com/r/learnpython/comments/ch04mu/tasks_that_can_be_automated_by_python_for_excel/,41,Just want some examples and ideas that I can use python to make my life easier.  I work mostly with excel and reviewing PDFs.,1563923997.0
What are some popular Python career paths other than Data Science and Machine Learning?,218,zko2ax,learnpython,https://www.reddit.com/r/learnpython/comments/zko2ax/what_are_some_popular_python_career_paths_other/,102,"What are some popular Python career paths other than Data Science and Machine Learning?

Is back end web development another common career path?

Thank you in advance!",1670911080.0
Writing the Most Beautiful Code with Python,219,y419yw,learnpython,https://www.reddit.com/r/learnpython/comments/y419yw/writing_the_most_beautiful_code_with_python/,55,"I have been developing software with python for the last 1 year. But like everyone else, I envy those who code better than me. Do you have any resource suggestions that will allow me to always take myself to the next level? For example, writing cleaner code, writing code that conforms to design patt",1665771609.0
What does everyone do when they figure out the solution to the problem you have had within your code for some time?,219,ojua14,learnpython,https://www.reddit.com/r/learnpython/comments/ojua14/what_does_everyone_do_when_they_figure_out_the/,61,"For me, all the happy chemicals enter my brain and it just feels as if I'm floating in the clouds. I love this feeling.",1626227625.0
Object Oriented Programming,215,mt4zdo,learnpython,https://www.reddit.com/r/learnpython/comments/mt4zdo/object_oriented_programming/,42,"Hello,

I am a beginner in Python! I have been doing great at learning the basic syntax and how to use it for different programs but have gotten stuck at trying to learn object oriented programming (classes, attributes, methods, etc.). Anyone know a good resource to learn / practice? Thank you so much!",1618715490.0
Is there an application that prepares you for Google Software Engineer Interviews?,220,knqczq,learnpython,https://www.reddit.com/r/learnpython/comments/knqczq/is_there_an_application_that_prepares_you_for/,47,"I saw one made by a Google Software Engineer, but I’m pretty sure it’s for c++ or something. Is there any interview prep websites for Python? Doesn’t matter if you have to pay or not.",1609422771.0
I am completely new to code and I started using Jupyter lab to learn. I have also started watching 2 year old videos to learn. Were these good choices and is there anybody else that I could watch that has more current videos?,220,gs11s0,learnpython,https://www.reddit.com/r/learnpython/comments/gs11s0/i_am_completely_new_to_code_and_i_started_using/,72,"I’d rather continue using CS Dojo, but his videos are really old. Would it still be helpful in teaching or would I have to change to more up to date info. It has been working out for me so far. I am a complete beginner. I started today.",1590647879.0
I just release my first software! Thanks you all!,221,9fhb65,learnpython,https://www.reddit.com/r/learnpython/comments/9fhb65/i_just_release_my_first_software_thanks_you_all/,52,"Thanks all for your help!

Is a software for calculate the wind load according to the Argentinian National Code.

I want to share it to encourage newbies like me that with consistency we can achieve something.

The code and documentation is in Spanish, sorry for that.

This is the GitHub page: [https://github.com/efdiloreto/Zonda](https://github.com/efdiloreto/Zonda)

[Demostration Video](https://www.youtube.com/watch?v=msCSg1jgo74)

&#x200B;

EDIT:

I forgot to say something. To the Americans engineers,  this project can be adjusted to ASCE 7 easily. The  Argentinian National code is based on the Americans codes. Just make the  translations and change some variables and done! If you need help, contact me. I'm familiar with both codes.",1536839620.0
"Any websites like ProjectEuler, but less... Maths-y?",216,8qtn1t,learnpython,https://www.reddit.com/r/learnpython/comments/8qtn1t/any_websites_like_projecteuler_but_less_mathsy/,32,"I enjoy ProjectEuler, and the first few problems are quite fun but when it gets to the more difficult problems I lose interest, because I'm just not very good at Maths. 

I'm hoping there are websites out there like it, but that don't have such a heavy focus on Maths?",1528906156.0
Python For Finance: Algorithmic Trading Tutorial,218,6jlgd9,learnpython,https://www.reddit.com/r/learnpython/comments/6jlgd9/python_for_finance_algorithmic_trading_tutorial/,16,"Great tutorial, looking for more like this!
https://www.datacamp.com/community/tutorials/finance-python-trading",1498487832.0
"If you had 30 mins to teach a 14-year-old how to use Python, what would you do?",217,17bn5v1,learnpython,https://www.reddit.com/r/learnpython/comments/17bn5v1/if_you_had_30_mins_to_teach_a_14yearold_how_to/,126,"How can you structure a quick 30 min lesson to get a 14 year old interested in programming using Python?

&#x200B;

EDIT: Thanks for all the great suggestions! For context, it's take your kid to work day coming up and one of my managers asked if I can give a crash course in Python to their 14-year-old.",1697732794.0
To that guy who told me about argparse,218,sjb2we,learnpython,https://www.reddit.com/r/learnpython/comments/sjb2we/to_that_guy_who_told_me_about_argparse/,72,"You're the real hero!

Took me a while to work my way through the documentation, but now that's its working it's made my life so much better.",1643866305.0
Is it a bad idea to make a thing that logs into my bank account?,215,rw67fu,learnpython,https://www.reddit.com/r/learnpython/comments/rw67fu/is_it_a_bad_idea_to_make_a_thing_that_logs_into/,134,"I want to download csv files of my transactions once a week to automate some tedious tasks in my personal accounting (downloading and doing some simple formatting.). 

Is it a bad idea to write a program that includes my banking login information? I wouldn't have it on github or anything... 

If I am opening up a can of worms security wise, I can just keep practicing my patience with the tasks as they are. If there are straightforward security safety precautions I can reasonably learn as a beginner-ish skill level, I am happy to learn! 

Just thought I'd check in with the wise folks here for a second opinion. 

Thank you for your time,",1641334228.0
"Off topic, but r/learnpython is my #1 in Reddit Recap. Not sure if proud or ashamed, but I definitely learned Python last year! Thanks everyone :)",218,rdacc4,learnpython,https://www.reddit.com/r/learnpython/comments/rdacc4/off_topic_but_rlearnpython_is_my_1_in_reddit/,25,[Proof](https://imgur.com/a/jxeY1hC) (screenshot),1639147953.0
I was searching Google using a program and got temporarily blacklisted.,218,qb5yg3,learnpython,https://www.reddit.com/r/learnpython/comments/qb5yg3/i_was_searching_google_using_a_program_and_got/,73,I made a program that searches Google for a book title and then finds the book for me so that I can read it online. I was wondering if anyone else ran into the issue wherein searching Google multiple times prompts Google to start giving out Captchas. My current problem is that ordinarily I wouldn't be sending out so many requests but I am trying to test the code out and test multiple sections which means that for each debug I do in an hour it searches Google that many times. Does anyone know how long that blacklisting lasts? When I am testing at home I change the IP address and Mac address of my router and it will let me thru again however I would really like to not do this and would love a legitimate way to not get blacklisted.,1634626476.0
A few questions about tuples,216,lnibl4,learnpython,https://www.reddit.com/r/learnpython/comments/lnibl4/a_few_questions_about_tuples/,84,"I’ve been learning python3 for a couple months and ‘ve also worked on some problems on codeforces and leetcode. I can see the functions and traits of lists, sets and dicts, but still don’t know the use of tuples. 

From what i know, tuples are equivalent to lists except they are immutable. But why we use tuples when you can use lists but not changing anything?
Does this immutable feature can apply on specific cases or what are the main purposes of immutable data? Much appreciated if you could provide an example.",1613747977.0
"Wrote a text based game called Thief Simulator. It's pretty simple at the moment, and could probably be made a little more elegantly. Can I get any feedback on the code or even the game? Thanks!",219,doqqbv,learnpython,https://www.reddit.com/r/learnpython/comments/doqqbv/wrote_a_text_based_game_called_thief_simulator/,47,"It's on Trinket.io [Thief!](https://trinket.io/python3/a7d4d0fad9)

Bug Fixes:

- With a skill of 75 or higher you were told you needed 500 gold even if you had it. Fixed that.

- Lockpick visit is now in a function too. That was just laziness before to be honest.

- Imports on their own individual lines now.

- Removed the time import as someone pointed out I no longer use the time function. I did before to create a ""staggered"" message system, taking 0.5 seconds to display each message.

- Changed the levelchance() function to an actual 1 in 4 chance, not the 25 in 100 chance. I was going to make that more complicated in the beginning, but realized it was too much and never adjusted it to a more simplistic method.

- If a guard catches you it no longer does gold = gold - gold, and instead just gold = 0. I have no idea why I did that. I did some late night work on this at one point and this must have been the product of that. Thanks, u/essence1337, for your help and your patience.",1572359924.0
Free sets of Python Flash Cards,218,b46c16,learnpython,https://www.reddit.com/r/learnpython/comments/b46c16/free_sets_of_python_flash_cards/,68,"Hi, I'm the author of *Python Crash Course* and *Python Flash Cards*. I have 15 sets of the flash cards to give away, if anyone would like them. I have to limit them to US mailing addresses, unless you live somewhere that's reasonable to ship to from the US.

**Update: All of the sets are spoken for. Thank you everyone, I'll still answer any questions people have about Python, or anything else you might be curious about.**

**Also, if anyone wants to order a set you can do so at the [No Starch page](https://nostarch.com/pythonflashcards), and use the code RLEARNPYTHON for 30% off. Thanks. :)**

The flash cards are meant as a supplementary learning resource to go along with any primary Python resource - books, videos, courses, etc. They cover all the basics of Python, and are organized in the following groups:

- Concepts and Vocabulary
- Simple Data Types
- Lists and Tuples
- Dictionaries
- Conditional Statements
- Functions
- Classes
- Testing
- Packages

If you'd like a set, just leave a comment and send a DM with your mailing address. I'm also happy to answer any questions anyone has about the flash cards, or anything Python-related.",1553268143.0
What Python program have you created to make your life easier?,219,501inc,learnpython,https://www.reddit.com/r/learnpython/comments/501inc/what_python_program_have_you_created_to_make_your/,148,Last thread was made over a year ago - I figured it was time for an update!,1472419680.0
I’m looking for Python exercise to expand my skills. Is there any good sources?,216,sx0di2,learnpython,https://www.reddit.com/r/learnpython/comments/sx0di2/im_looking_for_python_exercise_to_expand_my/,24,"Thanks in advance

Edit: wow, thank you all! I love this subreddit!",1645360676.0
Path to learn GUI in python,214,lzqqtp,learnpython,https://www.reddit.com/r/learnpython/comments/lzqqtp/path_to_learn_gui_in_python/,21,"I'm new to programming, start learning python now I can do some simple and pre medium app, all of them with input and output with command line 

im use this [https://github.com/NeuralNine/python-curriculum](https://github.com/NeuralNine/python-curriculum) as a learning path

but now I want  the path to learning some GUI

im interesting in Kivy or a beeware app that wants to make working on mobile devices

I want to build a POS system cross-platform 

any learning path helps me to improve my GUI in python?",1615123941.0
What is the best Python library for filling out forms?,216,lpvcrm,learnpython,https://www.reddit.com/r/learnpython/comments/lpvcrm/what_is_the_best_python_library_for_filling_out/,35,"For my University's gym, I have to sign up for a time slot in advance. The sign-ups open 6 hours beforehand and they always fill up immediately. I wanted to create a bot that could register for a gym slot given the time I want and my login information. What is the best Python library to achieve this task.",1614017337.0
"""x += 1"" vs ""x = x + 1""",218,g2mfg0,learnpython,https://www.reddit.com/r/learnpython/comments/g2mfg0/x_1_vs_x_x_1/,93,"In my introduction to programming class, my professor instructed us that when adding to strings/ints/etc (such when building a count in a for loop) that we should write:

    count = count + 1

as opposed to

    count += 1

which is what I was informally taught prior to this class. Are there certain situations where one is more useful than the other?",1587067333.0
"I wrote a script to abbreviate any Reddit username. It works pretty well on the usernames I have tested so far, so I wanted to share it with the community!",213,cv3o2h,learnpython,https://www.reddit.com/r/learnpython/comments/cv3o2h/i_wrote_a_script_to_abbreviate_any_reddit/,42,"Here's the [script](https://pastebin.com/axuFQJB2) (pastebin)! I put in a `try_it_out` variable in `main()` so that people can experiment with their own usernames.

Here's the output for the 19 off-the-top of my head usernames I choose as samples:

    ---------------------+-------
    | ZR0-Gravity7-pyBoy | ZRGp |
    ---------------------+-------
    |        zr0gravity7 | z0g7 |
    ---------------------+-------
    |           6takeshi | 6tak |
    ---------------------+-------
    |           _69_420_ | _6_4 |
    ---------------------+-------
    |             str8up | str8 |
    ---------------------+-------
    |          theExiled | thEx |
    ---------------------+-------
    |             Exiled | Exil |
    ---------------------+-------
    |    Life_Is_Strange | LIS  |
    ---------------------+-------
    |   MyNameIsBifGames | MNIB |
    ---------------------+-------
    |       MindHeadDumb | MHD  |
    ---------------------+-------
    |            GTXBEEF | GTXB |
    ---------------------+-------
    |            noupper | noup |
    ---------------------+-------
    |       ResQRanger_- | ResQ |
    ---------------------+-------
    |       balista_2234 | b_4  |
    ---------------------+-------
    |          impala_89 | i_9  |
    ---------------------+-------
    |           marzbar_ | mar_ |
    ---------------------+-------
    |              cats7 | cat7 |
    ---------------------+-------
    |  CarBCdMagicLCDoor | CBCM |
    ---------------------+-------",1566704539.0
Thank You,212,bc9q46,learnpython,https://www.reddit.com/r/learnpython/comments/bc9q46/thank_you/,19,"This sub has been very helpful, mostly in an inspirational way.

I am an electrician working in automation, I've been troubleshooting PLC's for almost ten years, programming for around five.

Around two years ago a customer approached me about a project, displaying PLC data in real-time on a big TV.  Through Google I discovered a python module to communicate with AB PLC's. I looked into it, and figured Python wasn't much of a stretch to learn from PHP, which I was used to using from experimenting with web-dev.


As I explored further, I discovered this sub, and Kivy. In around a week of full hours I had a working prototype of what my customer was looking for.

I finished that system, and deployed it, they love it.


Since then, I check this subreddit regularly, and have finished another small program to analyze PLC data and graph it, for real-time observations. Python has become a regular tool in my database of problem solvers. 

I'm nowhere near proficient, still googling, especially with math operators because they are so much different from PHP, but I'm learning, and able to deploy real world working code.


Edit: Thank you for the gold!",1555045152.0
Learn Math and Python at the same time,218,6c3w51,learnpython,https://www.reddit.com/r/learnpython/comments/6c3w51/learn_math_and_python_at_the_same_time/,19,"I am working my way through some math.

I noticed there are lots of:

 - mathy python for mathy people
 - math for python people

But not much of:

 - I don't know much math or much python, but I'd like to learn both at the same time

So, just for myself, I started keeping notes on my math work, along with how to do those calculations and related things in Python.

Here's a sample:

https://github.com/adammichaelwood/python-math/blob/master/probability/Combinations.ipynb

I'll keep doing this for myself regardless, but if other people would find it helpful, I'll make sure to like check my spelling and organize it well etc., and report on progress.

---EDIT---

Based on upvotes, and a few comments, it seems like people are into it.
I've also discovered that my blog software (Nikola) supports Jupyter notebooks.
So... I guess this is a project I'll be doing now.

As you might could tell from this first sample, I am working on probability at the moment.
I also do a little basic arithmetic stuff for those that need it, 
and try to provide explanations of things like itertools and functools when they come up.",1495203351.0
Love Python but can't find any jobs for it.,217,sng4au,learnpython,https://www.reddit.com/r/learnpython/comments/sng4au/love_python_but_cant_find_any_jobs_for_it/,94,"I finished a coding boot camp that centers on the classic full stack technologies (HTML, CSS, JS, Node, React, etc.), but I've grown increasingly infatuated with Python. I much prefer the language over JS (just a matter of taste), but the problem is that I can't find any dev jobs in my area that include Python. Do any of you guys have any experience loving a language that there isn't a market for? Did you stick with it, or were you forced to abandon the language?  


EDIT: The bootcamp I attended was a full-stack program, so we also did backend using primarily Node.js. Getting a job as a boot camp grad has not been an issue for me, as I have managed to land a position doing CRM development and some full-stack applications for clients. ",1644312249.0
how do i become a god at matplotlib,213,gxom7g,learnpython,https://www.reddit.com/r/learnpython/comments/gxom7g/how_do_i_become_a_god_at_matplotlib/,65,"I have fundamental intuition for how to use matplotlib’s most essential features but looking at some of these top kaggle submissions, it seems like there is so much left that I can learn to really boost up my productivity. Are there any good resources for more advanced matplotlib? [This](https://www.kaggle.com/alexandraneagu/titanic-predicting-survival-of-passengers) is the type of skill I’m looking for because that data visualization is beautiful.",1591439540.0
I want to provide Python mentors for people looking to get better. Who could use this?,218,1h51wt,learnpython,https://www.reddit.com/r/learnpython/comments/1h51wt/i_want_to_provide_python_mentors_for_people/,46,"**Who are you?**

You've been working for 20 years and are learning programming to change jobs, you're a kid just learning to program, you're a computer science student looking for some real world project experience, or you're trying to start a startup at some point in the future but need to become a better programmer first.

**Why?**

From personal experience, both as a mentee (student) and a mentor, mentoring is an extremely awesome way to go about learning programming, and especially to supplement the *tons* of existing resources that are already out there.

Having access to a mentor enables you to get help quickly, break through sticking points in your building/learning, and ultimately build more cool stuff.

I would like to help connect experienced developers who want to help out aspiring programmers, or even experienced programmers just looking to pick up a new language (e.g. a rubyist trying to learn functional python).

Existing methods of finding mentors are not easy or user friendly in any way. And unfortunately, if you are lucky enough to find one, it's extremely easy for the relationship to fizzle out just as quick as it began - and then the motivation dies off and you find yourself regressing :(


-------

**To potential mentors**

Potential mentors - hopefully a few potential mentees will comment below and explain why they would love to have you so much - but let me try. Not only is mentoring extremely self-rewarding (and studies have actually shown that helping others will make you happy - I personally believe if you want to help others selflessly that's amazing, but if you do it because it makes you happier then there's nothing wrong with that!), but will also give you access to an inspiring and dedicated individual who will be able to give you not only energy, but also feedback and ideas on your own projects.

------

**What will this cost.**

**$0.00** (No catches. Mentors will be volunteers, and mentees will not pay)

Later on to ensure that this stays alive, I'll explore ways of making money, but the core mentorship offering will always be accessible for free to driven individuals. And ultimately I'd really love to be running a program like this!  

-------

**How will this be structured?**

That's something that I'm currently working out. I've worked on two mentorship programs with Stanford University (one that I started, and one that I work on the team of), but I can really use your help with suggestions and ideas, especially in how we can make this as amazing an experience as possible for the mentors, and also how we can entice and attract more mentors.

-----

**What's the status?**

I already have a few mentors and mentees that have expressed interest! I think to keep the experience as good as possible, I'll do the first class with a specific language only - so please do fill out the survey below if you want to be a mentor or mentee and indicate that you are interested in Python and whatever other language you want to learn or teach :)


**What now? How can you help?**

If you could use this service, let me know! Comment below, do the survey, hire a blimp to send me a message, etc :)

Indicate that you want Python and help me work out what people need most by filling this out.

I'll need a bunch of people to fill this out - but the fact is that large groups are always made up of lone individuals! *Your* response alone will make a difference, and will help me shape the program in a direction that is useful for *you*.

If you have experience running mentoring programs, being mentored with programming, or mentoring students before, please send me a message on reddit or email me with [myusername]@stanford.edu

*Cheers guys*

**Your next step to shape the program:**

[https://docs.google.com/forms/d/19J0zq0j2vIuwcyTgBtWIqdTV67hNONiKVNCFITDfj_I/viewform](https://docs.google.com/forms/d/19J0zq0j2vIuwcyTgBtWIqdTV67hNONiKVNCFITDfj_I/viewform)


**And then register to be notified when this stuff starts.**

[Email form here](http://programmingmentoring.launchrock.com/)",1372286981.0
Can Someone explain to me what is self and init in python?,215,z7ea9b,learnpython,https://www.reddit.com/r/learnpython/comments/z7ea9b/can_someone_explain_to_me_what_is_self_and_init/,31,"I tried learning OOP from many video tutorials and documentation but I'm not understanding why we really need it or what is the use of it.

So it would be really helpful if someone could explain to me like a child what is the need for self and init in python.

Also, If you could tell me how did you fully grasp the concept of OOP in Python that would be really beneficial to me.

Thank You.",1669682573.0
is self learning python programming possible?,216,vxw2q9,learnpython,https://www.reddit.com/r/learnpython/comments/vxw2q9/is_self_learning_python_programming_possible/,155,by watching yt videos or studying python related books?,1657692476.0
"Overlap Between Python, SQL, and TABLEAU?",217,mkasaz,learnpython,https://www.reddit.com/r/learnpython/comments/mkasaz/overlap_between_python_sql_and_tableau/,52," 

Has anyone used all 3 of SQL, Python, and Tableau to produce a single deliverable?

If so, what does that workflow look like? 

I'm hoping to design a project that encompasses all three of these as they are listed on some of the Job requirements I've seen. I'm just wondering if there is too much overlap between these programs to the point where doesn't make sense or provide any benefit to use them all

Any input is welcome, thanks in advance!",1617590126.0
"Wrote a simple code that gives ""xp"" when you have IDE open. Pointers wanted.",213,f1h6he,learnpython,https://www.reddit.com/r/learnpython/comments/f1h6he/wrote_a_simple_code_that_gives_xp_when_you_have/,45,"Here is my code below. Basically all it does is check that PyCharm is open, gives xp based on how long it has been open then saves this to an excel sheet.

I'm just a beginner so looking for any way I can clean this up or pointers in general. Any help is appreciated. Also any thoughts on features to add to this would be cool. Thanks!




    import psutil
    import time
    import openpyxl
    import math
    from os import path
    
    filepath = ""C:\\Users\\aaaa\\Desktop\\python\\LevelUp2\\save.xlsx""
    
    def main():
        if not path.exists(filepath):
            buildsave()
        gettimeplayed()
    
    def checkIfProcessRunning(processName):
        for proc in psutil.process_iter():
                if processName.lower() in proc.name().lower():
                    return(1)
    
    def getstarttime():
        starttime=time.time()
        if checkIfProcessRunning('PyCharm'):
            return(starttime)
    
    def gettimeplayed():
        totaltime = getloadtime()
        while checkIfProcessRunning('PyCharm'):
            timeplayed1 = getstarttime()
            timeplayed2 = getstarttime()
            timedif = math.ceil(timeplayed2-timeplayed1)
            totaltime = math.ceil(totaltime + timedif)
            print(str(10 * int(totaltime)) + 'xp')
            if totaltime%50 == 0:
                savegame(totaltime)
    
    def buildsave():
        wb = openpyxl.Workbook()
        ws = wb.active
        ws.title = 'basic info'
        ws['A1'] = 'time played'
        wb.save(filepath)
    
    def savegame(savetime):
        wb = openpyxl.load_workbook(filepath)
        ws = wb.active
        ws['B1'] = savetime
        wb.save(filepath)
    
    def getloadtime():
        wb = openpyxl.load_workbook(filepath)
        ws = wb.active
        if ws['B1'].value:
            return ws['B1'].value
        else:
            return 0
    
    main()",1581290866.0
Falling in love with coding…,211,10y604d,learnpython,https://www.reddit.com/r/learnpython/comments/10y604d/falling_in_love_with_coding/,50,"I tend to be a person who gets hyper fixated on things, I obsess over them and then suddenly I have zero passion for it whatsoever. Well, I’ve recently started learning python and I’ve never had something come so naturally to me in my life. I’m only on my 5th day and all I can think about during work is going home and building new programs or learning new concepts. My only fear is that this passion will eventually fade. For people who have been coding for a long time is this normal in the beginning and at what point in the coding journey do you think you’re no longer having fun?",1675976314.0
Finally finished my first big project :),212,p0m7r1,learnpython,https://www.reddit.com/r/learnpython/comments/p0m7r1/finally_finished_my_first_big_project/,25,"I had learnt the basics and wanted to do something fun. What I did was a login system, which stores the information from a text file. Once logged in, the user can send ‘cryptocurrency’ to other users by editing a text file which acts as the ‘bank’ really proud :)",1628454294.0
Celebration! Progress!,210,mkpq61,learnpython,https://www.reddit.com/r/learnpython/comments/mkpq61/celebration_progress/,24,"No small thing for me. :)   
I had this idea where I wanted to know if a book was appropriate for children. I wanted my 11 year old to read War of Art by Steven Pressfield, but I didn't want to read the whole book to check and see. 

So my idea was to get the ebook, scan it using Python, create a dictionary, check for targeted keywords and get my answer! 

I did it! Thanks to all those people who have contributed code and packages around they thought no one might use. And I also played around with creating word clouds from the book content as well. 

It was just so fun to be able to take an idea and flush it out in an hour or two.",1617642913.0
"Where to start with multiprocessing, threading, asynchronous code",213,k0sog0,learnpython,https://www.reddit.com/r/learnpython/comments/k0sog0/where_to_start_with_multiprocessing_threading/,27,"Hello everyone. As I get better at Python I try to optimize my scripts at much as possible, but sometimes you can only do so much on your part.

My simple problem: I have to make \~100 requests at once to an API that take about 1 second to return each. Running them one after another would take about 100 seconds. So why not send them all at once? That would improve waiting time significantly. 

As I understand what I'm trying to do is called parallelism, or in broader terms, concurrency. [This async IO introduction](https://realpython.com/async-io-python/#the-10000-foot-view-of-async-io) tells me that parallelism is better suited for CPU-bound tasks, while threading and async IO for IO-bound tasks, which would be my case (?).

But I've found out that async IO does not provide parallelism functions, only concurrency. So is it better for me to start with the multiprocessing and threading modules (and which one?) rather than async IO? I still need to grasp the difference betweeen parallelism and threading, anyway.",1606312885.0
I made a Sudoku game.,213,isg086,learnpython,https://www.reddit.com/r/learnpython/comments/isg086/i_made_a_sudoku_game/,11,"I created this Sudoku game. It's not entirely finished, but it's at the point where it can actually be played.  I'd appreciate if anyone could look at the game (and code) and give me feedback. The code is at [github.](https://github.com/Eldin00/py-sudoku)

Thanks.",1600066919.0
For those who have completed Angela Yu's 100 Days of code: What did you learn next?,214,vv48ac,learnpython,https://www.reddit.com/r/learnpython/comments/vv48ac/for_those_who_have_completed_angela_yus_100_days/,55,"Im on Day 35, Looking forward into completing a few of the portfolio projects. 

I constantly see people say ""you wont be job ready after one of these courses"" so my question is for those who've completed this course or similar courses, what did you learn next or what did you have to learn before getting a job?",1657380787.0
What is considered being advanced in Python?,212,ugxlfd,learnpython,https://www.reddit.com/r/learnpython/comments/ugxlfd/what_is_considered_being_advanced_in_python/,139,When can I say that I can truly code in Python? Is there some kind of test or an exercise?,1651519808.0
What is the likelihood of landing a entry level python dev job with just online training and no BS?,209,q5kgvj,learnpython,https://www.reddit.com/r/learnpython/comments/q5kgvj/what_is_the_likelihood_of_landing_a_entry_level/,106,I'm thinking of changing fields and this seems like a very in demand path.  I wouldn't expect to make top dollar if course but if I could make equal or more than I do welding that would be perfect.,1633912664.0
"I'm just starting with python (it's very basic I know) but every time I run this, ill type a location but then no matter if I say cold or hot or anything else it always gives the first ""advice""",214,n1rm5x,learnpython,https://www.reddit.com/r/learnpython/comments/n1rm5x/im_just_starting_with_python_its_very_basic_i/,58,Here is the link to screenshot of the code: [https://ibb.co/NZPV7Zt](https://ibb.co/NZPV7Zt),1619781188.0
High School teacher needs help automatically testing student programs,211,kg7y2u,learnpython,https://www.reddit.com/r/learnpython/comments/kg7y2u/high_school_teacher_needs_help_automatically/,41," I teach an Intro to CS High School class and am looking for a way to **automatically** test student programs that have user input - i.e. programs that use 

    input()

Is there a way to run a student program from the command line and provide specific user input automatically rather than having to enter it manually myself? If I could do this then I could automate running the program and comparing the output of the program with the expected output to see if the program is working properly.",1608385523.0
Making Python code into an executable app on Mac and Windows?,208,afjoup,learnpython,https://www.reddit.com/r/learnpython/comments/afjoup/making_python_code_into_an_executable_app_on_mac/,45,"I've been learning Python for the last couple of days and have ended up creating a program that can help me save almost an hour in my business economics exam at the end of my school year. I'm using it by by running it through terminal and typing in my input there.

Here's the problem: I want to share the program with the rest of the people from my school year, and therefore I want to make it more user friendly by making it into an actual application that they can just run and type their inputs into input fields.

What do I use to make it into an actual application? And is it possible to make it executable for both Windows and Mac users?",1547389053.0
Am I Cheating?,214,199l2go,learnpython,https://www.reddit.com/r/learnpython/comments/199l2go/am_i_cheating/,165,"So I am learning Python for the first time ever and I am doing a course on Udemy.

I have put around 80hrs into it so far. I am finding I can read code absolutely fine and understand what is going on. If I am quizzed, I can answer what the code is doing etc. Or when certain conditions should be used and what they do etc.

When it comes to writing out the code, I can do it when the program is not too complicated. But I get stuck, I know what I want to do, I just forget what I need to type. I've noticed a lot of people and on this course that you then tend to Google the problem and look at someone elses code and then fix your code from that process. It kind of gives you the prompt to know what you need to write.


But I am finding that inefficent at times. I created a GPT called Python Pal. I tend to start tackling the challenge and then when I get stuck rather than Googling. I upload my project to the GPT ask it to work through my code, explain what I have done and whether it thinks it is efficient so far. I then ask it things like..... I know want to create a function to do X but I am struggling to figure out what value I need to pass into the function. Can you show me an example?


It then does it, and I get past the stuck point and I can complete the program. So like, I treat it a bit like a tutor when I get stuck. I use it to explain the code to me, I ask it questions when I don't understand concepts and I use it for guidance, rather than using Google.


It's massively helped me understand Python and complete the challenges. The Tutor on my onlin course will cover  a concept but sometimes I have questions, which I obvs can't ask her so I ask the GPT instead and I find it helps my learning.


But is this cheating? I've just created the snake game in pycharm using the Turtle module. I've had to ask it things like.... How do I get the screen to update etc? Rather than reading through the Turtle documentation. I just find this quicker and easier, and ultimately more efficient and I complete the project quicker.",1705564974.0
What's a good resource for a biochemist to learn basic Python in say... 14 days?,209,fkxp80,learnpython,https://www.reddit.com/r/learnpython/comments/fkxp80/whats_a_good_resource_for_a_biochemist_to_learn/,102,"Hey all

I'm a biochemistry major who wants to pick up some basic Python skills, especially because my future interests are learning towards protein design (especially the Rosetta software). Since I'm WFH for the foreseeable future and most of my work is usually benchwork, I am looking for something productive to do that still helps my experimental/scientific development.

I worked through the codeacademy course and have been able to do some basic practice problems from [practicepython.org](https://practicepython.org), but I'm a bit rusty since I haven't actually practiced in a couple months and I haven't really developed a working or muscle memory for it yet.",1584567364.0
Learning Python but i am dumb,212,10ilqtl,learnpython,https://www.reddit.com/r/learnpython/comments/10ilqtl/learning_python_but_i_am_dumb/,108,"Hello everyone, i am New to programming. Started learning python but i don’t understand it easily compared to other people in my class understand it better than me , and its making me really depressed and feel anxious
I will appreciate any kind of help",1674400149.0
Day 90 on Angela Yu,212,yq9w5f,learnpython,https://www.reddit.com/r/learnpython/comments/yq9w5f/day_90_on_angela_yu/,93,"I just finished up day 90 of Angela Yu’s 100 days of coding and I’m making that final stretch.

About 6 months ago I got a position as a cybersecurity analyst and I saw I had tons of free content available to subscribe to on Udemy.  So I’ve decided to improve myself and the last 4 months I’ve been doing this course.

It hasn’t be easy. I skipped the vast majority of web design and taken more than 1 day off, but I’ve really seen myself become this wholly different person from day 1 to now.

In the background I’ve been working on this project using the VirusTotal API and Tkinter. It turns out our firewall doesn’t allow the use of this API… but it’s been good to design and make it anyways.

Coding isn’t impossible! Just got to visualize the goal and keep pushing toward it. Once I’m done with this it’s time to earn my CISSP.",1667972473.0
New to Python code testing. What frameworks/references/etc. would you suggest I check out?,213,j2imhf,learnpython,https://www.reddit.com/r/learnpython/comments/j2imhf/new_to_python_code_testing_what/,17,"Currently I'm using unittest to run unit tests on a Pyside2 application that runs a lot of computations, and has a GUI component involving maps. Was my first time to do code testing that's not just my own code, I realized that there really is a transition from the developer mindset to a testing mindset. Although my issue right now is I don't know what frameworks I should use. So was wondering of getting people's opinions on this.  


Or if there are pre-made systems already for tracking these kinds of things, which I think there already are. Especially for that tracking and statistics part.

I'm thinking of trying out Pytest with it since it gets recommended a lot. Although to be honest right now I'm not sure how it would make things better when I already use unittest?

I was wondering how to do things with ""stats"" and things for this.

Currently I have a runner on Github Actions for running these tests on Windows, Mac, and Ubuntu. I was thinking of using travis-ci, but the repo owner isn't me, and we felt that at least with Github Actions all the devs coudl see the things happening.

I'm thinking of writing: 1) integration tests, 2) user acceptance tests (so just documentation mainly), 3) perhaps UI automation tests, or 4) behavior driven tests with Lettuce (not sure if this is a good thing to check out? But it seemed an ok thing to do to write out scenarios to test), or the Robot Framework. In addition to the existing unit tests. 

So far have been trying to search around the internet. Read Concise Guide to Software Testing - Gerard O'Regan and Testing Python - David Sale. Currently reading The Art of Software Testing - Glenford Myers. Also checking out xUnit Test Patterns - Gerard Meszaros, but this one is just too long and I feel bombarded already by all the new info.  


Any help on this would be great thanks! :D",1601456310.0
What real world tasks or problems have you automated/solved using python?,210,9xuio1,learnpython,https://www.reddit.com/r/learnpython/comments/9xuio1/what_real_world_tasks_or_problems_have_you/,171,"EDIT: Thanks for all of your answers (so far).

I'm a beginner and these are really awe inspiring (and just plain old inspiring) to read through. You guys are awesome!",1542439217.0
